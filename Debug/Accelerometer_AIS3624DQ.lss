
Accelerometer_AIS3624DQ.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00006564  00000000  00000000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     000001e8  20000000  00006564  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000000c4  200001e8  0000674c  000201e8  2**2
                  ALLOC
  3 .stack        00000804  200002ac  00006810  000201e8  2**0
                  ALLOC
  4 .ARM.attributes 00000028  00000000  00000000  000201e8  2**0
                  CONTENTS, READONLY
  5 .comment      00000059  00000000  00000000  00020210  2**0
                  CONTENTS, READONLY
  6 .debug_info   000225e0  00000000  00000000  00020269  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000036cf  00000000  00000000  00042849  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00004d07  00000000  00000000  00045f18  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 000004c0  00000000  00000000  0004ac1f  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000540  00000000  00000000  0004b0df  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  000193e0  00000000  00000000  0004b61f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000a442  00000000  00000000  000649ff  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    0007bb76  00000000  00000000  0006ee41  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  00001a4c  00000000  00000000  000ea9b8  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
       0:	b0 0a 00 20 f9 16 00 00 f5 16 00 00 f5 16 00 00     ... ............
	...
      2c:	f5 16 00 00 00 00 00 00 00 00 00 00 f5 16 00 00     ................
      3c:	f5 16 00 00 f5 16 00 00 f5 16 00 00 f5 16 00 00     ................
      4c:	f5 16 00 00 f5 16 00 00 f5 16 00 00 f5 16 00 00     ................
      5c:	00 00 00 00 f5 16 00 00 f5 16 00 00 f5 16 00 00     ................
      6c:	f5 16 00 00 f5 16 00 00 f5 16 00 00 f5 16 00 00     ................
      7c:	f5 16 00 00 f5 16 00 00 f5 16 00 00 f5 16 00 00     ................
      8c:	f5 16 00 00 f5 16 00 00 f5 16 00 00 f5 16 00 00     ................
      9c:	f5 16 00 00 f5 16 00 00 f5 16 00 00 f5 16 00 00     ................
	...

000000b4 <__do_global_dtors_aux>:
      b4:	b510      	push	{r4, lr}
      b6:	4c06      	ldr	r4, [pc, #24]	; (d0 <__do_global_dtors_aux+0x1c>)
      b8:	7823      	ldrb	r3, [r4, #0]
      ba:	2b00      	cmp	r3, #0
      bc:	d107      	bne.n	ce <__do_global_dtors_aux+0x1a>
      be:	4b05      	ldr	r3, [pc, #20]	; (d4 <__do_global_dtors_aux+0x20>)
      c0:	2b00      	cmp	r3, #0
      c2:	d002      	beq.n	ca <__do_global_dtors_aux+0x16>
      c4:	4804      	ldr	r0, [pc, #16]	; (d8 <__do_global_dtors_aux+0x24>)
      c6:	e000      	b.n	ca <__do_global_dtors_aux+0x16>
      c8:	bf00      	nop
      ca:	2301      	movs	r3, #1
      cc:	7023      	strb	r3, [r4, #0]
      ce:	bd10      	pop	{r4, pc}
      d0:	200001e8 	.word	0x200001e8
      d4:	00000000 	.word	0x00000000
      d8:	00006564 	.word	0x00006564

000000dc <frame_dummy>:
      dc:	4b08      	ldr	r3, [pc, #32]	; (100 <frame_dummy+0x24>)
      de:	b510      	push	{r4, lr}
      e0:	2b00      	cmp	r3, #0
      e2:	d003      	beq.n	ec <frame_dummy+0x10>
      e4:	4907      	ldr	r1, [pc, #28]	; (104 <frame_dummy+0x28>)
      e6:	4808      	ldr	r0, [pc, #32]	; (108 <frame_dummy+0x2c>)
      e8:	e000      	b.n	ec <frame_dummy+0x10>
      ea:	bf00      	nop
      ec:	4807      	ldr	r0, [pc, #28]	; (10c <frame_dummy+0x30>)
      ee:	6803      	ldr	r3, [r0, #0]
      f0:	2b00      	cmp	r3, #0
      f2:	d100      	bne.n	f6 <frame_dummy+0x1a>
      f4:	bd10      	pop	{r4, pc}
      f6:	4b06      	ldr	r3, [pc, #24]	; (110 <frame_dummy+0x34>)
      f8:	2b00      	cmp	r3, #0
      fa:	d0fb      	beq.n	f4 <frame_dummy+0x18>
      fc:	4798      	blx	r3
      fe:	e7f9      	b.n	f4 <frame_dummy+0x18>
     100:	00000000 	.word	0x00000000
     104:	200001ec 	.word	0x200001ec
     108:	00006564 	.word	0x00006564
     10c:	00006564 	.word	0x00006564
     110:	00000000 	.word	0x00000000

00000114 <_Z20configure_i2c_masterv>:
//! [timeout]
#define TIMEOUT 0

//! [initialize_i2c]
void configure_i2c_master(void)
{
     114:	b510      	push	{r4, lr}
static inline void i2c_master_get_config_defaults(
		struct i2c_master_config *const config)
{
	/*Sanity check argument */
	Assert(config);
	config->baud_rate        = I2C_MASTER_BAUD_RATE_100KHZ;
     116:	4c1d      	ldr	r4, [pc, #116]	; (18c <_Z20configure_i2c_masterv+0x78>)
     118:	2364      	movs	r3, #100	; 0x64
     11a:	6023      	str	r3, [r4, #0]
#ifdef FEATURE_I2C_FAST_MODE_PLUS_AND_HIGH_SPEED
	config->baud_rate_high_speed = I2C_MASTER_BAUD_RATE_3400KHZ;
     11c:	4b1c      	ldr	r3, [pc, #112]	; (190 <_Z20configure_i2c_masterv+0x7c>)
     11e:	6063      	str	r3, [r4, #4]
	config->transfer_speed       = I2C_MASTER_SPEED_STANDARD_AND_FAST;
     120:	2300      	movs	r3, #0
     122:	60a3      	str	r3, [r4, #8]
#endif
	config->generator_source = GCLK_GENERATOR_0;
     124:	7323      	strb	r3, [r4, #12]
	config->run_in_standby   = false;
     126:	7623      	strb	r3, [r4, #24]
	config->start_hold_time  = I2C_MASTER_START_HOLD_TIME_300NS_600NS;
     128:	2280      	movs	r2, #128	; 0x80
     12a:	0392      	lsls	r2, r2, #14
     12c:	6122      	str	r2, [r4, #16]
	config->buffer_timeout   = 65535;
	config->unknown_bus_state_timeout = 65535;
     12e:	2201      	movs	r2, #1
     130:	4252      	negs	r2, r2
     132:	82a2      	strh	r2, [r4, #20]
	config->pinmux_pad0      = PINMUX_DEFAULT;
     134:	61e3      	str	r3, [r4, #28]
	config->pinmux_pad1      = PINMUX_DEFAULT;
     136:	6223      	str	r3, [r4, #32]
	config->scl_low_timeout  = false;
     138:	3225      	adds	r2, #37	; 0x25
     13a:	54a3      	strb	r3, [r4, r2]
	config->inactive_timeout = I2C_MASTER_INACTIVE_TIMEOUT_DISABLED;
     13c:	62a3      	str	r3, [r4, #40]	; 0x28
#ifdef FEATURE_I2C_SCL_STRETCH_MODE
	config->scl_stretch_only_after_ack_bit = false;
     13e:	3208      	adds	r2, #8
     140:	54a3      	strb	r3, [r4, r2]
#endif
#ifdef FEATURE_I2C_SCL_EXTEND_TIMEOUT
	config->slave_scl_low_extend_timeout   = false;
     142:	3201      	adds	r2, #1
     144:	54a3      	strb	r3, [r4, r2]
	config->master_scl_low_extend_timeout  = false;
     146:	3201      	adds	r2, #1
     148:	54a3      	strb	r3, [r4, r2]
#endif
	/* The typical value is 215ns */
	config->sda_scl_rise_time_ns = 215;
     14a:	33d7      	adds	r3, #215	; 0xd7
     14c:	8623      	strh	r3, [r4, #48]	; 0x30
	
	i2c_master_get_config_defaults(&config_i2c_master);

	/* Change buffer timeout to something longer. */
	config_i2c_master.buffer_timeout = 10000;
     14e:	4b11      	ldr	r3, [pc, #68]	; (194 <_Z20configure_i2c_masterv+0x80>)
     150:	82e3      	strh	r3, [r4, #22]
	/* Initialize and enable device with config. */
	i2c_master_init(&i2c_master_instance, CONF_I2C_MASTER_MODULE, &config_i2c_master);
     152:	0020      	movs	r0, r4
     154:	3034      	adds	r0, #52	; 0x34
     156:	0022      	movs	r2, r4
     158:	490f      	ldr	r1, [pc, #60]	; (198 <_Z20configure_i2c_masterv+0x84>)
     15a:	4b10      	ldr	r3, [pc, #64]	; (19c <_Z20configure_i2c_masterv+0x88>)
     15c:	4798      	blx	r3
{
	/* Sanity check of arguments */
	Assert(module);
	Assert(module->hw);

	SercomI2cm *const i2c_module = &(module->hw->I2CM);
     15e:	6b62      	ldr	r2, [r4, #52]	; 0x34
	return (i2c_hw->SYNCBUSY.reg & SERCOM_I2CM_SYNCBUSY_MASK);
     160:	2107      	movs	r1, #7
     162:	69d3      	ldr	r3, [r2, #28]
	while (i2c_master_is_syncing(module)) {
     164:	4219      	tst	r1, r3
     166:	d1fc      	bne.n	162 <_Z20configure_i2c_masterv+0x4e>

	/* Wait for module to sync */
	_i2c_master_wait_for_sync(module);

	/* Enable module */
	i2c_module->CTRLA.reg |= SERCOM_I2CM_CTRLA_ENABLE;
     168:	6813      	ldr	r3, [r2, #0]
     16a:	2102      	movs	r1, #2
     16c:	430b      	orrs	r3, r1
     16e:	6013      	str	r3, [r2, #0]
	system_interrupt_enable(_sercom_get_interrupt_vector(module->hw));
#endif
	/* Start timeout if bus state is unknown */
	while (!(i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE(1))) {
		timeout_counter++;
		if(timeout_counter >= (module->unknown_bus_state_timeout)) {
     170:	4b06      	ldr	r3, [pc, #24]	; (18c <_Z20configure_i2c_masterv+0x78>)
     172:	8f5c      	ldrh	r4, [r3, #58]	; 0x3a
	uint32_t timeout_counter = 0;
     174:	2300      	movs	r3, #0
	while (!(i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE(1))) {
     176:	2010      	movs	r0, #16
     178:	8b51      	ldrh	r1, [r2, #26]
     17a:	4201      	tst	r1, r0
     17c:	d104      	bne.n	188 <_Z20configure_i2c_masterv+0x74>
		timeout_counter++;
     17e:	3301      	adds	r3, #1
		if(timeout_counter >= (module->unknown_bus_state_timeout)) {
     180:	42a3      	cmp	r3, r4
     182:	d3f9      	bcc.n	178 <_Z20configure_i2c_masterv+0x64>
			/* Timeout, force bus state to idle */
			i2c_module->STATUS.reg = SERCOM_I2CM_STATUS_BUSSTATE(1);
     184:	2310      	movs	r3, #16
     186:	8353      	strh	r3, [r2, #26]
	//! [enable_module]
	i2c_master_enable(&i2c_master_instance);
	
}
     188:	bd10      	pop	{r4, pc}
     18a:	46c0      	nop			; (mov r8, r8)
     18c:	20000204 	.word	0x20000204
     190:	00000d48 	.word	0x00000d48
     194:	00002710 	.word	0x00002710
     198:	42001000 	.word	0x42001000
     19c:	00000589 	.word	0x00000589

000001a0 <_ZN13AIS3624DQcore13readRegister8EPhS0_>:
AIS3624DQcore :: AIS3624DQcore(uint8_t i2cADD){ //Core constructor
	
	I2CAddress =  i2cADD;
}

status_t AIS3624DQcore::readRegister8(uint8_t reg[], uint8_t* data_){ // reading 8bit registers
     1a0:	b5f0      	push	{r4, r5, r6, r7, lr}
     1a2:	46c6      	mov	lr, r8
     1a4:	b500      	push	{lr}
     1a6:	b084      	sub	sp, #16
     1a8:	000d      	movs	r5, r1
     1aa:	4690      	mov	r8, r2
		.data_length = 1,
		.data        = reg,
		.ten_bit_address = false,
		.high_speed      = false,
		.hs_master_code  = 0x0,
	};
     1ac:	ac01      	add	r4, sp, #4
     1ae:	220c      	movs	r2, #12
     1b0:	2100      	movs	r1, #0
     1b2:	0020      	movs	r0, r4
     1b4:	4b14      	ldr	r3, [pc, #80]	; (208 <_ZN13AIS3624DQcore13readRegister8EPhS0_+0x68>)
     1b6:	4798      	blx	r3
     1b8:	2318      	movs	r3, #24
     1ba:	8023      	strh	r3, [r4, #0]
     1bc:	3b17      	subs	r3, #23
     1be:	8063      	strh	r3, [r4, #2]
     1c0:	6065      	str	r5, [r4, #4]
	
	/* Write buffer to slave until success. */
	//! [write_packet]
	while (i2c_master_write_packet_wait_no_stop(&i2c_master_instance, &packet) !=
     1c2:	4d12      	ldr	r5, [pc, #72]	; (20c <_ZN13AIS3624DQcore13readRegister8EPhS0_+0x6c>)
     1c4:	0028      	movs	r0, r5
     1c6:	3034      	adds	r0, #52	; 0x34
     1c8:	0021      	movs	r1, r4
     1ca:	4b11      	ldr	r3, [pc, #68]	; (210 <_ZN13AIS3624DQcore13readRegister8EPhS0_+0x70>)
     1cc:	4798      	blx	r3
	}

	/* Read from slave until success. */
	//! [read_packet]
	static uint8_t readBuffer[1];
	packet.data = readBuffer;
     1ce:	3540      	adds	r5, #64	; 0x40
     1d0:	6065      	str	r5, [r4, #4]
	while (i2c_master_write_packet_wait_no_stop(&i2c_master_instance, &packet) !=
     1d2:	1e45      	subs	r5, r0, #1
     1d4:	41a8      	sbcs	r0, r5
     1d6:	4245      	negs	r5, r0
     1d8:	b2ad      	uxth	r5, r5
     1da:	3501      	adds	r5, #1
	packet.data = readBuffer;
     1dc:	2400      	movs	r4, #0
		
	/* Write buffer to slave until success. */
	//! [write_packet]
	while (i2c_master_read_packet_wait(&i2c_master_instance, &packet) !=
     1de:	4e0b      	ldr	r6, [pc, #44]	; (20c <_ZN13AIS3624DQcore13readRegister8EPhS0_+0x6c>)
     1e0:	3634      	adds	r6, #52	; 0x34
     1e2:	4f0c      	ldr	r7, [pc, #48]	; (214 <_ZN13AIS3624DQcore13readRegister8EPhS0_+0x74>)
     1e4:	a901      	add	r1, sp, #4
     1e6:	0030      	movs	r0, r6
     1e8:	47b8      	blx	r7
     1ea:	2800      	cmp	r0, #0
     1ec:	d002      	beq.n	1f4 <_ZN13AIS3624DQcore13readRegister8EPhS0_+0x54>
     1ee:	3401      	adds	r4, #1
	STATUS_OK) {
		/* Increment timeout counter and check if timed out. */
		if (timeout++ == TIMEOUT) {
     1f0:	42ac      	cmp	r4, r5
     1f2:	d1f7      	bne.n	1e4 <_ZN13AIS3624DQcore13readRegister8EPhS0_+0x44>
			break;
		}
	}
	
	*data_ = readBuffer[0];
     1f4:	2340      	movs	r3, #64	; 0x40
     1f6:	4a05      	ldr	r2, [pc, #20]	; (20c <_ZN13AIS3624DQcore13readRegister8EPhS0_+0x6c>)
     1f8:	5cd3      	ldrb	r3, [r2, r3]
     1fa:	4642      	mov	r2, r8
     1fc:	7013      	strb	r3, [r2, #0]
	//printf("read: %x\r\n", readBuffer[0]);
	
}
     1fe:	b004      	add	sp, #16
     200:	bc04      	pop	{r2}
     202:	4690      	mov	r8, r2
     204:	bdf0      	pop	{r4, r5, r6, r7, pc}
     206:	46c0      	nop			; (mov r8, r8)
     208:	0000185d 	.word	0x0000185d
     20c:	20000204 	.word	0x20000204
     210:	00000b89 	.word	0x00000b89
     214:	00000b61 	.word	0x00000b61

00000218 <_ZN9AIS3624DQ5beginEv>:
status_t AIS3624DQcore :: writeRegister(uint8_t add, uint8_t val){ //write 8bit registers
	
	
}

status_t AIS3624DQ :: begin(){
     218:	b5f0      	push	{r4, r5, r6, r7, lr}
     21a:	b085      	sub	sp, #20

// this begins the low level comm bus
status_t AIS3624DQcore::beginCore(){
	
  status_t returnError = IMU_SUCCESS;
  configure_i2c_master();
     21c:	4b0a      	ldr	r3, [pc, #40]	; (248 <_ZN9AIS3624DQ5beginEv+0x30>)
     21e:	4798      	blx	r3
	   };
     220:	ac01      	add	r4, sp, #4
     222:	4d0a      	ldr	r5, [pc, #40]	; (24c <_ZN9AIS3624DQ5beginEv+0x34>)
     224:	0023      	movs	r3, r4
     226:	cd07      	ldmia	r5!, {r0, r1, r2}
     228:	c307      	stmia	r3!, {r0, r1, r2}
	   i2c_master_write_packet_wait(&i2c_master_instance, &packet);
     22a:	4e09      	ldr	r6, [pc, #36]	; (250 <_ZN9AIS3624DQ5beginEv+0x38>)
     22c:	3634      	adds	r6, #52	; 0x34
     22e:	0021      	movs	r1, r4
     230:	0030      	movs	r0, r6
     232:	4f08      	ldr	r7, [pc, #32]	; (254 <_ZN9AIS3624DQ5beginEv+0x3c>)
     234:	47b8      	blx	r7
	   packet = {
     236:	0023      	movs	r3, r4
     238:	cd07      	ldmia	r5!, {r0, r1, r2}
     23a:	c307      	stmia	r3!, {r0, r1, r2}
	   i2c_master_write_packet_wait(&i2c_master_instance, &packet);
     23c:	0021      	movs	r1, r4
     23e:	0030      	movs	r0, r6
     240:	47b8      	blx	r7
}
     242:	b005      	add	sp, #20
     244:	bdf0      	pop	{r4, r5, r6, r7, pc}
     246:	46c0      	nop			; (mov r8, r8)
     248:	00000115 	.word	0x00000115
     24c:	00006170 	.word	0x00006170
     250:	20000204 	.word	0x20000204
     254:	00000b75 	.word	0x00000b75

00000258 <_ZN9AIS3624DQ16XYZdataAvailableEv>:
bool AIS3624DQ :: XYZdataAvailable(){
     258:	b510      	push	{r4, lr}
     25a:	b082      	sub	sp, #8
	uint8_t writeBuffer[1] = { AIS3624DQ_ACC_STAT_REG };
     25c:	a901      	add	r1, sp, #4
     25e:	2327      	movs	r3, #39	; 0x27
     260:	700b      	strb	r3, [r1, #0]
	readRegister8(writeBuffer, &dummy);	
     262:	466b      	mov	r3, sp
     264:	1ddc      	adds	r4, r3, #7
     266:	0022      	movs	r2, r4
     268:	4b03      	ldr	r3, [pc, #12]	; (278 <_ZN9AIS3624DQ16XYZdataAvailableEv+0x20>)
     26a:	4798      	blx	r3
	if (dummy & 0x04 != 0)
     26c:	7823      	ldrb	r3, [r4, #0]
     26e:	2001      	movs	r0, #1
     270:	4018      	ands	r0, r3
}
     272:	b002      	add	sp, #8
     274:	bd10      	pop	{r4, pc}
     276:	46c0      	nop			; (mov r8, r8)
     278:	000001a1 	.word	0x000001a1

0000027c <_ZN9AIS3624DQ13readRawAccelXEPs>:
void AIS3624DQ::readRawAccelX( int16_t* data_){
     27c:	b5f0      	push	{r4, r5, r6, r7, lr}
     27e:	b085      	sub	sp, #20
     280:	0006      	movs	r6, r0
     282:	000f      	movs	r7, r1
	uint8_t writeBuffer[1] = { AIS3624DQ_ACC_OUTX_L_XL };
     284:	a902      	add	r1, sp, #8
     286:	2328      	movs	r3, #40	; 0x28
     288:	700b      	strb	r3, [r1, #0]
	status_t returnError   = readRegister8(writeBuffer,  &myBuffer[0]); //LB
     28a:	ac03      	add	r4, sp, #12
     28c:	0022      	movs	r2, r4
     28e:	4d08      	ldr	r5, [pc, #32]	; (2b0 <_ZN9AIS3624DQ13readRawAccelXEPs+0x34>)
     290:	47a8      	blx	r5
    uint8_t	writeBuffer1[1]= { AIS3624DQ_ACC_OUTX_H_XL };
     292:	a901      	add	r1, sp, #4
     294:	2329      	movs	r3, #41	; 0x29
     296:	700b      	strb	r3, [r1, #0]
	returnError            = readRegister8(writeBuffer1, &myBuffer[1]); //HB
     298:	220d      	movs	r2, #13
     29a:	446a      	add	r2, sp
     29c:	0030      	movs	r0, r6
     29e:	47a8      	blx	r5
	int16_t output         = (((int16_t)((int16_t)myBuffer[0] |  (int16_t)myBuffer[1] << 8))); //(LB | HB)
     2a0:	7862      	ldrb	r2, [r4, #1]
     2a2:	0212      	lsls	r2, r2, #8
     2a4:	7823      	ldrb	r3, [r4, #0]
     2a6:	4313      	orrs	r3, r2
	*data_ = output;
     2a8:	803b      	strh	r3, [r7, #0]
}
     2aa:	b005      	add	sp, #20
     2ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
     2ae:	46c0      	nop			; (mov r8, r8)
     2b0:	000001a1 	.word	0x000001a1

000002b4 <_ZN9AIS3624DQ13readRawAccelYEPs>:
void AIS3624DQ::readRawAccelY( int16_t* data_){
     2b4:	b5f0      	push	{r4, r5, r6, r7, lr}
     2b6:	b085      	sub	sp, #20
     2b8:	0006      	movs	r6, r0
     2ba:	000f      	movs	r7, r1
	uint8_t writeBuffer[1] = { AIS3624DQ_ACC_OUTY_L_XL };
     2bc:	a902      	add	r1, sp, #8
     2be:	232a      	movs	r3, #42	; 0x2a
     2c0:	700b      	strb	r3, [r1, #0]
	status_t returnError   = readRegister8(writeBuffer,  &myBuffer[0]); //LB
     2c2:	ac03      	add	r4, sp, #12
     2c4:	0022      	movs	r2, r4
     2c6:	4d08      	ldr	r5, [pc, #32]	; (2e8 <_ZN9AIS3624DQ13readRawAccelYEPs+0x34>)
     2c8:	47a8      	blx	r5
	uint8_t writeBuffer1[1]= { AIS3624DQ_ACC_OUTY_H_XL };
     2ca:	a901      	add	r1, sp, #4
     2cc:	232b      	movs	r3, #43	; 0x2b
     2ce:	700b      	strb	r3, [r1, #0]
	returnError            = readRegister8(writeBuffer1, &myBuffer[1]); //HB
     2d0:	220d      	movs	r2, #13
     2d2:	446a      	add	r2, sp
     2d4:	0030      	movs	r0, r6
     2d6:	47a8      	blx	r5
	int16_t output         = (((int16_t)((int16_t)myBuffer[0] |  (int16_t)myBuffer[1] << 8))); //(LB | HB)
     2d8:	7862      	ldrb	r2, [r4, #1]
     2da:	0212      	lsls	r2, r2, #8
     2dc:	7823      	ldrb	r3, [r4, #0]
     2de:	4313      	orrs	r3, r2
	*data_ = output;
     2e0:	803b      	strh	r3, [r7, #0]
}
     2e2:	b005      	add	sp, #20
     2e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
     2e6:	46c0      	nop			; (mov r8, r8)
     2e8:	000001a1 	.word	0x000001a1

000002ec <_ZN9AIS3624DQ13readRawAccelZEPs>:
void AIS3624DQ::readRawAccelZ( int16_t* data_){
     2ec:	b5f0      	push	{r4, r5, r6, r7, lr}
     2ee:	b085      	sub	sp, #20
     2f0:	0006      	movs	r6, r0
     2f2:	000f      	movs	r7, r1
	uint8_t writeBuffer[1] = { AIS3624DQ_ACC_OUTZ_L_XL };
     2f4:	a902      	add	r1, sp, #8
     2f6:	232c      	movs	r3, #44	; 0x2c
     2f8:	700b      	strb	r3, [r1, #0]
	status_t returnError   = readRegister8(writeBuffer,  &myBuffer[0]); //LB 
     2fa:	ac03      	add	r4, sp, #12
     2fc:	0022      	movs	r2, r4
     2fe:	4d08      	ldr	r5, [pc, #32]	; (320 <_ZN9AIS3624DQ13readRawAccelZEPs+0x34>)
     300:	47a8      	blx	r5
	uint8_t writeBuffer1[1]= { AIS3624DQ_ACC_OUTZ_H_XL };
     302:	a901      	add	r1, sp, #4
     304:	232d      	movs	r3, #45	; 0x2d
     306:	700b      	strb	r3, [r1, #0]
	returnError            = readRegister8(writeBuffer1, &myBuffer[1]); //HB
     308:	220d      	movs	r2, #13
     30a:	446a      	add	r2, sp
     30c:	0030      	movs	r0, r6
     30e:	47a8      	blx	r5
	int16_t output         = (((int16_t)((int16_t)myBuffer[0] |  (int16_t)myBuffer[1] << 8))); //(LB | HB) 
     310:	7862      	ldrb	r2, [r4, #1]
     312:	0212      	lsls	r2, r2, #8
     314:	7823      	ldrb	r3, [r4, #0]
     316:	4313      	orrs	r3, r2
	*data_ = output;
     318:	803b      	strh	r3, [r7, #0]
}
     31a:	b005      	add	sp, #20
     31c:	bdf0      	pop	{r4, r5, r6, r7, pc}
     31e:	46c0      	nop			; (mov r8, r8)
     320:	000001a1 	.word	0x000001a1

00000324 <_ZN9AIS3624DQC1Eh>:
	I2CAddress =  i2cADD;
     324:	7001      	strb	r1, [r0, #0]
	uint16_t accelSampleRate;
	uint16_t accelBandWidth;
	
	private:
	
}SensorSettings;
     326:	2327      	movs	r3, #39	; 0x27
     328:	7083      	strb	r3, [r0, #2]
     32a:	2230      	movs	r2, #48	; 0x30
     32c:	70c2      	strb	r2, [r0, #3]
     32e:	3a18      	subs	r2, #24
     330:	80c2      	strh	r2, [r0, #6]
}
     332:	4770      	bx	lr

00000334 <usart_serial_getchar>:
 * \param[out]    c       Destination for the read character.
 */
static inline void usart_serial_getchar(
		struct usart_module *const module,
		uint8_t *c)
{
     334:	b570      	push	{r4, r5, r6, lr}
     336:	b082      	sub	sp, #8
     338:	0005      	movs	r5, r0
     33a:	000e      	movs	r6, r1
	uint16_t temp = 0;
     33c:	2200      	movs	r2, #0
     33e:	466b      	mov	r3, sp
     340:	80da      	strh	r2, [r3, #6]

	while(STATUS_OK != usart_read_wait(module, &temp));
     342:	4c06      	ldr	r4, [pc, #24]	; (35c <usart_serial_getchar+0x28>)
     344:	466b      	mov	r3, sp
     346:	1d99      	adds	r1, r3, #6
     348:	0028      	movs	r0, r5
     34a:	47a0      	blx	r4
     34c:	2800      	cmp	r0, #0
     34e:	d1f9      	bne.n	344 <usart_serial_getchar+0x10>

	*c = temp;
     350:	466b      	mov	r3, sp
     352:	3306      	adds	r3, #6
     354:	881b      	ldrh	r3, [r3, #0]
     356:	7033      	strb	r3, [r6, #0]
}
     358:	b002      	add	sp, #8
     35a:	bd70      	pop	{r4, r5, r6, pc}
     35c:	00000f57 	.word	0x00000f57

00000360 <usart_serial_putchar>:
{
     360:	b570      	push	{r4, r5, r6, lr}
     362:	0005      	movs	r5, r0
	while(STATUS_OK !=usart_write_wait(module, c));
     364:	b28c      	uxth	r4, r1
     366:	4e03      	ldr	r6, [pc, #12]	; (374 <usart_serial_putchar+0x14>)
     368:	0021      	movs	r1, r4
     36a:	0028      	movs	r0, r5
     36c:	47b0      	blx	r6
     36e:	2800      	cmp	r0, #0
     370:	d1fa      	bne.n	368 <usart_serial_putchar+0x8>
}
     372:	bd70      	pop	{r4, r5, r6, pc}
     374:	00000f2d 	.word	0x00000f2d

00000378 <_Z15configure_usartv>:
struct usart_module usart_instance;
//! [module_inst]

//! [setup]
void configure_usart(void)
{
     378:	b530      	push	{r4, r5, lr}
     37a:	b091      	sub	sp, #68	; 0x44
{
	/* Sanity check arguments */
	Assert(config);

	/* Set default config in the config struct */
	config->data_order       = USART_DATAORDER_LSB;
     37c:	2380      	movs	r3, #128	; 0x80
     37e:	05db      	lsls	r3, r3, #23
     380:	9300      	str	r3, [sp, #0]
	config->transfer_mode    = USART_TRANSFER_ASYNCHRONOUSLY;
     382:	2300      	movs	r3, #0
     384:	9301      	str	r3, [sp, #4]
	config->parity           = USART_PARITY_NONE;
     386:	22ff      	movs	r2, #255	; 0xff
     388:	4669      	mov	r1, sp
     38a:	810a      	strh	r2, [r1, #8]
	config->stopbits         = USART_STOPBITS_1;
     38c:	2200      	movs	r2, #0
     38e:	728b      	strb	r3, [r1, #10]
	config->character_size   = USART_CHARACTER_SIZE_8BIT;
     390:	72cb      	strb	r3, [r1, #11]
	config->baudrate         = 9600;
	config->receiver_enable  = true;
     392:	2101      	movs	r1, #1
     394:	2024      	movs	r0, #36	; 0x24
     396:	466c      	mov	r4, sp
     398:	5421      	strb	r1, [r4, r0]
	config->transmitter_enable = true;
     39a:	3001      	adds	r0, #1
     39c:	5421      	strb	r1, [r4, r0]
	config->clock_polarity_inverted = false;
     39e:	3125      	adds	r1, #37	; 0x25
     3a0:	5463      	strb	r3, [r4, r1]
	config->use_external_clock = false;
     3a2:	3101      	adds	r1, #1
     3a4:	5463      	strb	r3, [r4, r1]
	config->ext_clock_freq   = 0;
     3a6:	930a      	str	r3, [sp, #40]	; 0x28
	config->mux_setting      = USART_RX_1_TX_2_XCK_3;
	config->run_in_standby   = false;
     3a8:	3105      	adds	r1, #5
     3aa:	5463      	strb	r3, [r4, r1]
	config->generator_source = GCLK_GENERATOR_0;
     3ac:	3101      	adds	r1, #1
     3ae:	5463      	strb	r3, [r4, r1]
	config->pinmux_pad0      = PINMUX_DEFAULT;
	config->pinmux_pad1      = PINMUX_DEFAULT;
	config->pinmux_pad2      = PINMUX_DEFAULT;
	config->pinmux_pad3      = PINMUX_DEFAULT;
#ifdef FEATURE_USART_OVER_SAMPLE
	config->sample_adjustment     = USART_SAMPLE_ADJUSTMENT_7_8_9;
     3b0:	9305      	str	r3, [sp, #20]
	config->sample_rate           = USART_SAMPLE_RATE_16X_ARITHMETIC;
     3b2:	8223      	strh	r3, [r4, #16]
#endif
#ifdef FEATURE_USART_LIN_SLAVE
	config->lin_slave_enable      = false;
     3b4:	76e3      	strb	r3, [r4, #27]
	config->lin_header_delay = LIN_MASTER_HEADER_DELAY_0;
	config->lin_break_length = LIN_MASTER_BREAK_LENGTH_13_BIT;
#endif

#ifdef FEATURE_USART_IMMEDIATE_BUFFER_OVERFLOW_NOTIFICATION
	config->immediate_buffer_overflow_notification  = false;
     3b6:	7622      	strb	r2, [r4, #24]
#endif
#ifdef FEATURE_USART_START_FRAME_DECTION
	config->start_frame_detection_enable            = false;
     3b8:	7722      	strb	r2, [r4, #28]
#endif
#ifdef FEATURE_USART_IRDA
	config->encoding_format_enable                  = false;
     3ba:	7662      	strb	r2, [r4, #25]
	config->receive_pulse_length                    = 19;
     3bc:	2313      	movs	r3, #19
     3be:	76a3      	strb	r3, [r4, #26]
	config->iso7816_config.inhibit_nack             = ISO7816_INHIBIT_NACK_DISABLE;
	config->iso7816_config.successive_recv_nack     = ISO7816_SUCCESSIVE_RECV_NACK_DISABLE;
	config->iso7816_config.max_iterations           = 7;
#endif
#ifdef FEATURE_USART_COLLISION_DECTION
	config->collision_detection_enable              = false;
     3c0:	7762      	strb	r2, [r4, #29]
	//! [setup_config_defaults]
	usart_get_config_defaults(&config_usart);
	//! [setup_config_defaults]

	//! [setup_change_config]
	config_usart.baudrate    = 38400;
     3c2:	2396      	movs	r3, #150	; 0x96
     3c4:	021b      	lsls	r3, r3, #8
     3c6:	9308      	str	r3, [sp, #32]
	config_usart.mux_setting = EDBG_CDC_SERCOM_MUX_SETTING;
     3c8:	2380      	movs	r3, #128	; 0x80
     3ca:	035b      	lsls	r3, r3, #13
     3cc:	9303      	str	r3, [sp, #12]
	config_usart.pinmux_pad0 = EDBG_CDC_SERCOM_PINMUX_PAD0;
     3ce:	4b19      	ldr	r3, [pc, #100]	; (434 <_Z15configure_usartv+0xbc>)
     3d0:	930c      	str	r3, [sp, #48]	; 0x30
	config_usart.pinmux_pad1 = EDBG_CDC_SERCOM_PINMUX_PAD1;
     3d2:	4b19      	ldr	r3, [pc, #100]	; (438 <_Z15configure_usartv+0xc0>)
     3d4:	930d      	str	r3, [sp, #52]	; 0x34
	config_usart.pinmux_pad2 = EDBG_CDC_SERCOM_PINMUX_PAD2;
     3d6:	2301      	movs	r3, #1
     3d8:	425b      	negs	r3, r3
     3da:	930e      	str	r3, [sp, #56]	; 0x38
	config_usart.pinmux_pad3 = EDBG_CDC_SERCOM_PINMUX_PAD3;
     3dc:	930f      	str	r3, [sp, #60]	; 0x3c
static inline void stdio_serial_init(
		struct usart_module *const module,
		usart_inst_t const hw,
		const struct usart_config *const config)
{
	stdio_base = (void *)module;
     3de:	4817      	ldr	r0, [pc, #92]	; (43c <_Z15configure_usartv+0xc4>)
     3e0:	4b17      	ldr	r3, [pc, #92]	; (440 <_Z15configure_usartv+0xc8>)
     3e2:	6018      	str	r0, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
     3e4:	4a17      	ldr	r2, [pc, #92]	; (444 <_Z15configure_usartv+0xcc>)
     3e6:	4b18      	ldr	r3, [pc, #96]	; (448 <_Z15configure_usartv+0xd0>)
     3e8:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
     3ea:	4a18      	ldr	r2, [pc, #96]	; (44c <_Z15configure_usartv+0xd4>)
     3ec:	4b18      	ldr	r3, [pc, #96]	; (450 <_Z15configure_usartv+0xd8>)
     3ee:	601a      	str	r2, [r3, #0]
	if (usart_init(module, hw, config) == STATUS_OK) {
     3f0:	466a      	mov	r2, sp
     3f2:	4918      	ldr	r1, [pc, #96]	; (454 <_Z15configure_usartv+0xdc>)
     3f4:	4b18      	ldr	r3, [pc, #96]	; (458 <_Z15configure_usartv+0xe0>)
     3f6:	4798      	blx	r3

	usart_serial_init(module, hw, config);
# if defined(__GNUC__)
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
     3f8:	4d18      	ldr	r5, [pc, #96]	; (45c <_Z15configure_usartv+0xe4>)
     3fa:	682b      	ldr	r3, [r5, #0]
     3fc:	6898      	ldr	r0, [r3, #8]
     3fe:	2100      	movs	r1, #0
     400:	4c17      	ldr	r4, [pc, #92]	; (460 <_Z15configure_usartv+0xe8>)
     402:	47a0      	blx	r4
	setbuf(stdin, NULL);
     404:	682b      	ldr	r3, [r5, #0]
     406:	6858      	ldr	r0, [r3, #4]
     408:	2100      	movs	r1, #0
     40a:	47a0      	blx	r4
	//! [setup_change_config]

	stdio_serial_init(&usart_instance, EDBG_CDC_MODULE,&config_usart);

	//! [setup_set_config]
	while (usart_init(&usart_instance,
     40c:	4d0b      	ldr	r5, [pc, #44]	; (43c <_Z15configure_usartv+0xc4>)
     40e:	4c12      	ldr	r4, [pc, #72]	; (458 <_Z15configure_usartv+0xe0>)
     410:	466a      	mov	r2, sp
     412:	4910      	ldr	r1, [pc, #64]	; (454 <_Z15configure_usartv+0xdc>)
     414:	0028      	movs	r0, r5
     416:	47a0      	blx	r4
     418:	2800      	cmp	r0, #0
     41a:	d1f9      	bne.n	410 <_Z15configure_usartv+0x98>
	/* Sanity check arguments */
	Assert(module);
	Assert(module->hw);

	/* Get a pointer to the hardware module instance */
	SercomUsart *const usart_hw = &(module->hw->USART);
     41c:	4b07      	ldr	r3, [pc, #28]	; (43c <_Z15configure_usartv+0xc4>)
     41e:	681a      	ldr	r2, [r3, #0]
	return (usart_hw->SYNCBUSY.reg);
     420:	69d3      	ldr	r3, [r2, #28]
	while (usart_is_syncing(module)) {
     422:	2b00      	cmp	r3, #0
     424:	d1fc      	bne.n	420 <_Z15configure_usartv+0xa8>

	/* Wait until synchronization is complete */
	_usart_wait_for_sync(module);

	/* Enable USART module */
	usart_hw->CTRLA.reg |= SERCOM_USART_CTRLA_ENABLE;
     426:	6813      	ldr	r3, [r2, #0]
     428:	2102      	movs	r1, #2
     42a:	430b      	orrs	r3, r1
     42c:	6013      	str	r3, [r2, #0]
	//! [setup_set_config]

	//! [setup_enable]
	usart_enable(&usart_instance);
	//! [setup_enable]
}
     42e:	b011      	add	sp, #68	; 0x44
     430:	bd30      	pop	{r4, r5, pc}
     432:	46c0      	nop			; (mov r8, r8)
     434:	001b0002 	.word	0x001b0002
     438:	001c0002 	.word	0x001c0002
     43c:	2000024c 	.word	0x2000024c
     440:	200002a4 	.word	0x200002a4
     444:	00000361 	.word	0x00000361
     448:	200002a0 	.word	0x200002a0
     44c:	00000335 	.word	0x00000335
     450:	2000029c 	.word	0x2000029c
     454:	42000c00 	.word	0x42000c00
     458:	00000c31 	.word	0x00000c31
     45c:	20000018 	.word	0x20000018
     460:	00002255 	.word	0x00002255

00000464 <_Z19configure_port_pinsv>:


AIS3624DQ _AIS3624DQ(0x18);

void configure_port_pins(void)
{
     464:	b570      	push	{r4, r5, r6, lr}
     466:	b082      	sub	sp, #8
{
	/* Sanity check arguments */
	Assert(config);

	/* Default configuration values */
	config->direction  = PORT_PIN_DIR_INPUT;
     468:	ac01      	add	r4, sp, #4
     46a:	2300      	movs	r3, #0
     46c:	7023      	strb	r3, [r4, #0]
	config->input_pull = PORT_PIN_PULL_UP;
     46e:	2601      	movs	r6, #1
     470:	7066      	strb	r6, [r4, #1]
	config->powersave  = false;
     472:	70a3      	strb	r3, [r4, #2]
	//! [setup_3]
	config_port_pin.direction  = PORT_PIN_DIR_INPUT;
	config_port_pin.input_pull = PORT_PIN_PULL_UP;
	//! [setup_3]
	//! [setup_4]
	port_pin_set_config(BUTTON_0_PIN, &config_port_pin);
     474:	0021      	movs	r1, r4
     476:	2023      	movs	r0, #35	; 0x23
     478:	4d03      	ldr	r5, [pc, #12]	; (488 <_Z19configure_port_pinsv+0x24>)
     47a:	47a8      	blx	r5
	//! [setup_4]

	//! [setup_5]
	config_port_pin.direction = PORT_PIN_DIR_OUTPUT;
     47c:	7026      	strb	r6, [r4, #0]
	//! [setup_5]
	//! [setup_6]
	port_pin_set_config(LED_0_PIN, &config_port_pin);
     47e:	0021      	movs	r1, r4
     480:	2000      	movs	r0, #0
     482:	47a8      	blx	r5
	//! [setup_6]
}
     484:	b002      	add	sp, #8
     486:	bd70      	pop	{r4, r5, r6, pc}
     488:	00001401 	.word	0x00001401

0000048c <main>:

int main(void)
{
     48c:	b5f0      	push	{r4, r5, r6, r7, lr}
     48e:	b087      	sub	sp, #28
    /* Initialize the SAM system */
    SystemInit();
     490:	4b23      	ldr	r3, [pc, #140]	; (520 <main+0x94>)
     492:	4798      	blx	r3
	board_init();
     494:	4b23      	ldr	r3, [pc, #140]	; (524 <main+0x98>)
     496:	4798      	blx	r3
	delay_init();
     498:	4b23      	ldr	r3, [pc, #140]	; (528 <main+0x9c>)
     49a:	4798      	blx	r3
	configure_usart();
     49c:	4b23      	ldr	r3, [pc, #140]	; (52c <main+0xa0>)
     49e:	4798      	blx	r3
	uint8_t dummy;
	int16_t Xaxis, Yaxis, Zaxis;

	//Configure GPIOs for LED blinking
    configure_port_pins();
     4a0:	4b23      	ldr	r3, [pc, #140]	; (530 <main+0xa4>)
     4a2:	4798      	blx	r3
	port_pin_set_output_level(LED_0_PIN, true);
	delay_ms(500);
	port_pin_set_output_level(LED_0_PIN, false);
	delay_ms(500);
	*/
	_AIS3624DQ.begin();
     4a4:	4c23      	ldr	r4, [pc, #140]	; (534 <main+0xa8>)
     4a6:	340c      	adds	r4, #12
     4a8:	0020      	movs	r0, r4
     4aa:	4b23      	ldr	r3, [pc, #140]	; (538 <main+0xac>)
     4ac:	4798      	blx	r3
	uint8_t writeBuffer[1] = { AIS3624DQ_ACC_WHOM_AM_I}; // read WHO AM I dummy (just to test i2c comm with Accel..)
     4ae:	a903      	add	r1, sp, #12
     4b0:	230f      	movs	r3, #15
     4b2:	700b      	strb	r3, [r1, #0]
	_AIS3624DQ.readRegister8(writeBuffer, &dummy);
     4b4:	250f      	movs	r5, #15
     4b6:	ab02      	add	r3, sp, #8
     4b8:	469c      	mov	ip, r3
     4ba:	4465      	add	r5, ip
     4bc:	002a      	movs	r2, r5
     4be:	0020      	movs	r0, r4
     4c0:	4b1e      	ldr	r3, [pc, #120]	; (53c <main+0xb0>)
     4c2:	4798      	blx	r3
	printf("\r\nGot: %x\r\n", dummy);
     4c4:	7829      	ldrb	r1, [r5, #0]
     4c6:	481e      	ldr	r0, [pc, #120]	; (540 <main+0xb4>)
     4c8:	4b1e      	ldr	r3, [pc, #120]	; (544 <main+0xb8>)
     4ca:	4798      	blx	r3
		
    /* Replace with your application code */
	printf("setup done!\r\n");
     4cc:	481e      	ldr	r0, [pc, #120]	; (548 <main+0xbc>)
     4ce:	4b1f      	ldr	r3, [pc, #124]	; (54c <main+0xc0>)
     4d0:	4798      	blx	r3
    while (1) 
    {	
				
		if(_AIS3624DQ.XYZdataAvailable()){	// Make sure fresh data is available		
     4d2:	4c18      	ldr	r4, [pc, #96]	; (534 <main+0xa8>)
     4d4:	340c      	adds	r4, #12
     4d6:	9400      	str	r4, [sp, #0]
     4d8:	4d1d      	ldr	r5, [pc, #116]	; (550 <main+0xc4>)
			
			_AIS3624DQ.readRawAccelX(&Xaxis);
     4da:	9401      	str	r4, [sp, #4]
		if(_AIS3624DQ.XYZdataAvailable()){	// Make sure fresh data is available		
     4dc:	9800      	ldr	r0, [sp, #0]
     4de:	47a8      	blx	r5
     4e0:	2800      	cmp	r0, #0
     4e2:	d0fb      	beq.n	4dc <main+0x50>
			_AIS3624DQ.readRawAccelX(&Xaxis);
     4e4:	af05      	add	r7, sp, #20
     4e6:	0039      	movs	r1, r7
     4e8:	9c01      	ldr	r4, [sp, #4]
     4ea:	0020      	movs	r0, r4
     4ec:	4b19      	ldr	r3, [pc, #100]	; (554 <main+0xc8>)
     4ee:	4798      	blx	r3
			_AIS3624DQ.readRawAccelY(&Yaxis);
     4f0:	260a      	movs	r6, #10
     4f2:	ab02      	add	r3, sp, #8
     4f4:	469c      	mov	ip, r3
     4f6:	4466      	add	r6, ip
     4f8:	0031      	movs	r1, r6
     4fa:	9401      	str	r4, [sp, #4]
     4fc:	0020      	movs	r0, r4
     4fe:	4b16      	ldr	r3, [pc, #88]	; (558 <main+0xcc>)
     500:	4798      	blx	r3
			_AIS3624DQ.readRawAccelZ(&Zaxis);
     502:	ac04      	add	r4, sp, #16
     504:	0021      	movs	r1, r4
     506:	9801      	ldr	r0, [sp, #4]
     508:	4b14      	ldr	r3, [pc, #80]	; (55c <main+0xd0>)
     50a:	4798      	blx	r3
		    printf("x: %d      y: %d      z: %d\r\n", Xaxis, Yaxis, Zaxis);
     50c:	2200      	movs	r2, #0
     50e:	5ea3      	ldrsh	r3, [r4, r2]
     510:	2100      	movs	r1, #0
     512:	5e72      	ldrsh	r2, [r6, r1]
     514:	2000      	movs	r0, #0
     516:	5e39      	ldrsh	r1, [r7, r0]
     518:	4811      	ldr	r0, [pc, #68]	; (560 <main+0xd4>)
     51a:	4f0a      	ldr	r7, [pc, #40]	; (544 <main+0xb8>)
     51c:	47b8      	blx	r7
     51e:	e7dd      	b.n	4dc <main+0x50>
     520:	000017c9 	.word	0x000017c9
     524:	000013cd 	.word	0x000013cd
     528:	0000131d 	.word	0x0000131d
     52c:	00000379 	.word	0x00000379
     530:	00000465 	.word	0x00000465
     534:	2000024c 	.word	0x2000024c
     538:	00000219 	.word	0x00000219
     53c:	000001a1 	.word	0x000001a1
     540:	00006188 	.word	0x00006188
     544:	0000214d 	.word	0x0000214d
     548:	00006194 	.word	0x00006194
     54c:	00002241 	.word	0x00002241
     550:	00000259 	.word	0x00000259
     554:	0000027d 	.word	0x0000027d
     558:	000002b5 	.word	0x000002b5
     55c:	000002ed 	.word	0x000002ed
     560:	000061a4 	.word	0x000061a4

00000564 <_GLOBAL__sub_I_usart_instance>:
			//delay_ms(32); // readable speed
			*/
			
		}			
    }
}
     564:	b510      	push	{r4, lr}
AIS3624DQ _AIS3624DQ(0x18);
     566:	2118      	movs	r1, #24
     568:	4802      	ldr	r0, [pc, #8]	; (574 <_GLOBAL__sub_I_usart_instance+0x10>)
     56a:	300c      	adds	r0, #12
     56c:	4b02      	ldr	r3, [pc, #8]	; (578 <_GLOBAL__sub_I_usart_instance+0x14>)
     56e:	4798      	blx	r3
}
     570:	bd10      	pop	{r4, pc}
     572:	46c0      	nop			; (mov r8, r8)
     574:	2000024c 	.word	0x2000024c
     578:	00000325 	.word	0x00000325

0000057c <_i2c_master_wait_for_sync>:
	SercomI2cm *const i2c_hw = &(module->hw->I2CM);
     57c:	6801      	ldr	r1, [r0, #0]
	return (i2c_hw->SYNCBUSY.reg & SERCOM_I2CM_SYNCBUSY_MASK);
     57e:	2207      	movs	r2, #7
     580:	69cb      	ldr	r3, [r1, #28]
	while (i2c_master_is_syncing(module)) {
     582:	421a      	tst	r2, r3
     584:	d1fc      	bne.n	580 <_i2c_master_wait_for_sync+0x4>
}
     586:	4770      	bx	lr

00000588 <i2c_master_init>:
 */
enum status_code i2c_master_init(
		struct i2c_master_module *const module,
		Sercom *const hw,
		const struct i2c_master_config *const config)
{
     588:	b5f0      	push	{r4, r5, r6, r7, lr}
     58a:	46d6      	mov	lr, sl
     58c:	464f      	mov	r7, r9
     58e:	4646      	mov	r6, r8
     590:	b5c0      	push	{r6, r7, lr}
     592:	b08a      	sub	sp, #40	; 0x28
     594:	0006      	movs	r6, r0
     596:	000f      	movs	r7, r1
     598:	0014      	movs	r4, r2
	Assert(module);
	Assert(hw);
	Assert(config);

	/* Initialize software module */
	module->hw = hw;
     59a:	6031      	str	r1, [r6, #0]

	SercomI2cm *const i2c_module = &(module->hw->I2CM);

	uint32_t sercom_index = _sercom_get_sercom_inst_index(module->hw);
     59c:	0008      	movs	r0, r1
     59e:	4b97      	ldr	r3, [pc, #604]	; (7fc <i2c_master_init+0x274>)
     5a0:	4798      	blx	r3
		case SYSTEM_CLOCK_APB_APBB:
			PM->APBBMASK.reg |= mask;
			break;

		case SYSTEM_CLOCK_APB_APBC:
			PM->APBCMASK.reg |= mask;
     5a2:	4a97      	ldr	r2, [pc, #604]	; (800 <STACK_SIZE>)
     5a4:	6a11      	ldr	r1, [r2, #32]
		gclk_index   = SERCOM5_GCLK_ID_CORE;
	} else {
		gclk_index   = sercom_index + SERCOM0_GCLK_ID_CORE;
	}
#else
	pm_index     = sercom_index + PM_APBCMASK_SERCOM0_Pos;
     5a6:	1c85      	adds	r5, r0, #2
		system_apb_clock_set_mask(SYSTEM_CLOCK_APB_APBD, 1 << pm_index);
	} else {
		system_apb_clock_set_mask(SYSTEM_CLOCK_APB_APBC, 1 << pm_index);
	}
#else
	system_apb_clock_set_mask(SYSTEM_CLOCK_APB_APBC, 1 << pm_index);
     5a8:	2301      	movs	r3, #1
     5aa:	40ab      	lsls	r3, r5
     5ac:	430b      	orrs	r3, r1
     5ae:	6213      	str	r3, [r2, #32]
#endif

	/* Set up the GCLK for the module */
	struct system_gclk_chan_config gclk_chan_conf;
	system_gclk_chan_get_config_defaults(&gclk_chan_conf);
	gclk_chan_conf.source_generator = config->generator_source;
     5b0:	a909      	add	r1, sp, #36	; 0x24
     5b2:	7b23      	ldrb	r3, [r4, #12]
     5b4:	700b      	strb	r3, [r1, #0]
	gclk_index   = sercom_index + SERCOM0_GCLK_ID_CORE;
     5b6:	3014      	adds	r0, #20
	system_gclk_chan_set_config(gclk_index, &gclk_chan_conf);
     5b8:	b2c5      	uxtb	r5, r0
     5ba:	0028      	movs	r0, r5
     5bc:	4b91      	ldr	r3, [pc, #580]	; (804 <STACK_SIZE+0x4>)
     5be:	4798      	blx	r3
	system_gclk_chan_enable(gclk_index);
     5c0:	0028      	movs	r0, r5
     5c2:	4b91      	ldr	r3, [pc, #580]	; (808 <STACK_SIZE+0x8>)
     5c4:	4798      	blx	r3
	sercom_set_gclk_generator(config->generator_source, false);
     5c6:	7b20      	ldrb	r0, [r4, #12]
     5c8:	2100      	movs	r1, #0
     5ca:	4b90      	ldr	r3, [pc, #576]	; (80c <STACK_SIZE+0xc>)
     5cc:	4798      	blx	r3

	/* Check if module is enabled. */
	if (i2c_module->CTRLA.reg & SERCOM_I2CM_CTRLA_ENABLE) {
     5ce:	683b      	ldr	r3, [r7, #0]
		return STATUS_ERR_DENIED;
     5d0:	201c      	movs	r0, #28
	if (i2c_module->CTRLA.reg & SERCOM_I2CM_CTRLA_ENABLE) {
     5d2:	079b      	lsls	r3, r3, #30
     5d4:	d505      	bpl.n	5e2 <i2c_master_init+0x5a>
	/* Set sercom module to operate in I2C master mode. */
	i2c_module->CTRLA.reg = SERCOM_I2CM_CTRLA_MODE(0x5);

	/* Set config and return status. */
	return _i2c_master_set_config(module, config);
}
     5d6:	b00a      	add	sp, #40	; 0x28
     5d8:	bc1c      	pop	{r2, r3, r4}
     5da:	4690      	mov	r8, r2
     5dc:	4699      	mov	r9, r3
     5de:	46a2      	mov	sl, r4
     5e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
	if (i2c_module->CTRLA.reg & SERCOM_I2CM_CTRLA_SWRST) {
     5e2:	683b      	ldr	r3, [r7, #0]
		return STATUS_BUSY;
     5e4:	3817      	subs	r0, #23
	if (i2c_module->CTRLA.reg & SERCOM_I2CM_CTRLA_SWRST) {
     5e6:	07db      	lsls	r3, r3, #31
     5e8:	d4f5      	bmi.n	5d6 <i2c_master_init+0x4e>
	i2c_module->CTRLA.reg = SERCOM_I2CM_CTRLA_MODE(0x5);
     5ea:	2314      	movs	r3, #20
     5ec:	603b      	str	r3, [r7, #0]
	SercomI2cm *const i2c_module = &(module->hw->I2CM);
     5ee:	6833      	ldr	r3, [r6, #0]
     5f0:	4698      	mov	r8, r3
	uint8_t sercom_index = _sercom_get_sercom_inst_index(sercom_hw);
     5f2:	0018      	movs	r0, r3
     5f4:	4b81      	ldr	r3, [pc, #516]	; (7fc <i2c_master_init+0x274>)
     5f6:	4798      	blx	r3
     5f8:	0005      	movs	r5, r0
{
	/* Sanity check arguments */
	Assert(config);

	/* Default configuration values */
	config->mux_position = SYSTEM_PINMUX_GPIO;
     5fa:	2380      	movs	r3, #128	; 0x80
     5fc:	aa08      	add	r2, sp, #32
     5fe:	7013      	strb	r3, [r2, #0]
	config->direction    = SYSTEM_PINMUX_PIN_DIR_INPUT;
     600:	2300      	movs	r3, #0
     602:	7053      	strb	r3, [r2, #1]
	config->input_pull   = SYSTEM_PINMUX_PIN_PULL_UP;
     604:	2201      	movs	r2, #1
     606:	a908      	add	r1, sp, #32
     608:	708a      	strb	r2, [r1, #2]
	config->powersave    = false;
     60a:	70cb      	strb	r3, [r1, #3]
	uint32_t pad0 = config->pinmux_pad0;
     60c:	69e0      	ldr	r0, [r4, #28]
	uint32_t pad1 = config->pinmux_pad1;
     60e:	6a27      	ldr	r7, [r4, #32]
	if (pad0 == PINMUX_DEFAULT) {
     610:	2800      	cmp	r0, #0
     612:	d100      	bne.n	616 <i2c_master_init+0x8e>
     614:	e0af      	b.n	776 <i2c_master_init+0x1ee>
	pin_conf.mux_position = pad0 & 0xFFFF;
     616:	ab08      	add	r3, sp, #32
     618:	7018      	strb	r0, [r3, #0]
	pin_conf.direction    = SYSTEM_PINMUX_PIN_DIR_OUTPUT_WITH_READBACK;
     61a:	2302      	movs	r3, #2
     61c:	aa08      	add	r2, sp, #32
     61e:	7053      	strb	r3, [r2, #1]
	system_pinmux_pin_set_config(pad0 >> 16, &pin_conf);
     620:	0c00      	lsrs	r0, r0, #16
     622:	b2c0      	uxtb	r0, r0
     624:	0011      	movs	r1, r2
     626:	4b7a      	ldr	r3, [pc, #488]	; (810 <STACK_SIZE+0x10>)
     628:	4798      	blx	r3
	if (pad1 == PINMUX_DEFAULT) {
     62a:	2f00      	cmp	r7, #0
     62c:	d100      	bne.n	630 <i2c_master_init+0xa8>
     62e:	e0a7      	b.n	780 <i2c_master_init+0x1f8>
	pin_conf.mux_position = pad1 & 0xFFFF;
     630:	ab08      	add	r3, sp, #32
     632:	701f      	strb	r7, [r3, #0]
	pin_conf.direction    = SYSTEM_PINMUX_PIN_DIR_OUTPUT_WITH_READBACK;
     634:	2302      	movs	r3, #2
     636:	aa08      	add	r2, sp, #32
     638:	7053      	strb	r3, [r2, #1]
	system_pinmux_pin_set_config(pad1 >> 16, &pin_conf);
     63a:	0c3f      	lsrs	r7, r7, #16
     63c:	b2f8      	uxtb	r0, r7
     63e:	0011      	movs	r1, r2
     640:	4b73      	ldr	r3, [pc, #460]	; (810 <STACK_SIZE+0x10>)
     642:	4798      	blx	r3
	module->unknown_bus_state_timeout = config->unknown_bus_state_timeout;
     644:	8aa3      	ldrh	r3, [r4, #20]
     646:	80f3      	strh	r3, [r6, #6]
	module->buffer_timeout = config->buffer_timeout;
     648:	8ae3      	ldrh	r3, [r4, #22]
     64a:	8133      	strh	r3, [r6, #8]
	if (config->run_in_standby || system_is_debugger_present()) {
     64c:	7e23      	ldrb	r3, [r4, #24]
		tmp_ctrla = SERCOM_I2CM_CTRLA_RUNSTDBY;
     64e:	2280      	movs	r2, #128	; 0x80
	if (config->run_in_standby || system_is_debugger_present()) {
     650:	2b00      	cmp	r3, #0
     652:	d104      	bne.n	65e <i2c_master_init+0xd6>
 * \retval false Debugger is not connected to the system
 *
 */
static inline bool system_is_debugger_present(void)
{
	return DSU->STATUSB.reg & DSU_STATUSB_DBGPRES;
     654:	4b6f      	ldr	r3, [pc, #444]	; (814 <STACK_SIZE+0x14>)
     656:	789b      	ldrb	r3, [r3, #2]
     658:	079b      	lsls	r3, r3, #30
		tmp_ctrla = SERCOM_I2CM_CTRLA_RUNSTDBY;
     65a:	0fdb      	lsrs	r3, r3, #31
     65c:	01da      	lsls	r2, r3, #7
	tmp_ctrla |= config->transfer_speed;
     65e:	68a1      	ldr	r1, [r4, #8]
     660:	6923      	ldr	r3, [r4, #16]
     662:	430b      	orrs	r3, r1
     664:	4313      	orrs	r3, r2
	if (config->scl_low_timeout) {
     666:	2224      	movs	r2, #36	; 0x24
     668:	5ca2      	ldrb	r2, [r4, r2]
     66a:	2a00      	cmp	r2, #0
     66c:	d002      	beq.n	674 <i2c_master_init+0xec>
		tmp_ctrla |= SERCOM_I2CM_CTRLA_LOWTOUTEN;
     66e:	2280      	movs	r2, #128	; 0x80
     670:	05d2      	lsls	r2, r2, #23
     672:	4313      	orrs	r3, r2
		tmp_ctrla |= config->inactive_timeout;
     674:	6aa2      	ldr	r2, [r4, #40]	; 0x28
     676:	4313      	orrs	r3, r2
	if (config->scl_stretch_only_after_ack_bit || (config->transfer_speed == I2C_MASTER_SPEED_HIGH_SPEED)) {
     678:	222c      	movs	r2, #44	; 0x2c
     67a:	5ca2      	ldrb	r2, [r4, r2]
     67c:	2a00      	cmp	r2, #0
     67e:	d103      	bne.n	688 <i2c_master_init+0x100>
     680:	2280      	movs	r2, #128	; 0x80
     682:	0492      	lsls	r2, r2, #18
     684:	4291      	cmp	r1, r2
     686:	d102      	bne.n	68e <i2c_master_init+0x106>
		tmp_ctrla |= SERCOM_I2CM_CTRLA_SCLSM;
     688:	2280      	movs	r2, #128	; 0x80
     68a:	0512      	lsls	r2, r2, #20
     68c:	4313      	orrs	r3, r2
	if (config->slave_scl_low_extend_timeout) {
     68e:	222d      	movs	r2, #45	; 0x2d
     690:	5ca2      	ldrb	r2, [r4, r2]
     692:	2a00      	cmp	r2, #0
     694:	d002      	beq.n	69c <i2c_master_init+0x114>
		tmp_ctrla |= SERCOM_I2CM_CTRLA_SEXTTOEN;
     696:	2280      	movs	r2, #128	; 0x80
     698:	0412      	lsls	r2, r2, #16
     69a:	4313      	orrs	r3, r2
	if (config->master_scl_low_extend_timeout) {
     69c:	222e      	movs	r2, #46	; 0x2e
     69e:	5ca2      	ldrb	r2, [r4, r2]
     6a0:	2a00      	cmp	r2, #0
     6a2:	d002      	beq.n	6aa <i2c_master_init+0x122>
		tmp_ctrla |= SERCOM_I2CM_CTRLA_MEXTTOEN;
     6a4:	2280      	movs	r2, #128	; 0x80
     6a6:	03d2      	lsls	r2, r2, #15
     6a8:	4313      	orrs	r3, r2
	i2c_module->CTRLA.reg |= tmp_ctrla;
     6aa:	4642      	mov	r2, r8
     6ac:	6812      	ldr	r2, [r2, #0]
     6ae:	4313      	orrs	r3, r2
     6b0:	4642      	mov	r2, r8
     6b2:	6013      	str	r3, [r2, #0]
	i2c_module->CTRLB.reg = SERCOM_I2CM_CTRLB_SMEN;
     6b4:	2380      	movs	r3, #128	; 0x80
     6b6:	005b      	lsls	r3, r3, #1
     6b8:	6053      	str	r3, [r2, #4]
	uint32_t fgclk       = system_gclk_chan_get_hz(SERCOM0_GCLK_ID_CORE + sercom_index);
     6ba:	0028      	movs	r0, r5
     6bc:	3014      	adds	r0, #20
     6be:	b2c0      	uxtb	r0, r0
     6c0:	4b55      	ldr	r3, [pc, #340]	; (818 <STACK_SIZE+0x18>)
     6c2:	4798      	blx	r3
     6c4:	9007      	str	r0, [sp, #28]
	uint32_t fscl        = 1000 * config->baud_rate;
     6c6:	23fa      	movs	r3, #250	; 0xfa
     6c8:	009b      	lsls	r3, r3, #2
     6ca:	6822      	ldr	r2, [r4, #0]
     6cc:	435a      	muls	r2, r3
     6ce:	4691      	mov	r9, r2
	uint32_t fscl_hs     = 1000 * config->baud_rate_high_speed;
     6d0:	6863      	ldr	r3, [r4, #4]
     6d2:	469a      	mov	sl, r3
	tmp_baud = (int32_t)(div_ceil(
     6d4:	4d51      	ldr	r5, [pc, #324]	; (81c <STACK_SIZE+0x1c>)
     6d6:	47a8      	blx	r5
     6d8:	9000      	str	r0, [sp, #0]
     6da:	9101      	str	r1, [sp, #4]
     6dc:	464b      	mov	r3, r9
     6de:	0058      	lsls	r0, r3, #1
     6e0:	47a8      	blx	r5
     6e2:	9002      	str	r0, [sp, #8]
     6e4:	9103      	str	r1, [sp, #12]
     6e6:	8e20      	ldrh	r0, [r4, #48]	; 0x30
     6e8:	47a8      	blx	r5
     6ea:	9004      	str	r0, [sp, #16]
     6ec:	9105      	str	r1, [sp, #20]
     6ee:	4f4c      	ldr	r7, [pc, #304]	; (820 <STACK_SIZE+0x20>)
     6f0:	4a4c      	ldr	r2, [pc, #304]	; (824 <STACK_SIZE+0x24>)
     6f2:	4b4d      	ldr	r3, [pc, #308]	; (828 <STACK_SIZE+0x28>)
     6f4:	9800      	ldr	r0, [sp, #0]
     6f6:	9901      	ldr	r1, [sp, #4]
     6f8:	47b8      	blx	r7
     6fa:	0002      	movs	r2, r0
     6fc:	000b      	movs	r3, r1
     6fe:	9804      	ldr	r0, [sp, #16]
     700:	9905      	ldr	r1, [sp, #20]
     702:	47b8      	blx	r7
     704:	4e49      	ldr	r6, [pc, #292]	; (82c <STACK_SIZE+0x2c>)
     706:	2200      	movs	r2, #0
     708:	4b49      	ldr	r3, [pc, #292]	; (830 <STACK_SIZE+0x30>)
     70a:	47b0      	blx	r6
     70c:	9004      	str	r0, [sp, #16]
     70e:	9105      	str	r1, [sp, #20]
     710:	4648      	mov	r0, r9
     712:	47a8      	blx	r5
     714:	0002      	movs	r2, r0
     716:	000b      	movs	r3, r1
     718:	9804      	ldr	r0, [sp, #16]
     71a:	9905      	ldr	r1, [sp, #20]
     71c:	47b8      	blx	r7
     71e:	0002      	movs	r2, r0
     720:	000b      	movs	r3, r1
     722:	4d44      	ldr	r5, [pc, #272]	; (834 <STACK_SIZE+0x34>)
     724:	9800      	ldr	r0, [sp, #0]
     726:	9901      	ldr	r1, [sp, #4]
     728:	47a8      	blx	r5
     72a:	9a02      	ldr	r2, [sp, #8]
     72c:	9b03      	ldr	r3, [sp, #12]
     72e:	47b0      	blx	r6
     730:	2200      	movs	r2, #0
     732:	4b41      	ldr	r3, [pc, #260]	; (838 <STACK_SIZE+0x38>)
     734:	47a8      	blx	r5
     736:	9a02      	ldr	r2, [sp, #8]
     738:	9b03      	ldr	r3, [sp, #12]
     73a:	4d40      	ldr	r5, [pc, #256]	; (83c <STACK_SIZE+0x3c>)
     73c:	47a8      	blx	r5
     73e:	4b40      	ldr	r3, [pc, #256]	; (840 <STACK_SIZE+0x40>)
     740:	4798      	blx	r3
     742:	0005      	movs	r5, r0
	if (config->transfer_speed == I2C_MASTER_SPEED_HIGH_SPEED) {
     744:	2380      	movs	r3, #128	; 0x80
     746:	049b      	lsls	r3, r3, #18
     748:	68a2      	ldr	r2, [r4, #8]
     74a:	429a      	cmp	r2, r3
     74c:	d01e      	beq.n	78c <i2c_master_init+0x204>
	if (tmp_baud > 255 || tmp_baud < 0 || tmp_baud_hs > 255 || tmp_baud_hs < 0) {
     74e:	0003      	movs	r3, r0
     750:	2040      	movs	r0, #64	; 0x40
     752:	2dff      	cmp	r5, #255	; 0xff
     754:	d900      	bls.n	758 <i2c_master_init+0x1d0>
     756:	e73e      	b.n	5d6 <i2c_master_init+0x4e>
	int32_t tmp_baudlow_hs = 0;
     758:	2400      	movs	r4, #0
	int32_t tmp_baud_hs = 0;
     75a:	2000      	movs	r0, #0
		i2c_module->BAUD.reg = SERCOM_I2CM_BAUD_BAUD(tmp_baud) |
     75c:	25ff      	movs	r5, #255	; 0xff
     75e:	401d      	ands	r5, r3
			SERCOM_I2CM_BAUD_HSBAUD(tmp_baud_hs) | SERCOM_I2CM_BAUD_HSBAUDLOW(tmp_baudlow_hs);
     760:	0624      	lsls	r4, r4, #24
     762:	4325      	orrs	r5, r4
     764:	0400      	lsls	r0, r0, #16
     766:	23ff      	movs	r3, #255	; 0xff
     768:	041b      	lsls	r3, r3, #16
     76a:	4018      	ands	r0, r3
     76c:	4305      	orrs	r5, r0
		i2c_module->BAUD.reg = SERCOM_I2CM_BAUD_BAUD(tmp_baud) |
     76e:	4643      	mov	r3, r8
     770:	60dd      	str	r5, [r3, #12]
	enum status_code tmp_status_code = STATUS_OK;
     772:	2000      	movs	r0, #0
     774:	e72f      	b.n	5d6 <i2c_master_init+0x4e>
		pad0 = _sercom_get_default_pad(sercom_hw, 0);
     776:	2100      	movs	r1, #0
     778:	4640      	mov	r0, r8
     77a:	4b32      	ldr	r3, [pc, #200]	; (844 <STACK_SIZE+0x44>)
     77c:	4798      	blx	r3
     77e:	e74a      	b.n	616 <i2c_master_init+0x8e>
		pad1 = _sercom_get_default_pad(sercom_hw, 1);
     780:	2101      	movs	r1, #1
     782:	4640      	mov	r0, r8
     784:	4b2f      	ldr	r3, [pc, #188]	; (844 <STACK_SIZE+0x44>)
     786:	4798      	blx	r3
     788:	0007      	movs	r7, r0
     78a:	e751      	b.n	630 <i2c_master_init+0xa8>
	uint32_t fscl_hs     = 1000 * config->baud_rate_high_speed;
     78c:	26fa      	movs	r6, #250	; 0xfa
     78e:	00b6      	lsls	r6, r6, #2
     790:	4653      	mov	r3, sl
     792:	435e      	muls	r6, r3
		tmp_baudlow_hs = (int32_t)((fgclk * 2.0) / (3.0 * fscl_hs) - 1);
     794:	9800      	ldr	r0, [sp, #0]
     796:	9901      	ldr	r1, [sp, #4]
     798:	0002      	movs	r2, r0
     79a:	000b      	movs	r3, r1
     79c:	4c23      	ldr	r4, [pc, #140]	; (82c <STACK_SIZE+0x2c>)
     79e:	47a0      	blx	r4
     7a0:	9000      	str	r0, [sp, #0]
     7a2:	9101      	str	r1, [sp, #4]
     7a4:	0030      	movs	r0, r6
     7a6:	4b1d      	ldr	r3, [pc, #116]	; (81c <STACK_SIZE+0x1c>)
     7a8:	4798      	blx	r3
     7aa:	2200      	movs	r2, #0
     7ac:	4b26      	ldr	r3, [pc, #152]	; (848 <STACK_SIZE+0x48>)
     7ae:	47b8      	blx	r7
     7b0:	0002      	movs	r2, r0
     7b2:	000b      	movs	r3, r1
     7b4:	9800      	ldr	r0, [sp, #0]
     7b6:	9901      	ldr	r1, [sp, #4]
     7b8:	4c20      	ldr	r4, [pc, #128]	; (83c <STACK_SIZE+0x3c>)
     7ba:	47a0      	blx	r4
     7bc:	2200      	movs	r2, #0
     7be:	4b1e      	ldr	r3, [pc, #120]	; (838 <STACK_SIZE+0x38>)
     7c0:	4c1c      	ldr	r4, [pc, #112]	; (834 <STACK_SIZE+0x34>)
     7c2:	47a0      	blx	r4
     7c4:	4b1e      	ldr	r3, [pc, #120]	; (840 <STACK_SIZE+0x40>)
     7c6:	4798      	blx	r3
     7c8:	1e04      	subs	r4, r0, #0
		if (tmp_baudlow_hs) {
     7ca:	d00c      	beq.n	7e6 <i2c_master_init+0x25e>
			tmp_baud_hs = (int32_t)(fgclk / fscl_hs) - 2 - tmp_baudlow_hs;
     7cc:	0031      	movs	r1, r6
     7ce:	9807      	ldr	r0, [sp, #28]
     7d0:	4b1e      	ldr	r3, [pc, #120]	; (84c <STACK_SIZE+0x4c>)
     7d2:	4798      	blx	r3
     7d4:	3802      	subs	r0, #2
     7d6:	1b00      	subs	r0, r0, r4
	if (tmp_baud > 255 || tmp_baud < 0 || tmp_baud_hs > 255 || tmp_baud_hs < 0) {
     7d8:	002b      	movs	r3, r5
     7da:	2dff      	cmp	r5, #255	; 0xff
     7dc:	d80c      	bhi.n	7f8 <i2c_master_init+0x270>
     7de:	28ff      	cmp	r0, #255	; 0xff
     7e0:	d9bc      	bls.n	75c <i2c_master_init+0x1d4>
     7e2:	2040      	movs	r0, #64	; 0x40
     7e4:	e6f7      	b.n	5d6 <i2c_master_init+0x4e>
			tmp_baud_hs = (int32_t)(div_ceil(fgclk, 2 * fscl_hs)) - 1;
     7e6:	0071      	lsls	r1, r6, #1
     7e8:	1e48      	subs	r0, r1, #1
     7ea:	9b07      	ldr	r3, [sp, #28]
     7ec:	469c      	mov	ip, r3
     7ee:	4460      	add	r0, ip
     7f0:	4b16      	ldr	r3, [pc, #88]	; (84c <STACK_SIZE+0x4c>)
     7f2:	4798      	blx	r3
     7f4:	3801      	subs	r0, #1
     7f6:	e7ef      	b.n	7d8 <i2c_master_init+0x250>
	if (tmp_baud > 255 || tmp_baud < 0 || tmp_baud_hs > 255 || tmp_baud_hs < 0) {
     7f8:	2040      	movs	r0, #64	; 0x40
     7fa:	e6ec      	b.n	5d6 <i2c_master_init+0x4e>
     7fc:	000012e5 	.word	0x000012e5
     800:	40000400 	.word	0x40000400
     804:	000015cd 	.word	0x000015cd
     808:	00001541 	.word	0x00001541
     80c:	00001135 	.word	0x00001135
     810:	000016c5 	.word	0x000016c5
     814:	41002000 	.word	0x41002000
     818:	000015e9 	.word	0x000015e9
     81c:	000060c5 	.word	0x000060c5
     820:	0000546d 	.word	0x0000546d
     824:	e826d695 	.word	0xe826d695
     828:	3e112e0b 	.word	0x3e112e0b
     82c:	000045e5 	.word	0x000045e5
     830:	40240000 	.word	0x40240000
     834:	0000596d 	.word	0x0000596d
     838:	3ff00000 	.word	0x3ff00000
     83c:	00004c05 	.word	0x00004c05
     840:	00005fd9 	.word	0x00005fd9
     844:	00001181 	.word	0x00001181
     848:	40080000 	.word	0x40080000
     84c:	00004229 	.word	0x00004229

00000850 <_i2c_master_address_response>:
{
	/* Sanity check arguments */
	Assert(module);
	Assert(module->hw);

	SercomI2cm *const i2c_module = &(module->hw->I2CM);
     850:	6803      	ldr	r3, [r0, #0]

	/* Check for error and ignore bus-error; workaround for BUSSTATE stuck in
	 * BUSY */
	if (i2c_module->INTFLAG.reg & SERCOM_I2CM_INTFLAG_SB) {
     852:	7e1a      	ldrb	r2, [r3, #24]
     854:	0792      	lsls	r2, r2, #30
     856:	d507      	bpl.n	868 <_i2c_master_address_response+0x18>

		/* Clear write interrupt flag */
		i2c_module->INTFLAG.reg = SERCOM_I2CM_INTFLAG_SB;
     858:	2202      	movs	r2, #2
     85a:	761a      	strb	r2, [r3, #24]

		/* Check arbitration. */
		if (i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_ARBLOST) {
     85c:	8b5b      	ldrh	r3, [r3, #26]
     85e:	079b      	lsls	r3, r3, #30
			/* Return packet collision. */
			return STATUS_ERR_PACKET_COLLISION;
     860:	2041      	movs	r0, #65	; 0x41

		/* Return bad address value. */
		return STATUS_ERR_BAD_ADDRESS;
	}

	return STATUS_OK;
     862:	17db      	asrs	r3, r3, #31
     864:	4018      	ands	r0, r3
}
     866:	4770      	bx	lr
	} else if (i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_RXNACK) {
     868:	8b5a      	ldrh	r2, [r3, #26]
     86a:	0752      	lsls	r2, r2, #29
     86c:	d506      	bpl.n	87c <_i2c_master_address_response+0x2c>
		i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(3);
     86e:	6859      	ldr	r1, [r3, #4]
     870:	22c0      	movs	r2, #192	; 0xc0
     872:	0292      	lsls	r2, r2, #10
     874:	430a      	orrs	r2, r1
     876:	605a      	str	r2, [r3, #4]
		return STATUS_ERR_BAD_ADDRESS;
     878:	2018      	movs	r0, #24
     87a:	e7f4      	b.n	866 <_i2c_master_address_response+0x16>
	return STATUS_OK;
     87c:	2000      	movs	r0, #0
     87e:	e7f2      	b.n	866 <_i2c_master_address_response+0x16>

00000880 <_i2c_master_wait_for_bus>:
 * \retval STATUS_ERR_TIMEOUT  If no response was given within specified timeout
 *                             period
 */
enum status_code _i2c_master_wait_for_bus(
		struct i2c_master_module *const module)
{
     880:	b530      	push	{r4, r5, lr}
	/* Sanity check arguments */
	Assert(module);
	Assert(module->hw);

	SercomI2cm *const i2c_module = &(module->hw->I2CM);
     882:	6802      	ldr	r2, [r0, #0]

	/* Wait for reply. */
	uint16_t timeout_counter = 0;
     884:	2300      	movs	r3, #0
	while (!(i2c_module->INTFLAG.reg & SERCOM_I2CM_INTFLAG_MB) &&
     886:	2401      	movs	r4, #1
     888:	2502      	movs	r5, #2
     88a:	7e11      	ldrb	r1, [r2, #24]
     88c:	4221      	tst	r1, r4
     88e:	d10b      	bne.n	8a8 <_i2c_master_wait_for_bus+0x28>
			!(i2c_module->INTFLAG.reg & SERCOM_I2CM_INTFLAG_SB)) {
     890:	7e11      	ldrb	r1, [r2, #24]
	while (!(i2c_module->INTFLAG.reg & SERCOM_I2CM_INTFLAG_MB) &&
     892:	4229      	tst	r1, r5
     894:	d106      	bne.n	8a4 <_i2c_master_wait_for_bus+0x24>

		/* Check timeout condition. */
		if (++timeout_counter >= module->buffer_timeout) {
     896:	3301      	adds	r3, #1
     898:	b29b      	uxth	r3, r3
     89a:	8901      	ldrh	r1, [r0, #8]
     89c:	4299      	cmp	r1, r3
     89e:	d8f4      	bhi.n	88a <_i2c_master_wait_for_bus+0xa>
			return STATUS_ERR_TIMEOUT;
     8a0:	2012      	movs	r0, #18
     8a2:	e002      	b.n	8aa <_i2c_master_wait_for_bus+0x2a>
		}
	}
	return STATUS_OK;
     8a4:	2000      	movs	r0, #0
     8a6:	e000      	b.n	8aa <_i2c_master_wait_for_bus+0x2a>
     8a8:	2000      	movs	r0, #0
}
     8aa:	bd30      	pop	{r4, r5, pc}

000008ac <_i2c_master_send_hs_master_code>:
 * \retval STATUS_OK           No error happen
 */
enum status_code _i2c_master_send_hs_master_code(
		struct i2c_master_module *const module,
		uint8_t hs_master_code)
{
     8ac:	b510      	push	{r4, lr}
	SercomI2cm *const i2c_module = &(module->hw->I2CM);
     8ae:	6804      	ldr	r4, [r0, #0]
	/* Return value. */
	enum status_code tmp_status;

	/* Set NACK for high speed code */
	i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT;
     8b0:	6862      	ldr	r2, [r4, #4]
     8b2:	2380      	movs	r3, #128	; 0x80
     8b4:	02db      	lsls	r3, r3, #11
     8b6:	4313      	orrs	r3, r2
     8b8:	6063      	str	r3, [r4, #4]
	/* Send high speed code */
	i2c_module->ADDR.reg = hs_master_code;
     8ba:	6261      	str	r1, [r4, #36]	; 0x24
	/* Wait for response on bus. */
	tmp_status = _i2c_master_wait_for_bus(module);
     8bc:	4b02      	ldr	r3, [pc, #8]	; (8c8 <_i2c_master_send_hs_master_code+0x1c>)
     8be:	4798      	blx	r3
	/* Clear write interrupt flag */
	i2c_module->INTFLAG.reg = SERCOM_I2CM_INTENCLR_MB;
     8c0:	2301      	movs	r3, #1
     8c2:	7623      	strb	r3, [r4, #24]

	return tmp_status;
}
     8c4:	bd10      	pop	{r4, pc}
     8c6:	46c0      	nop			; (mov r8, r8)
     8c8:	00000881 	.word	0x00000881

000008cc <_i2c_master_read_packet>:
 *
 */
static enum status_code _i2c_master_read_packet(
		struct i2c_master_module *const module,
		struct i2c_master_packet *const packet)
{
     8cc:	b5f0      	push	{r4, r5, r6, r7, lr}
     8ce:	46de      	mov	lr, fp
     8d0:	4657      	mov	r7, sl
     8d2:	464e      	mov	r6, r9
     8d4:	4645      	mov	r5, r8
     8d6:	b5e0      	push	{r5, r6, r7, lr}
     8d8:	b083      	sub	sp, #12
     8da:	0006      	movs	r6, r0
     8dc:	4689      	mov	r9, r1
	/* Sanity check arguments */
	Assert(module);
	Assert(module->hw);
	Assert(packet);

	SercomI2cm *const i2c_module = &(module->hw->I2CM);
     8de:	6805      	ldr	r5, [r0, #0]

	/* Return value. */
	enum status_code tmp_status;
	uint16_t tmp_data_length = packet->data_length;
     8e0:	884c      	ldrh	r4, [r1, #2]

	/* Written buffer counter. */
	uint16_t counter = 0;

	bool sclsm_flag = i2c_module->CTRLA.bit.SCLSM;
     8e2:	682b      	ldr	r3, [r5, #0]
     8e4:	011b      	lsls	r3, r3, #4
     8e6:	0fdb      	lsrs	r3, r3, #31
     8e8:	469a      	mov	sl, r3

	/* Switch to high speed mode */
	if (packet->high_speed) {
     8ea:	7a4b      	ldrb	r3, [r1, #9]
     8ec:	2b00      	cmp	r3, #0
     8ee:	d12b      	bne.n	948 <_i2c_master_read_packet+0x7c>
		_i2c_master_send_hs_master_code(module, packet->hs_master_code);
	}

	/* Set action to ACK. */
	i2c_module->CTRLB.reg &= ~SERCOM_I2CM_CTRLB_ACKACT;
     8f0:	686b      	ldr	r3, [r5, #4]
     8f2:	4a58      	ldr	r2, [pc, #352]	; (a54 <_i2c_master_read_packet+0x188>)
     8f4:	4013      	ands	r3, r2
     8f6:	606b      	str	r3, [r5, #4]

	/* Set address and direction bit. Will send start command on bus. */
	if (packet->ten_bit_address) {
     8f8:	464b      	mov	r3, r9
     8fa:	7a1b      	ldrb	r3, [r3, #8]
     8fc:	2b00      	cmp	r3, #0
     8fe:	d127      	bne.n	950 <_i2c_master_read_packet+0x84>
				I2C_TRANSFER_READ;
		} else {
			return tmp_status;
		}
	} else {
		i2c_module->ADDR.reg = (packet->address << 1) | I2C_TRANSFER_READ |
     900:	464b      	mov	r3, r9
     902:	881b      	ldrh	r3, [r3, #0]
     904:	005b      	lsls	r3, r3, #1
			(packet->high_speed << SERCOM_I2CM_ADDR_HS_Pos);
     906:	464a      	mov	r2, r9
     908:	7a52      	ldrb	r2, [r2, #9]
     90a:	0392      	lsls	r2, r2, #14
		i2c_module->ADDR.reg = (packet->address << 1) | I2C_TRANSFER_READ |
     90c:	4313      	orrs	r3, r2
     90e:	2201      	movs	r2, #1
     910:	4313      	orrs	r3, r2
     912:	626b      	str	r3, [r5, #36]	; 0x24
	}

	/* Wait for response on bus. */
	tmp_status = _i2c_master_wait_for_bus(module);
     914:	0030      	movs	r0, r6
     916:	4b50      	ldr	r3, [pc, #320]	; (a58 <_i2c_master_read_packet+0x18c>)
     918:	4798      	blx	r3
     91a:	9001      	str	r0, [sp, #4]

	/* Set action to ack or nack. */
	if ((sclsm_flag) && (packet->data_length == 1)) {
     91c:	4653      	mov	r3, sl
     91e:	2b00      	cmp	r3, #0
     920:	d003      	beq.n	92a <_i2c_master_read_packet+0x5e>
     922:	464b      	mov	r3, r9
     924:	885b      	ldrh	r3, [r3, #2]
     926:	2b01      	cmp	r3, #1
     928:	d03b      	beq.n	9a2 <_i2c_master_read_packet+0xd6>
		i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT;
	} else {
		i2c_module->CTRLB.reg &= ~SERCOM_I2CM_CTRLB_ACKACT;	
     92a:	686b      	ldr	r3, [r5, #4]
     92c:	4a49      	ldr	r2, [pc, #292]	; (a54 <_i2c_master_read_packet+0x188>)
     92e:	4013      	ands	r3, r2
     930:	606b      	str	r3, [r5, #4]
	}

	/* Check for address response error unless previous error is
	 * detected. */
	if (tmp_status == STATUS_OK) {
     932:	9b01      	ldr	r3, [sp, #4]
     934:	2b00      	cmp	r3, #0
     936:	d03a      	beq.n	9ae <_i2c_master_read_packet+0xe2>
		_i2c_master_wait_for_sync(module);
		packet->data[counter] = i2c_module->DATA.reg;
	}

	return tmp_status;
}
     938:	9801      	ldr	r0, [sp, #4]
     93a:	b003      	add	sp, #12
     93c:	bc3c      	pop	{r2, r3, r4, r5}
     93e:	4690      	mov	r8, r2
     940:	4699      	mov	r9, r3
     942:	46a2      	mov	sl, r4
     944:	46ab      	mov	fp, r5
     946:	bdf0      	pop	{r4, r5, r6, r7, pc}
		_i2c_master_send_hs_master_code(module, packet->hs_master_code);
     948:	7a89      	ldrb	r1, [r1, #10]
     94a:	4b44      	ldr	r3, [pc, #272]	; (a5c <_i2c_master_read_packet+0x190>)
     94c:	4798      	blx	r3
     94e:	e7cf      	b.n	8f0 <_i2c_master_read_packet+0x24>
		i2c_module->ADDR.reg = (packet->address << 1) |
     950:	464b      	mov	r3, r9
     952:	881b      	ldrh	r3, [r3, #0]
     954:	005b      	lsls	r3, r3, #1
			(packet->high_speed << SERCOM_I2CM_ADDR_HS_Pos) |
     956:	464a      	mov	r2, r9
     958:	7a52      	ldrb	r2, [r2, #9]
     95a:	0392      	lsls	r2, r2, #14
		i2c_module->ADDR.reg = (packet->address << 1) |
     95c:	4313      	orrs	r3, r2
			(packet->high_speed << SERCOM_I2CM_ADDR_HS_Pos) |
     95e:	2280      	movs	r2, #128	; 0x80
     960:	0212      	lsls	r2, r2, #8
     962:	4313      	orrs	r3, r2
		i2c_module->ADDR.reg = (packet->address << 1) |
     964:	626b      	str	r3, [r5, #36]	; 0x24
		tmp_status = _i2c_master_wait_for_bus(module);
     966:	0030      	movs	r0, r6
     968:	4b3b      	ldr	r3, [pc, #236]	; (a58 <_i2c_master_read_packet+0x18c>)
     96a:	4798      	blx	r3
     96c:	9001      	str	r0, [sp, #4]
		i2c_module->CTRLB.reg &= ~SERCOM_I2CM_CTRLB_ACKACT;
     96e:	686b      	ldr	r3, [r5, #4]
     970:	4a38      	ldr	r2, [pc, #224]	; (a54 <_i2c_master_read_packet+0x188>)
     972:	4013      	ands	r3, r2
     974:	606b      	str	r3, [r5, #4]
		if (tmp_status == STATUS_OK) {
     976:	2800      	cmp	r0, #0
     978:	d1de      	bne.n	938 <_i2c_master_read_packet+0x6c>
			tmp_status = _i2c_master_address_response(module);
     97a:	0030      	movs	r0, r6
     97c:	4b38      	ldr	r3, [pc, #224]	; (a60 <_i2c_master_read_packet+0x194>)
     97e:	4798      	blx	r3
     980:	9001      	str	r0, [sp, #4]
		if (tmp_status == STATUS_OK) {
     982:	2800      	cmp	r0, #0
     984:	d1d8      	bne.n	938 <_i2c_master_read_packet+0x6c>
			i2c_module->ADDR.reg = (((packet->address >> 8) | 0x78) << 1) |
     986:	464b      	mov	r3, r9
     988:	881b      	ldrh	r3, [r3, #0]
     98a:	0a1b      	lsrs	r3, r3, #8
     98c:	2278      	movs	r2, #120	; 0x78
     98e:	4313      	orrs	r3, r2
     990:	005b      	lsls	r3, r3, #1
				(packet->high_speed << SERCOM_I2CM_ADDR_HS_Pos) |
     992:	464a      	mov	r2, r9
     994:	7a52      	ldrb	r2, [r2, #9]
     996:	0392      	lsls	r2, r2, #14
     998:	2101      	movs	r1, #1
     99a:	430a      	orrs	r2, r1
     99c:	4313      	orrs	r3, r2
			i2c_module->ADDR.reg = (((packet->address >> 8) | 0x78) << 1) |
     99e:	626b      	str	r3, [r5, #36]	; 0x24
     9a0:	e7b8      	b.n	914 <_i2c_master_read_packet+0x48>
		i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT;
     9a2:	686a      	ldr	r2, [r5, #4]
     9a4:	2380      	movs	r3, #128	; 0x80
     9a6:	02db      	lsls	r3, r3, #11
     9a8:	4313      	orrs	r3, r2
     9aa:	606b      	str	r3, [r5, #4]
     9ac:	e7c1      	b.n	932 <_i2c_master_read_packet+0x66>
		tmp_status = _i2c_master_address_response(module);
     9ae:	0030      	movs	r0, r6
     9b0:	4b2b      	ldr	r3, [pc, #172]	; (a60 <_i2c_master_read_packet+0x194>)
     9b2:	4798      	blx	r3
     9b4:	9001      	str	r0, [sp, #4]
	if (tmp_status == STATUS_OK) {
     9b6:	2800      	cmp	r0, #0
     9b8:	d1be      	bne.n	938 <_i2c_master_read_packet+0x6c>
     9ba:	3c01      	subs	r4, #1
     9bc:	b2a4      	uxth	r4, r4
     9be:	4680      	mov	r8, r0
		while (tmp_data_length--) {
     9c0:	4b28      	ldr	r3, [pc, #160]	; (a64 <_i2c_master_read_packet+0x198>)
     9c2:	469b      	mov	fp, r3
     9c4:	e015      	b.n	9f2 <_i2c_master_read_packet+0x126>
					((sclsm_flag) && (tmp_data_length == 1)))) {
     9c6:	2c01      	cmp	r4, #1
     9c8:	d020      	beq.n	a0c <_i2c_master_read_packet+0x140>
				_i2c_master_wait_for_sync(module);
     9ca:	0030      	movs	r0, r6
     9cc:	4b26      	ldr	r3, [pc, #152]	; (a68 <_i2c_master_read_packet+0x19c>)
     9ce:	4798      	blx	r3
				packet->data[counter++] = i2c_module->DATA.reg;
     9d0:	4643      	mov	r3, r8
     9d2:	1c5f      	adds	r7, r3, #1
     9d4:	b2bf      	uxth	r7, r7
     9d6:	2328      	movs	r3, #40	; 0x28
     9d8:	5ceb      	ldrb	r3, [r5, r3]
     9da:	464a      	mov	r2, r9
     9dc:	6852      	ldr	r2, [r2, #4]
     9de:	4641      	mov	r1, r8
     9e0:	5453      	strb	r3, [r2, r1]
				tmp_status = _i2c_master_wait_for_bus(module);
     9e2:	0030      	movs	r0, r6
     9e4:	4b1c      	ldr	r3, [pc, #112]	; (a58 <_i2c_master_read_packet+0x18c>)
     9e6:	4798      	blx	r3
     9e8:	3c01      	subs	r4, #1
     9ea:	b2a4      	uxth	r4, r4
			if (tmp_status != STATUS_OK) {
     9ec:	2800      	cmp	r0, #0
     9ee:	d115      	bne.n	a1c <_i2c_master_read_packet+0x150>
				packet->data[counter++] = i2c_module->DATA.reg;
     9f0:	46b8      	mov	r8, r7
		while (tmp_data_length--) {
     9f2:	455c      	cmp	r4, fp
     9f4:	d014      	beq.n	a20 <_i2c_master_read_packet+0x154>
			if (!(i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE(2))) {
     9f6:	8b6b      	ldrh	r3, [r5, #26]
     9f8:	069b      	lsls	r3, r3, #26
     9fa:	d527      	bpl.n	a4c <_i2c_master_read_packet+0x180>
			if (module->send_nack && (((!sclsm_flag) && (tmp_data_length == 0)) ||
     9fc:	7af3      	ldrb	r3, [r6, #11]
     9fe:	2b00      	cmp	r3, #0
     a00:	d0e3      	beq.n	9ca <_i2c_master_read_packet+0xfe>
     a02:	4653      	mov	r3, sl
     a04:	2b00      	cmp	r3, #0
     a06:	d1de      	bne.n	9c6 <_i2c_master_read_packet+0xfa>
     a08:	2c00      	cmp	r4, #0
     a0a:	d1de      	bne.n	9ca <_i2c_master_read_packet+0xfe>
				i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT;
     a0c:	686a      	ldr	r2, [r5, #4]
     a0e:	2380      	movs	r3, #128	; 0x80
     a10:	02db      	lsls	r3, r3, #11
     a12:	4313      	orrs	r3, r2
     a14:	606b      	str	r3, [r5, #4]
     a16:	3c01      	subs	r4, #1
     a18:	b2a4      	uxth	r4, r4
     a1a:	e7ea      	b.n	9f2 <_i2c_master_read_packet+0x126>
				packet->data[counter++] = i2c_module->DATA.reg;
     a1c:	46b8      	mov	r8, r7
				tmp_status = _i2c_master_wait_for_bus(module);
     a1e:	9001      	str	r0, [sp, #4]
		if (module->send_stop) {
     a20:	7ab3      	ldrb	r3, [r6, #10]
     a22:	2b00      	cmp	r3, #0
     a24:	d109      	bne.n	a3a <_i2c_master_read_packet+0x16e>
		_i2c_master_wait_for_sync(module);
     a26:	0030      	movs	r0, r6
     a28:	4b0f      	ldr	r3, [pc, #60]	; (a68 <_i2c_master_read_packet+0x19c>)
     a2a:	4798      	blx	r3
		packet->data[counter] = i2c_module->DATA.reg;
     a2c:	2328      	movs	r3, #40	; 0x28
     a2e:	5cea      	ldrb	r2, [r5, r3]
     a30:	464b      	mov	r3, r9
     a32:	685b      	ldr	r3, [r3, #4]
     a34:	4641      	mov	r1, r8
     a36:	545a      	strb	r2, [r3, r1]
     a38:	e77e      	b.n	938 <_i2c_master_read_packet+0x6c>
			_i2c_master_wait_for_sync(module);
     a3a:	0030      	movs	r0, r6
     a3c:	4b0a      	ldr	r3, [pc, #40]	; (a68 <_i2c_master_read_packet+0x19c>)
     a3e:	4798      	blx	r3
			i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(3);
     a40:	686a      	ldr	r2, [r5, #4]
     a42:	23c0      	movs	r3, #192	; 0xc0
     a44:	029b      	lsls	r3, r3, #10
     a46:	4313      	orrs	r3, r2
     a48:	606b      	str	r3, [r5, #4]
     a4a:	e7ec      	b.n	a26 <_i2c_master_read_packet+0x15a>
				return STATUS_ERR_PACKET_COLLISION;
     a4c:	2341      	movs	r3, #65	; 0x41
     a4e:	9301      	str	r3, [sp, #4]
     a50:	e772      	b.n	938 <_i2c_master_read_packet+0x6c>
     a52:	46c0      	nop			; (mov r8, r8)
     a54:	fffbffff 	.word	0xfffbffff
     a58:	00000881 	.word	0x00000881
     a5c:	000008ad 	.word	0x000008ad
     a60:	00000851 	.word	0x00000851
     a64:	0000ffff 	.word	0x0000ffff
     a68:	0000057d 	.word	0x0000057d

00000a6c <_i2c_master_write_packet>:
 *                                      acknowledged the address
 */
static enum status_code _i2c_master_write_packet(
		struct i2c_master_module *const module,
		struct i2c_master_packet *const packet)
{
     a6c:	b5f0      	push	{r4, r5, r6, r7, lr}
     a6e:	46de      	mov	lr, fp
     a70:	4657      	mov	r7, sl
     a72:	464e      	mov	r6, r9
     a74:	4645      	mov	r5, r8
     a76:	b5e0      	push	{r5, r6, r7, lr}
     a78:	b083      	sub	sp, #12
     a7a:	0006      	movs	r6, r0
     a7c:	000f      	movs	r7, r1
	SercomI2cm *const i2c_module = &(module->hw->I2CM);
     a7e:	6805      	ldr	r5, [r0, #0]

	/* Return value. */
	enum status_code tmp_status;
	uint16_t tmp_data_length = packet->data_length;
     a80:	884c      	ldrh	r4, [r1, #2]

	_i2c_master_wait_for_sync(module);
     a82:	4b32      	ldr	r3, [pc, #200]	; (b4c <_i2c_master_write_packet+0xe0>)
     a84:	4798      	blx	r3

	/* Switch to high speed mode */
	if (packet->high_speed) {
     a86:	7a7b      	ldrb	r3, [r7, #9]
     a88:	2b00      	cmp	r3, #0
     a8a:	d11d      	bne.n	ac8 <_i2c_master_write_packet+0x5c>
		_i2c_master_send_hs_master_code(module, packet->hs_master_code);
	}

	/* Set action to ACK. */
	i2c_module->CTRLB.reg &= ~SERCOM_I2CM_CTRLB_ACKACT;
     a8c:	686b      	ldr	r3, [r5, #4]
     a8e:	4a30      	ldr	r2, [pc, #192]	; (b50 <_i2c_master_write_packet+0xe4>)
     a90:	4013      	ands	r3, r2
     a92:	606b      	str	r3, [r5, #4]

	/* Set address and direction bit. Will send start command on bus. */
	if (packet->ten_bit_address) {
     a94:	7a3b      	ldrb	r3, [r7, #8]
     a96:	2b00      	cmp	r3, #0
     a98:	d01b      	beq.n	ad2 <_i2c_master_write_packet+0x66>
		i2c_module->ADDR.reg = (packet->address << 1) | I2C_TRANSFER_WRITE |
     a9a:	883b      	ldrh	r3, [r7, #0]
     a9c:	005b      	lsls	r3, r3, #1
			(packet->high_speed << SERCOM_I2CM_ADDR_HS_Pos) |
     a9e:	7a7a      	ldrb	r2, [r7, #9]
     aa0:	0392      	lsls	r2, r2, #14
		i2c_module->ADDR.reg = (packet->address << 1) | I2C_TRANSFER_WRITE |
     aa2:	4313      	orrs	r3, r2
			(packet->high_speed << SERCOM_I2CM_ADDR_HS_Pos) |
     aa4:	2280      	movs	r2, #128	; 0x80
     aa6:	0212      	lsls	r2, r2, #8
     aa8:	4313      	orrs	r3, r2
		i2c_module->ADDR.reg = (packet->address << 1) | I2C_TRANSFER_WRITE |
     aaa:	626b      	str	r3, [r5, #36]	; 0x24
	} else {
		i2c_module->ADDR.reg = (packet->address << 1) | I2C_TRANSFER_WRITE |
			(packet->high_speed << SERCOM_I2CM_ADDR_HS_Pos);
	}
	/* Wait for response on bus. */
	tmp_status = _i2c_master_wait_for_bus(module);
     aac:	0030      	movs	r0, r6
     aae:	4b29      	ldr	r3, [pc, #164]	; (b54 <_i2c_master_write_packet+0xe8>)
     ab0:	4798      	blx	r3
     ab2:	9001      	str	r0, [sp, #4]

	/* Check for address response error unless previous error is
	 * detected. */
	if (tmp_status == STATUS_OK) {
     ab4:	2800      	cmp	r0, #0
     ab6:	d013      	beq.n	ae0 <_i2c_master_write_packet+0x74>
			i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(3);
		}
	}

	return tmp_status;
}
     ab8:	9801      	ldr	r0, [sp, #4]
     aba:	b003      	add	sp, #12
     abc:	bc3c      	pop	{r2, r3, r4, r5}
     abe:	4690      	mov	r8, r2
     ac0:	4699      	mov	r9, r3
     ac2:	46a2      	mov	sl, r4
     ac4:	46ab      	mov	fp, r5
     ac6:	bdf0      	pop	{r4, r5, r6, r7, pc}
		_i2c_master_send_hs_master_code(module, packet->hs_master_code);
     ac8:	7ab9      	ldrb	r1, [r7, #10]
     aca:	0030      	movs	r0, r6
     acc:	4b22      	ldr	r3, [pc, #136]	; (b58 <_i2c_master_write_packet+0xec>)
     ace:	4798      	blx	r3
     ad0:	e7dc      	b.n	a8c <_i2c_master_write_packet+0x20>
		i2c_module->ADDR.reg = (packet->address << 1) | I2C_TRANSFER_WRITE |
     ad2:	883b      	ldrh	r3, [r7, #0]
     ad4:	005b      	lsls	r3, r3, #1
			(packet->high_speed << SERCOM_I2CM_ADDR_HS_Pos);
     ad6:	7a7a      	ldrb	r2, [r7, #9]
     ad8:	0392      	lsls	r2, r2, #14
		i2c_module->ADDR.reg = (packet->address << 1) | I2C_TRANSFER_WRITE |
     ada:	4313      	orrs	r3, r2
     adc:	626b      	str	r3, [r5, #36]	; 0x24
     ade:	e7e5      	b.n	aac <_i2c_master_write_packet+0x40>
		tmp_status = _i2c_master_address_response(module);
     ae0:	0030      	movs	r0, r6
     ae2:	4b1e      	ldr	r3, [pc, #120]	; (b5c <_i2c_master_write_packet+0xf0>)
     ae4:	4798      	blx	r3
     ae6:	1e03      	subs	r3, r0, #0
     ae8:	9001      	str	r0, [sp, #4]
	if (tmp_status == STATUS_OK) {
     aea:	d1e5      	bne.n	ab8 <_i2c_master_write_packet+0x4c>
     aec:	46a0      	mov	r8, r4
     aee:	2400      	movs	r4, #0
			if (!(i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE(2))) {
     af0:	3320      	adds	r3, #32
     af2:	4699      	mov	r9, r3
			_i2c_master_wait_for_sync(module);
     af4:	4b15      	ldr	r3, [pc, #84]	; (b4c <_i2c_master_write_packet+0xe0>)
     af6:	469b      	mov	fp, r3
			tmp_status = _i2c_master_wait_for_bus(module);
     af8:	4b16      	ldr	r3, [pc, #88]	; (b54 <_i2c_master_write_packet+0xe8>)
     afa:	469a      	mov	sl, r3
		while (tmp_data_length--) {
     afc:	4544      	cmp	r4, r8
     afe:	d015      	beq.n	b2c <_i2c_master_write_packet+0xc0>
			if (!(i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE(2))) {
     b00:	8b6b      	ldrh	r3, [r5, #26]
     b02:	464a      	mov	r2, r9
     b04:	4213      	tst	r3, r2
     b06:	d01d      	beq.n	b44 <_i2c_master_write_packet+0xd8>
			_i2c_master_wait_for_sync(module);
     b08:	0030      	movs	r0, r6
     b0a:	47d8      	blx	fp
			i2c_module->DATA.reg = packet->data[buffer_counter++];
     b0c:	687b      	ldr	r3, [r7, #4]
     b0e:	5d1a      	ldrb	r2, [r3, r4]
     b10:	2328      	movs	r3, #40	; 0x28
     b12:	54ea      	strb	r2, [r5, r3]
			tmp_status = _i2c_master_wait_for_bus(module);
     b14:	0030      	movs	r0, r6
     b16:	47d0      	blx	sl
			if (tmp_status != STATUS_OK) {
     b18:	2800      	cmp	r0, #0
     b1a:	d106      	bne.n	b2a <_i2c_master_write_packet+0xbe>
			if (i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_RXNACK) {
     b1c:	8b6b      	ldrh	r3, [r5, #26]
     b1e:	3401      	adds	r4, #1
     b20:	075b      	lsls	r3, r3, #29
     b22:	d5eb      	bpl.n	afc <_i2c_master_write_packet+0x90>
				tmp_status = STATUS_ERR_OVERFLOW;
     b24:	231e      	movs	r3, #30
     b26:	9301      	str	r3, [sp, #4]
     b28:	e000      	b.n	b2c <_i2c_master_write_packet+0xc0>
			tmp_status = _i2c_master_wait_for_bus(module);
     b2a:	9001      	str	r0, [sp, #4]
		if (module->send_stop) {
     b2c:	7ab3      	ldrb	r3, [r6, #10]
     b2e:	2b00      	cmp	r3, #0
     b30:	d0c2      	beq.n	ab8 <_i2c_master_write_packet+0x4c>
			_i2c_master_wait_for_sync(module);
     b32:	0030      	movs	r0, r6
     b34:	4b05      	ldr	r3, [pc, #20]	; (b4c <_i2c_master_write_packet+0xe0>)
     b36:	4798      	blx	r3
			i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(3);
     b38:	686a      	ldr	r2, [r5, #4]
     b3a:	23c0      	movs	r3, #192	; 0xc0
     b3c:	029b      	lsls	r3, r3, #10
     b3e:	4313      	orrs	r3, r2
     b40:	606b      	str	r3, [r5, #4]
     b42:	e7b9      	b.n	ab8 <_i2c_master_write_packet+0x4c>
				return STATUS_ERR_PACKET_COLLISION;
     b44:	2341      	movs	r3, #65	; 0x41
     b46:	9301      	str	r3, [sp, #4]
     b48:	e7b6      	b.n	ab8 <_i2c_master_write_packet+0x4c>
     b4a:	46c0      	nop			; (mov r8, r8)
     b4c:	0000057d 	.word	0x0000057d
     b50:	fffbffff 	.word	0xfffbffff
     b54:	00000881 	.word	0x00000881
     b58:	000008ad 	.word	0x000008ad
     b5c:	00000851 	.word	0x00000851

00000b60 <i2c_master_read_packet_wait>:
{
     b60:	b510      	push	{r4, lr}
	module->send_stop = true;
     b62:	2301      	movs	r3, #1
     b64:	7283      	strb	r3, [r0, #10]
	module->send_nack = true;
     b66:	72c3      	strb	r3, [r0, #11]
	return _i2c_master_read_packet(module, packet);
     b68:	4b01      	ldr	r3, [pc, #4]	; (b70 <i2c_master_read_packet_wait+0x10>)
     b6a:	4798      	blx	r3
}
     b6c:	bd10      	pop	{r4, pc}
     b6e:	46c0      	nop			; (mov r8, r8)
     b70:	000008cd 	.word	0x000008cd

00000b74 <i2c_master_write_packet_wait>:
 *                                      last data sent
 */
enum status_code i2c_master_write_packet_wait(
		struct i2c_master_module *const module,
		struct i2c_master_packet *const packet)
{
     b74:	b510      	push	{r4, lr}
	if (module->buffer_remaining > 0) {
		return STATUS_BUSY;
	}
#endif

	module->send_stop = true;
     b76:	2301      	movs	r3, #1
     b78:	7283      	strb	r3, [r0, #10]
	module->send_nack = true;
     b7a:	72c3      	strb	r3, [r0, #11]

	return _i2c_master_write_packet(module, packet);
     b7c:	4b01      	ldr	r3, [pc, #4]	; (b84 <i2c_master_write_packet_wait+0x10>)
     b7e:	4798      	blx	r3
}
     b80:	bd10      	pop	{r4, pc}
     b82:	46c0      	nop			; (mov r8, r8)
     b84:	00000a6d 	.word	0x00000a6d

00000b88 <i2c_master_write_packet_wait_no_stop>:
 *                                      more data
 */
enum status_code i2c_master_write_packet_wait_no_stop(
		struct i2c_master_module *const module,
		struct i2c_master_packet *const packet)
{
     b88:	b510      	push	{r4, lr}
	if (module->buffer_remaining > 0) {
		return STATUS_BUSY;
	}
#endif

	module->send_stop = false;
     b8a:	2300      	movs	r3, #0
     b8c:	7283      	strb	r3, [r0, #10]
	module->send_nack = true;
     b8e:	3301      	adds	r3, #1
     b90:	72c3      	strb	r3, [r0, #11]

	return _i2c_master_write_packet(module, packet);
     b92:	4b01      	ldr	r3, [pc, #4]	; (b98 <i2c_master_write_packet_wait_no_stop+0x10>)
     b94:	4798      	blx	r3
}
     b96:	bd10      	pop	{r4, pc}
     b98:	00000a6d 	.word	0x00000a6d

00000b9c <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
     b9c:	b5f0      	push	{r4, r5, r6, r7, lr}
     b9e:	46c6      	mov	lr, r8
     ba0:	b500      	push	{lr}
     ba2:	000c      	movs	r4, r1
     ba4:	4690      	mov	r8, r2
	int nChars = 0;

	if (file != 0) {
     ba6:	2800      	cmp	r0, #0
     ba8:	d10f      	bne.n	bca <_read+0x2e>
		return -1;
	}

	for (; len > 0; --len) {
     baa:	2a00      	cmp	r2, #0
     bac:	dd11      	ble.n	bd2 <_read+0x36>
     bae:	188f      	adds	r7, r1, r2
		ptr_get(stdio_base, ptr);
     bb0:	4e09      	ldr	r6, [pc, #36]	; (bd8 <_read+0x3c>)
     bb2:	4d0a      	ldr	r5, [pc, #40]	; (bdc <_read+0x40>)
     bb4:	6830      	ldr	r0, [r6, #0]
     bb6:	0021      	movs	r1, r4
     bb8:	682b      	ldr	r3, [r5, #0]
     bba:	4798      	blx	r3
		ptr++;
     bbc:	3401      	adds	r4, #1
	for (; len > 0; --len) {
     bbe:	42bc      	cmp	r4, r7
     bc0:	d1f8      	bne.n	bb4 <_read+0x18>
		nChars++;
	}
	return nChars;
}
     bc2:	4640      	mov	r0, r8
     bc4:	bc04      	pop	{r2}
     bc6:	4690      	mov	r8, r2
     bc8:	bdf0      	pop	{r4, r5, r6, r7, pc}
		return -1;
     bca:	2301      	movs	r3, #1
     bcc:	425b      	negs	r3, r3
     bce:	4698      	mov	r8, r3
     bd0:	e7f7      	b.n	bc2 <_read+0x26>
	for (; len > 0; --len) {
     bd2:	4680      	mov	r8, r0
     bd4:	e7f5      	b.n	bc2 <_read+0x26>
     bd6:	46c0      	nop			; (mov r8, r8)
     bd8:	200002a4 	.word	0x200002a4
     bdc:	2000029c 	.word	0x2000029c

00000be0 <_write>:
int __attribute__((weak))
_write (int file, char * ptr, int len);

int __attribute__((weak))
_write (int file, char * ptr, int len)
{
     be0:	b5f0      	push	{r4, r5, r6, r7, lr}
     be2:	46c6      	mov	lr, r8
     be4:	b500      	push	{lr}
     be6:	000e      	movs	r6, r1
     be8:	0015      	movs	r5, r2
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
     bea:	3801      	subs	r0, #1
     bec:	2802      	cmp	r0, #2
     bee:	d810      	bhi.n	c12 <_write+0x32>
		return -1;
	}

	for (; len != 0; --len) {
     bf0:	2a00      	cmp	r2, #0
     bf2:	d011      	beq.n	c18 <_write+0x38>
     bf4:	2400      	movs	r4, #0
		if (ptr_put(stdio_base, *ptr++) < 0) {
     bf6:	4b0c      	ldr	r3, [pc, #48]	; (c28 <_write+0x48>)
     bf8:	4698      	mov	r8, r3
     bfa:	4f0c      	ldr	r7, [pc, #48]	; (c2c <_write+0x4c>)
     bfc:	4643      	mov	r3, r8
     bfe:	6818      	ldr	r0, [r3, #0]
     c00:	5d31      	ldrb	r1, [r6, r4]
     c02:	683b      	ldr	r3, [r7, #0]
     c04:	4798      	blx	r3
     c06:	2800      	cmp	r0, #0
     c08:	db08      	blt.n	c1c <_write+0x3c>
			return -1;
		}
		++nChars;
     c0a:	3401      	adds	r4, #1
	for (; len != 0; --len) {
     c0c:	42a5      	cmp	r5, r4
     c0e:	d1f5      	bne.n	bfc <_write+0x1c>
     c10:	e006      	b.n	c20 <_write+0x40>
		return -1;
     c12:	2401      	movs	r4, #1
     c14:	4264      	negs	r4, r4
     c16:	e003      	b.n	c20 <_write+0x40>
	for (; len != 0; --len) {
     c18:	0014      	movs	r4, r2
     c1a:	e001      	b.n	c20 <_write+0x40>
			return -1;
     c1c:	2401      	movs	r4, #1
     c1e:	4264      	negs	r4, r4
	}
	return nChars;
}
     c20:	0020      	movs	r0, r4
     c22:	bc04      	pop	{r2}
     c24:	4690      	mov	r8, r2
     c26:	bdf0      	pop	{r4, r5, r6, r7, pc}
     c28:	200002a4 	.word	0x200002a4
     c2c:	200002a0 	.word	0x200002a0

00000c30 <usart_init>:
 */
enum status_code usart_init(
		struct usart_module *const module,
		Sercom *const hw,
		const struct usart_config *const config)
{
     c30:	b5f0      	push	{r4, r5, r6, r7, lr}
     c32:	46de      	mov	lr, fp
     c34:	4657      	mov	r7, sl
     c36:	464e      	mov	r6, r9
     c38:	4645      	mov	r5, r8
     c3a:	b5e0      	push	{r5, r6, r7, lr}
     c3c:	b091      	sub	sp, #68	; 0x44
     c3e:	0005      	movs	r5, r0
     c40:	000c      	movs	r4, r1
     c42:	0016      	movs	r6, r2
	Assert(config);

	enum status_code status_code = STATUS_OK;

	/* Assign module pointer to software instance struct */
	module->hw = hw;
     c44:	6029      	str	r1, [r5, #0]

	/* Get a pointer to the hardware module instance */
	SercomUsart *const usart_hw = &(module->hw->USART);

	uint32_t sercom_index = _sercom_get_sercom_inst_index(module->hw);
     c46:	0008      	movs	r0, r1
     c48:	4bad      	ldr	r3, [pc, #692]	; (f00 <usart_init+0x2d0>)
     c4a:	4798      	blx	r3
     c4c:	0002      	movs	r2, r0
#else
	pm_index     = sercom_index + PM_APBCMASK_SERCOM0_Pos;
	gclk_index   = sercom_index + SERCOM0_GCLK_ID_CORE;
#endif

	if (usart_hw->CTRLA.reg & SERCOM_USART_CTRLA_SWRST) {
     c4e:	6823      	ldr	r3, [r4, #0]
		/* The module is busy resetting itself */
		return STATUS_BUSY;
     c50:	2005      	movs	r0, #5
	if (usart_hw->CTRLA.reg & SERCOM_USART_CTRLA_SWRST) {
     c52:	07db      	lsls	r3, r3, #31
     c54:	d506      	bpl.n	c64 <usart_init+0x34>
	_sercom_set_handler(instance_index, _usart_interrupt_handler);
	_sercom_instances[instance_index] = module;
#endif

	return status_code;
}
     c56:	b011      	add	sp, #68	; 0x44
     c58:	bc3c      	pop	{r2, r3, r4, r5}
     c5a:	4690      	mov	r8, r2
     c5c:	4699      	mov	r9, r3
     c5e:	46a2      	mov	sl, r4
     c60:	46ab      	mov	fp, r5
     c62:	bdf0      	pop	{r4, r5, r6, r7, pc}
	if (usart_hw->CTRLA.reg & SERCOM_USART_CTRLA_ENABLE) {
     c64:	6823      	ldr	r3, [r4, #0]
		return STATUS_ERR_DENIED;
     c66:	3017      	adds	r0, #23
	if (usart_hw->CTRLA.reg & SERCOM_USART_CTRLA_ENABLE) {
     c68:	079b      	lsls	r3, r3, #30
     c6a:	d4f4      	bmi.n	c56 <usart_init+0x26>
     c6c:	49a5      	ldr	r1, [pc, #660]	; (f04 <usart_init+0x2d4>)
     c6e:	6a08      	ldr	r0, [r1, #32]
	pm_index     = sercom_index + PM_APBCMASK_SERCOM0_Pos;
     c70:	1c97      	adds	r7, r2, #2
	system_apb_clock_set_mask(SYSTEM_CLOCK_APB_APBC, 1 << pm_index);
     c72:	2301      	movs	r3, #1
     c74:	40bb      	lsls	r3, r7
     c76:	4303      	orrs	r3, r0
     c78:	620b      	str	r3, [r1, #32]
	gclk_chan_conf.source_generator = config->generator_source;
     c7a:	a90f      	add	r1, sp, #60	; 0x3c
     c7c:	272d      	movs	r7, #45	; 0x2d
     c7e:	5df3      	ldrb	r3, [r6, r7]
     c80:	700b      	strb	r3, [r1, #0]
	gclk_index   = sercom_index + SERCOM0_GCLK_ID_CORE;
     c82:	3214      	adds	r2, #20
	system_gclk_chan_set_config(gclk_index, &gclk_chan_conf);
     c84:	b2d3      	uxtb	r3, r2
     c86:	9302      	str	r3, [sp, #8]
     c88:	0018      	movs	r0, r3
     c8a:	4b9f      	ldr	r3, [pc, #636]	; (f08 <usart_init+0x2d8>)
     c8c:	4798      	blx	r3
	system_gclk_chan_enable(gclk_index);
     c8e:	9802      	ldr	r0, [sp, #8]
     c90:	4b9e      	ldr	r3, [pc, #632]	; (f0c <usart_init+0x2dc>)
     c92:	4798      	blx	r3
	sercom_set_gclk_generator(config->generator_source, false);
     c94:	5df0      	ldrb	r0, [r6, r7]
     c96:	2100      	movs	r1, #0
     c98:	4b9d      	ldr	r3, [pc, #628]	; (f10 <usart_init+0x2e0>)
     c9a:	4798      	blx	r3
	module->character_size = config->character_size;
     c9c:	7af3      	ldrb	r3, [r6, #11]
     c9e:	716b      	strb	r3, [r5, #5]
	module->receiver_enabled = config->receiver_enable;
     ca0:	2324      	movs	r3, #36	; 0x24
     ca2:	5cf3      	ldrb	r3, [r6, r3]
     ca4:	71ab      	strb	r3, [r5, #6]
	module->transmitter_enabled = config->transmitter_enable;
     ca6:	2325      	movs	r3, #37	; 0x25
     ca8:	5cf3      	ldrb	r3, [r6, r3]
     caa:	71eb      	strb	r3, [r5, #7]
	module->lin_slave_enabled = config->lin_slave_enable;
     cac:	7ef3      	ldrb	r3, [r6, #27]
     cae:	722b      	strb	r3, [r5, #8]
	module->start_frame_detection_enabled = config->start_frame_detection_enable;
     cb0:	7f33      	ldrb	r3, [r6, #28]
     cb2:	726b      	strb	r3, [r5, #9]
	SercomUsart *const usart_hw = &(module->hw->USART);
     cb4:	682b      	ldr	r3, [r5, #0]
     cb6:	4698      	mov	r8, r3
	uint32_t sercom_index = _sercom_get_sercom_inst_index(module->hw);
     cb8:	0018      	movs	r0, r3
     cba:	4b91      	ldr	r3, [pc, #580]	; (f00 <usart_init+0x2d0>)
     cbc:	4798      	blx	r3
	uint32_t gclk_index   = sercom_index + SERCOM0_GCLK_ID_CORE;
     cbe:	3014      	adds	r0, #20
	uint16_t baud  = 0;
     cc0:	2200      	movs	r2, #0
     cc2:	230e      	movs	r3, #14
     cc4:	a906      	add	r1, sp, #24
     cc6:	468c      	mov	ip, r1
     cc8:	4463      	add	r3, ip
     cca:	801a      	strh	r2, [r3, #0]
	switch (config->sample_rate) {
     ccc:	8a32      	ldrh	r2, [r6, #16]
     cce:	9202      	str	r2, [sp, #8]
     cd0:	2380      	movs	r3, #128	; 0x80
     cd2:	01db      	lsls	r3, r3, #7
     cd4:	429a      	cmp	r2, r3
     cd6:	d100      	bne.n	cda <usart_init+0xaa>
     cd8:	e09f      	b.n	e1a <usart_init+0x1ea>
     cda:	d90f      	bls.n	cfc <usart_init+0xcc>
     cdc:	23c0      	movs	r3, #192	; 0xc0
     cde:	01db      	lsls	r3, r3, #7
     ce0:	9a02      	ldr	r2, [sp, #8]
     ce2:	429a      	cmp	r2, r3
     ce4:	d100      	bne.n	ce8 <usart_init+0xb8>
     ce6:	e093      	b.n	e10 <usart_init+0x1e0>
     ce8:	2380      	movs	r3, #128	; 0x80
     cea:	021b      	lsls	r3, r3, #8
     cec:	429a      	cmp	r2, r3
     cee:	d000      	beq.n	cf2 <usart_init+0xc2>
     cf0:	e101      	b.n	ef6 <usart_init+0x2c6>
			sample_num = SERCOM_ASYNC_SAMPLE_NUM_3;
     cf2:	2303      	movs	r3, #3
     cf4:	9306      	str	r3, [sp, #24]
			mode = SERCOM_ASYNC_OPERATION_MODE_ARITHMETIC;
     cf6:	2300      	movs	r3, #0
     cf8:	9307      	str	r3, [sp, #28]
     cfa:	e008      	b.n	d0e <usart_init+0xde>
	switch (config->sample_rate) {
     cfc:	2380      	movs	r3, #128	; 0x80
     cfe:	019b      	lsls	r3, r3, #6
     d00:	429a      	cmp	r2, r3
     d02:	d000      	beq.n	d06 <usart_init+0xd6>
     d04:	e0f7      	b.n	ef6 <usart_init+0x2c6>
			sample_num = SERCOM_ASYNC_SAMPLE_NUM_16;
     d06:	2310      	movs	r3, #16
     d08:	9306      	str	r3, [sp, #24]
			mode = SERCOM_ASYNC_OPERATION_MODE_FRACTIONAL;
     d0a:	3b0f      	subs	r3, #15
     d0c:	9307      	str	r3, [sp, #28]
	ctrla = (uint32_t)config->data_order |
     d0e:	6833      	ldr	r3, [r6, #0]
     d10:	469b      	mov	fp, r3
		(uint32_t)config->mux_setting |
     d12:	68f3      	ldr	r3, [r6, #12]
     d14:	9304      	str	r3, [sp, #16]
		config->sample_adjustment |
     d16:	6973      	ldr	r3, [r6, #20]
     d18:	469a      	mov	sl, r3
		(config->immediate_buffer_overflow_notification << SERCOM_USART_CTRLA_IBON_Pos) |
     d1a:	7e33      	ldrb	r3, [r6, #24]
     d1c:	9305      	str	r3, [sp, #20]
		(config->clock_polarity_inverted << SERCOM_USART_CTRLA_CPOL_Pos);
     d1e:	2326      	movs	r3, #38	; 0x26
     d20:	5cf3      	ldrb	r3, [r6, r3]
     d22:	9303      	str	r3, [sp, #12]
	transfer_mode = (uint32_t)config->transfer_mode;
     d24:	6873      	ldr	r3, [r6, #4]
     d26:	4699      	mov	r9, r3
	switch (transfer_mode)
     d28:	2b00      	cmp	r3, #0
     d2a:	d100      	bne.n	d2e <usart_init+0xfe>
     d2c:	e0a1      	b.n	e72 <usart_init+0x242>
     d2e:	2380      	movs	r3, #128	; 0x80
     d30:	055b      	lsls	r3, r3, #21
     d32:	4599      	cmp	r9, r3
     d34:	d100      	bne.n	d38 <usart_init+0x108>
     d36:	e085      	b.n	e44 <usart_init+0x214>
	if(config->encoding_format_enable) {
     d38:	7e73      	ldrb	r3, [r6, #25]
     d3a:	2b00      	cmp	r3, #0
     d3c:	d002      	beq.n	d44 <usart_init+0x114>
		usart_hw->RXPL.reg = config->receive_pulse_length;
     d3e:	7eb3      	ldrb	r3, [r6, #26]
     d40:	4642      	mov	r2, r8
     d42:	7393      	strb	r3, [r2, #14]
	SercomUsart *const usart_hw = &(module->hw->USART);
     d44:	682a      	ldr	r2, [r5, #0]
     d46:	9f02      	ldr	r7, [sp, #8]
	return (usart_hw->SYNCBUSY.reg);
     d48:	69d3      	ldr	r3, [r2, #28]
	while (usart_is_syncing(module)) {
     d4a:	2b00      	cmp	r3, #0
     d4c:	d1fc      	bne.n	d48 <usart_init+0x118>
	usart_hw->BAUD.reg = baud;
     d4e:	330e      	adds	r3, #14
     d50:	aa06      	add	r2, sp, #24
     d52:	4694      	mov	ip, r2
     d54:	4463      	add	r3, ip
     d56:	881b      	ldrh	r3, [r3, #0]
     d58:	4642      	mov	r2, r8
     d5a:	8193      	strh	r3, [r2, #12]
	ctrla |= transfer_mode;
     d5c:	465b      	mov	r3, fp
     d5e:	9a04      	ldr	r2, [sp, #16]
     d60:	4313      	orrs	r3, r2
     d62:	4652      	mov	r2, sl
     d64:	4313      	orrs	r3, r2
     d66:	464a      	mov	r2, r9
     d68:	4313      	orrs	r3, r2
     d6a:	431f      	orrs	r7, r3
		(config->immediate_buffer_overflow_notification << SERCOM_USART_CTRLA_IBON_Pos) |
     d6c:	9b05      	ldr	r3, [sp, #20]
     d6e:	021b      	lsls	r3, r3, #8
	ctrla |= transfer_mode;
     d70:	431f      	orrs	r7, r3
		(config->clock_polarity_inverted << SERCOM_USART_CTRLA_CPOL_Pos);
     d72:	9b03      	ldr	r3, [sp, #12]
     d74:	075b      	lsls	r3, r3, #29
	ctrla |= transfer_mode;
     d76:	431f      	orrs	r7, r3
	if (config->use_external_clock == false) {
     d78:	2327      	movs	r3, #39	; 0x27
     d7a:	5cf3      	ldrb	r3, [r6, r3]
     d7c:	2b00      	cmp	r3, #0
     d7e:	d101      	bne.n	d84 <usart_init+0x154>
		ctrla |= SERCOM_USART_CTRLA_MODE(0x1);
     d80:	3304      	adds	r3, #4
     d82:	431f      	orrs	r7, r3
			(config->encoding_format_enable << SERCOM_USART_CTRLB_ENC_Pos) |
     d84:	7e73      	ldrb	r3, [r6, #25]
     d86:	029b      	lsls	r3, r3, #10
			(config->start_frame_detection_enable << SERCOM_USART_CTRLB_SFDE_Pos) |
     d88:	7f32      	ldrb	r2, [r6, #28]
     d8a:	0252      	lsls	r2, r2, #9
			(config->encoding_format_enable << SERCOM_USART_CTRLB_ENC_Pos) |
     d8c:	4313      	orrs	r3, r2
			(config->collision_detection_enable << SERCOM_USART_CTRLB_COLDEN_Pos) |
     d8e:	7f72      	ldrb	r2, [r6, #29]
     d90:	0212      	lsls	r2, r2, #8
			(config->start_frame_detection_enable << SERCOM_USART_CTRLB_SFDE_Pos) |
     d92:	4313      	orrs	r3, r2
			(config->receiver_enable << SERCOM_USART_CTRLB_RXEN_Pos) |
     d94:	2224      	movs	r2, #36	; 0x24
     d96:	5cb2      	ldrb	r2, [r6, r2]
     d98:	0452      	lsls	r2, r2, #17
			(config->collision_detection_enable << SERCOM_USART_CTRLB_COLDEN_Pos) |
     d9a:	4313      	orrs	r3, r2
			(config->transmitter_enable << SERCOM_USART_CTRLB_TXEN_Pos);
     d9c:	2225      	movs	r2, #37	; 0x25
     d9e:	5cb2      	ldrb	r2, [r6, r2]
     da0:	0412      	lsls	r2, r2, #16
			(config->receiver_enable << SERCOM_USART_CTRLB_RXEN_Pos) |
     da2:	4313      	orrs	r3, r2
	ctrlb |= (uint32_t)config->character_size;
     da4:	7ab1      	ldrb	r1, [r6, #10]
     da6:	7af2      	ldrb	r2, [r6, #11]
     da8:	4311      	orrs	r1, r2
     daa:	4319      	orrs	r1, r3
	if (config->parity != USART_PARITY_NONE) {
     dac:	8933      	ldrh	r3, [r6, #8]
     dae:	2bff      	cmp	r3, #255	; 0xff
     db0:	d100      	bne.n	db4 <usart_init+0x184>
     db2:	e082      	b.n	eba <usart_init+0x28a>
		ctrla |= SERCOM_USART_CTRLA_FORM(1);
     db4:	2280      	movs	r2, #128	; 0x80
     db6:	0452      	lsls	r2, r2, #17
     db8:	4317      	orrs	r7, r2
		ctrlb |= config->parity;
     dba:	4319      	orrs	r1, r3
	if (config->run_in_standby || system_is_debugger_present()) {
     dbc:	232c      	movs	r3, #44	; 0x2c
     dbe:	5cf3      	ldrb	r3, [r6, r3]
     dc0:	2b00      	cmp	r3, #0
     dc2:	d103      	bne.n	dcc <usart_init+0x19c>
     dc4:	4b53      	ldr	r3, [pc, #332]	; (f14 <usart_init+0x2e4>)
     dc6:	789b      	ldrb	r3, [r3, #2]
     dc8:	079b      	lsls	r3, r3, #30
     dca:	d501      	bpl.n	dd0 <usart_init+0x1a0>
		ctrla |= SERCOM_USART_CTRLA_RUNSTDBY;
     dcc:	2380      	movs	r3, #128	; 0x80
     dce:	431f      	orrs	r7, r3
	SercomUsart *const usart_hw = &(module->hw->USART);
     dd0:	682a      	ldr	r2, [r5, #0]
	return (usart_hw->SYNCBUSY.reg);
     dd2:	69d3      	ldr	r3, [r2, #28]
	while (usart_is_syncing(module)) {
     dd4:	2b00      	cmp	r3, #0
     dd6:	d1fc      	bne.n	dd2 <usart_init+0x1a2>
	usart_hw->CTRLB.reg = ctrlb;
     dd8:	4643      	mov	r3, r8
     dda:	6059      	str	r1, [r3, #4]
	SercomUsart *const usart_hw = &(module->hw->USART);
     ddc:	682a      	ldr	r2, [r5, #0]
	return (usart_hw->SYNCBUSY.reg);
     dde:	69d3      	ldr	r3, [r2, #28]
	while (usart_is_syncing(module)) {
     de0:	2b00      	cmp	r3, #0
     de2:	d1fc      	bne.n	dde <usart_init+0x1ae>
	usart_hw->CTRLA.reg = ctrla;
     de4:	4643      	mov	r3, r8
     de6:	601f      	str	r7, [r3, #0]
	config->mux_position = SYSTEM_PINMUX_GPIO;
     de8:	ab0e      	add	r3, sp, #56	; 0x38
     dea:	2280      	movs	r2, #128	; 0x80
     dec:	701a      	strb	r2, [r3, #0]
	config->direction    = SYSTEM_PINMUX_PIN_DIR_INPUT;
     dee:	2200      	movs	r2, #0
     df0:	705a      	strb	r2, [r3, #1]
	config->powersave    = false;
     df2:	70da      	strb	r2, [r3, #3]
	pin_conf.input_pull = SYSTEM_PINMUX_PIN_PULL_NONE;
     df4:	709a      	strb	r2, [r3, #2]
	uint32_t pad_pinmuxes[] = {
     df6:	6b33      	ldr	r3, [r6, #48]	; 0x30
     df8:	930a      	str	r3, [sp, #40]	; 0x28
     dfa:	6b73      	ldr	r3, [r6, #52]	; 0x34
     dfc:	930b      	str	r3, [sp, #44]	; 0x2c
     dfe:	6bb3      	ldr	r3, [r6, #56]	; 0x38
     e00:	930c      	str	r3, [sp, #48]	; 0x30
     e02:	6bf3      	ldr	r3, [r6, #60]	; 0x3c
     e04:	9302      	str	r3, [sp, #8]
     e06:	930d      	str	r3, [sp, #52]	; 0x34
     e08:	2700      	movs	r7, #0
		uint32_t current_pinmux = pad_pinmuxes[pad];
     e0a:	ad0a      	add	r5, sp, #40	; 0x28
			system_pinmux_pin_set_config(current_pinmux >> 16, &pin_conf);
     e0c:	4e42      	ldr	r6, [pc, #264]	; (f18 <usart_init+0x2e8>)
     e0e:	e063      	b.n	ed8 <usart_init+0x2a8>
			sample_num = SERCOM_ASYNC_SAMPLE_NUM_8;
     e10:	2308      	movs	r3, #8
     e12:	9306      	str	r3, [sp, #24]
			mode = SERCOM_ASYNC_OPERATION_MODE_FRACTIONAL;
     e14:	3b07      	subs	r3, #7
     e16:	9307      	str	r3, [sp, #28]
     e18:	e779      	b.n	d0e <usart_init+0xde>
	ctrla = (uint32_t)config->data_order |
     e1a:	6833      	ldr	r3, [r6, #0]
     e1c:	469b      	mov	fp, r3
		(uint32_t)config->mux_setting |
     e1e:	68f3      	ldr	r3, [r6, #12]
     e20:	9304      	str	r3, [sp, #16]
		config->sample_adjustment |
     e22:	6973      	ldr	r3, [r6, #20]
     e24:	469a      	mov	sl, r3
		(config->immediate_buffer_overflow_notification << SERCOM_USART_CTRLA_IBON_Pos) |
     e26:	7e33      	ldrb	r3, [r6, #24]
     e28:	9305      	str	r3, [sp, #20]
		(config->clock_polarity_inverted << SERCOM_USART_CTRLA_CPOL_Pos);
     e2a:	2326      	movs	r3, #38	; 0x26
     e2c:	5cf3      	ldrb	r3, [r6, r3]
     e2e:	9303      	str	r3, [sp, #12]
	transfer_mode = (uint32_t)config->transfer_mode;
     e30:	6873      	ldr	r3, [r6, #4]
     e32:	4699      	mov	r9, r3
	switch (transfer_mode)
     e34:	2b00      	cmp	r3, #0
     e36:	d018      	beq.n	e6a <usart_init+0x23a>
     e38:	2380      	movs	r3, #128	; 0x80
     e3a:	055b      	lsls	r3, r3, #21
     e3c:	4599      	cmp	r9, r3
     e3e:	d001      	beq.n	e44 <usart_init+0x214>
	enum status_code status_code = STATUS_OK;
     e40:	2000      	movs	r0, #0
     e42:	e025      	b.n	e90 <usart_init+0x260>
			if (!config->use_external_clock) {
     e44:	2327      	movs	r3, #39	; 0x27
     e46:	5cf3      	ldrb	r3, [r6, r3]
     e48:	2b00      	cmp	r3, #0
     e4a:	d000      	beq.n	e4e <usart_init+0x21e>
     e4c:	e774      	b.n	d38 <usart_init+0x108>
				status_code = _sercom_get_sync_baud_val(config->baudrate,
     e4e:	6a33      	ldr	r3, [r6, #32]
     e50:	001f      	movs	r7, r3
     e52:	b2c0      	uxtb	r0, r0
     e54:	4b31      	ldr	r3, [pc, #196]	; (f1c <usart_init+0x2ec>)
     e56:	4798      	blx	r3
     e58:	0001      	movs	r1, r0
     e5a:	220e      	movs	r2, #14
     e5c:	ab06      	add	r3, sp, #24
     e5e:	469c      	mov	ip, r3
     e60:	4462      	add	r2, ip
     e62:	0038      	movs	r0, r7
     e64:	4b2e      	ldr	r3, [pc, #184]	; (f20 <usart_init+0x2f0>)
     e66:	4798      	blx	r3
     e68:	e012      	b.n	e90 <usart_init+0x260>
			sample_num = SERCOM_ASYNC_SAMPLE_NUM_8;
     e6a:	2308      	movs	r3, #8
     e6c:	9306      	str	r3, [sp, #24]
			mode = SERCOM_ASYNC_OPERATION_MODE_ARITHMETIC;
     e6e:	2300      	movs	r3, #0
     e70:	9307      	str	r3, [sp, #28]
			if (config->use_external_clock) {
     e72:	2327      	movs	r3, #39	; 0x27
     e74:	5cf3      	ldrb	r3, [r6, r3]
     e76:	2b00      	cmp	r3, #0
     e78:	d00e      	beq.n	e98 <usart_init+0x268>
				status_code =
     e7a:	9b06      	ldr	r3, [sp, #24]
     e7c:	9300      	str	r3, [sp, #0]
     e7e:	9b07      	ldr	r3, [sp, #28]
     e80:	220e      	movs	r2, #14
     e82:	a906      	add	r1, sp, #24
     e84:	468c      	mov	ip, r1
     e86:	4462      	add	r2, ip
     e88:	6ab1      	ldr	r1, [r6, #40]	; 0x28
     e8a:	6a30      	ldr	r0, [r6, #32]
     e8c:	4f25      	ldr	r7, [pc, #148]	; (f24 <usart_init+0x2f4>)
     e8e:	47b8      	blx	r7
	if (status_code != STATUS_OK) {
     e90:	2800      	cmp	r0, #0
     e92:	d000      	beq.n	e96 <usart_init+0x266>
     e94:	e6df      	b.n	c56 <usart_init+0x26>
     e96:	e74f      	b.n	d38 <usart_init+0x108>
						_sercom_get_async_baud_val(config->baudrate,
     e98:	6a33      	ldr	r3, [r6, #32]
     e9a:	001f      	movs	r7, r3
     e9c:	b2c0      	uxtb	r0, r0
     e9e:	4b1f      	ldr	r3, [pc, #124]	; (f1c <usart_init+0x2ec>)
     ea0:	4798      	blx	r3
     ea2:	0001      	movs	r1, r0
				status_code =
     ea4:	9b06      	ldr	r3, [sp, #24]
     ea6:	9300      	str	r3, [sp, #0]
     ea8:	9b07      	ldr	r3, [sp, #28]
     eaa:	220e      	movs	r2, #14
     eac:	a806      	add	r0, sp, #24
     eae:	4684      	mov	ip, r0
     eb0:	4462      	add	r2, ip
     eb2:	0038      	movs	r0, r7
     eb4:	4f1b      	ldr	r7, [pc, #108]	; (f24 <usart_init+0x2f4>)
     eb6:	47b8      	blx	r7
     eb8:	e7ea      	b.n	e90 <usart_init+0x260>
		if(config->lin_slave_enable) {
     eba:	7ef3      	ldrb	r3, [r6, #27]
     ebc:	2b00      	cmp	r3, #0
     ebe:	d100      	bne.n	ec2 <usart_init+0x292>
     ec0:	e77c      	b.n	dbc <usart_init+0x18c>
			ctrla |= SERCOM_USART_CTRLA_FORM(0x4);
     ec2:	2380      	movs	r3, #128	; 0x80
     ec4:	04db      	lsls	r3, r3, #19
     ec6:	431f      	orrs	r7, r3
     ec8:	e778      	b.n	dbc <usart_init+0x18c>
			current_pinmux = _sercom_get_default_pad(hw, pad);
     eca:	0020      	movs	r0, r4
     ecc:	4b16      	ldr	r3, [pc, #88]	; (f28 <usart_init+0x2f8>)
     ece:	4798      	blx	r3
     ed0:	e007      	b.n	ee2 <usart_init+0x2b2>
     ed2:	3701      	adds	r7, #1
	for (uint8_t pad = 0; pad < 4; pad++) {
     ed4:	2f04      	cmp	r7, #4
     ed6:	d00c      	beq.n	ef2 <usart_init+0x2c2>
     ed8:	b2f9      	uxtb	r1, r7
		uint32_t current_pinmux = pad_pinmuxes[pad];
     eda:	00bb      	lsls	r3, r7, #2
     edc:	5958      	ldr	r0, [r3, r5]
		if (current_pinmux == PINMUX_DEFAULT) {
     ede:	2800      	cmp	r0, #0
     ee0:	d0f3      	beq.n	eca <usart_init+0x29a>
		if (current_pinmux != PINMUX_UNUSED) {
     ee2:	1c43      	adds	r3, r0, #1
     ee4:	d0f5      	beq.n	ed2 <usart_init+0x2a2>
			pin_conf.mux_position = current_pinmux & 0xFFFF;
     ee6:	a90e      	add	r1, sp, #56	; 0x38
     ee8:	7008      	strb	r0, [r1, #0]
			system_pinmux_pin_set_config(current_pinmux >> 16, &pin_conf);
     eea:	0c00      	lsrs	r0, r0, #16
     eec:	b2c0      	uxtb	r0, r0
     eee:	47b0      	blx	r6
     ef0:	e7ef      	b.n	ed2 <usart_init+0x2a2>
	return status_code;
     ef2:	2000      	movs	r0, #0
     ef4:	e6af      	b.n	c56 <usart_init+0x26>
	enum sercom_asynchronous_sample_num sample_num = SERCOM_ASYNC_SAMPLE_NUM_16;
     ef6:	2310      	movs	r3, #16
     ef8:	9306      	str	r3, [sp, #24]
	enum sercom_asynchronous_operation_mode mode = SERCOM_ASYNC_OPERATION_MODE_ARITHMETIC;
     efa:	2300      	movs	r3, #0
     efc:	9307      	str	r3, [sp, #28]
     efe:	e706      	b.n	d0e <usart_init+0xde>
     f00:	000012e5 	.word	0x000012e5
     f04:	40000400 	.word	0x40000400
     f08:	000015cd 	.word	0x000015cd
     f0c:	00001541 	.word	0x00001541
     f10:	00001135 	.word	0x00001135
     f14:	41002000 	.word	0x41002000
     f18:	000016c5 	.word	0x000016c5
     f1c:	000015e9 	.word	0x000015e9
     f20:	00001079 	.word	0x00001079
     f24:	000010a1 	.word	0x000010a1
     f28:	00001181 	.word	0x00001181

00000f2c <usart_write_wait>:

	/* Get a pointer to the hardware module instance */
	SercomUsart *const usart_hw = &(module->hw->USART);

	/* Check that the transmitter is enabled */
	if (!(module->transmitter_enabled)) {
     f2c:	79c3      	ldrb	r3, [r0, #7]
		return STATUS_ERR_DENIED;
     f2e:	221c      	movs	r2, #28
	if (!(module->transmitter_enabled)) {
     f30:	2b00      	cmp	r3, #0
     f32:	d101      	bne.n	f38 <usart_write_wait+0xc>
	while (!(usart_hw->INTFLAG.reg & SERCOM_USART_INTFLAG_TXC)) {
		/* Wait until data is sent */
	}

	return STATUS_OK;
}
     f34:	0010      	movs	r0, r2
     f36:	4770      	bx	lr
	SercomUsart *const usart_hw = &(module->hw->USART);
     f38:	6803      	ldr	r3, [r0, #0]
	if (!(usart_hw->INTFLAG.reg & SERCOM_USART_INTFLAG_DRE)) {
     f3a:	7e18      	ldrb	r0, [r3, #24]
		return STATUS_BUSY;
     f3c:	3a17      	subs	r2, #23
	if (!(usart_hw->INTFLAG.reg & SERCOM_USART_INTFLAG_DRE)) {
     f3e:	07c0      	lsls	r0, r0, #31
     f40:	d5f8      	bpl.n	f34 <usart_write_wait+0x8>
	return (usart_hw->SYNCBUSY.reg);
     f42:	69da      	ldr	r2, [r3, #28]
	while (usart_is_syncing(module)) {
     f44:	2a00      	cmp	r2, #0
     f46:	d1fc      	bne.n	f42 <usart_write_wait+0x16>
	usart_hw->DATA.reg = tx_data;
     f48:	8519      	strh	r1, [r3, #40]	; 0x28
	while (!(usart_hw->INTFLAG.reg & SERCOM_USART_INTFLAG_TXC)) {
     f4a:	2102      	movs	r1, #2
     f4c:	7e1a      	ldrb	r2, [r3, #24]
     f4e:	420a      	tst	r2, r1
     f50:	d0fc      	beq.n	f4c <usart_write_wait+0x20>
	return STATUS_OK;
     f52:	2200      	movs	r2, #0
     f54:	e7ee      	b.n	f34 <usart_write_wait+0x8>

00000f56 <usart_read_wait>:

	/* Get a pointer to the hardware module instance */
	SercomUsart *const usart_hw = &(module->hw->USART);

	/* Check that the receiver is enabled */
	if (!(module->receiver_enabled)) {
     f56:	7982      	ldrb	r2, [r0, #6]
		return STATUS_ERR_DENIED;
     f58:	231c      	movs	r3, #28
	if (!(module->receiver_enabled)) {
     f5a:	2a00      	cmp	r2, #0
     f5c:	d101      	bne.n	f62 <usart_read_wait+0xc>

	/* Read data from USART module */
	*rx_data = usart_hw->DATA.reg;

	return STATUS_OK;
}
     f5e:	0018      	movs	r0, r3
     f60:	4770      	bx	lr
	SercomUsart *const usart_hw = &(module->hw->USART);
     f62:	6802      	ldr	r2, [r0, #0]
	if (!(usart_hw->INTFLAG.reg & SERCOM_USART_INTFLAG_RXC)) {
     f64:	7e10      	ldrb	r0, [r2, #24]
		return STATUS_BUSY;
     f66:	3b17      	subs	r3, #23
	if (!(usart_hw->INTFLAG.reg & SERCOM_USART_INTFLAG_RXC)) {
     f68:	0740      	lsls	r0, r0, #29
     f6a:	d5f8      	bpl.n	f5e <usart_read_wait+0x8>
	return (usart_hw->SYNCBUSY.reg);
     f6c:	69d3      	ldr	r3, [r2, #28]
	while (usart_is_syncing(module)) {
     f6e:	2b00      	cmp	r3, #0
     f70:	d1fc      	bne.n	f6c <usart_read_wait+0x16>
	error_code = (uint8_t)(usart_hw->STATUS.reg & SERCOM_USART_STATUS_MASK);
     f72:	8b53      	ldrh	r3, [r2, #26]
     f74:	b2db      	uxtb	r3, r3
	if (error_code) {
     f76:	0698      	lsls	r0, r3, #26
     f78:	d01d      	beq.n	fb6 <usart_read_wait+0x60>
		if (error_code & SERCOM_USART_STATUS_FERR) {
     f7a:	0798      	lsls	r0, r3, #30
     f7c:	d503      	bpl.n	f86 <usart_read_wait+0x30>
			usart_hw->STATUS.reg = SERCOM_USART_STATUS_FERR;
     f7e:	2302      	movs	r3, #2
     f80:	8353      	strh	r3, [r2, #26]
			return STATUS_ERR_BAD_FORMAT;
     f82:	3318      	adds	r3, #24
     f84:	e7eb      	b.n	f5e <usart_read_wait+0x8>
		} else if (error_code & SERCOM_USART_STATUS_BUFOVF) {
     f86:	0758      	lsls	r0, r3, #29
     f88:	d503      	bpl.n	f92 <usart_read_wait+0x3c>
			usart_hw->STATUS.reg = SERCOM_USART_STATUS_BUFOVF;
     f8a:	2304      	movs	r3, #4
     f8c:	8353      	strh	r3, [r2, #26]
			return STATUS_ERR_OVERFLOW;
     f8e:	331a      	adds	r3, #26
     f90:	e7e5      	b.n	f5e <usart_read_wait+0x8>
		} else if (error_code & SERCOM_USART_STATUS_PERR) {
     f92:	07d8      	lsls	r0, r3, #31
     f94:	d503      	bpl.n	f9e <usart_read_wait+0x48>
			usart_hw->STATUS.reg = SERCOM_USART_STATUS_PERR;
     f96:	2301      	movs	r3, #1
     f98:	8353      	strh	r3, [r2, #26]
			return STATUS_ERR_BAD_DATA;
     f9a:	3312      	adds	r3, #18
     f9c:	e7df      	b.n	f5e <usart_read_wait+0x8>
		else if (error_code & SERCOM_USART_STATUS_ISF) {
     f9e:	06d8      	lsls	r0, r3, #27
     fa0:	d503      	bpl.n	faa <usart_read_wait+0x54>
			usart_hw->STATUS.reg = SERCOM_USART_STATUS_ISF;
     fa2:	2310      	movs	r3, #16
     fa4:	8353      	strh	r3, [r2, #26]
			return STATUS_ERR_PROTOCOL;
     fa6:	3332      	adds	r3, #50	; 0x32
     fa8:	e7d9      	b.n	f5e <usart_read_wait+0x8>
		else if (error_code & SERCOM_USART_STATUS_COLL) {
     faa:	069b      	lsls	r3, r3, #26
     fac:	d503      	bpl.n	fb6 <usart_read_wait+0x60>
			usart_hw->STATUS.reg = SERCOM_USART_STATUS_COLL;
     fae:	2320      	movs	r3, #32
     fb0:	8353      	strh	r3, [r2, #26]
			return STATUS_ERR_PACKET_COLLISION;
     fb2:	3321      	adds	r3, #33	; 0x21
     fb4:	e7d3      	b.n	f5e <usart_read_wait+0x8>
	*rx_data = usart_hw->DATA.reg;
     fb6:	8d13      	ldrh	r3, [r2, #40]	; 0x28
     fb8:	800b      	strh	r3, [r1, #0]
	return STATUS_OK;
     fba:	2300      	movs	r3, #0
     fbc:	e7cf      	b.n	f5e <usart_read_wait+0x8>

00000fbe <long_division>:
/**
 * \internal Calculate 64 bit division, ref can be found in
 * http://en.wikipedia.org/wiki/Division_algorithm#Long_division
 */
static uint64_t long_division(uint64_t n, uint64_t d)
{
     fbe:	b5f0      	push	{r4, r5, r6, r7, lr}
     fc0:	46de      	mov	lr, fp
     fc2:	4657      	mov	r7, sl
     fc4:	464e      	mov	r6, r9
     fc6:	4645      	mov	r5, r8
     fc8:	b5e0      	push	{r5, r6, r7, lr}
     fca:	b087      	sub	sp, #28
     fcc:	4680      	mov	r8, r0
     fce:	9104      	str	r1, [sp, #16]
     fd0:	0016      	movs	r6, r2
     fd2:	001f      	movs	r7, r3
	int32_t i;
	uint64_t q = 0, r = 0, bit_shift;
     fd4:	2200      	movs	r2, #0
     fd6:	2300      	movs	r3, #0
     fd8:	2100      	movs	r1, #0
     fda:	468b      	mov	fp, r1
	for (i = 63; i >= 0; i--) {
     fdc:	243f      	movs	r4, #63	; 0x3f
		bit_shift = (uint64_t)1 << i;
     fde:	2001      	movs	r0, #1
     fe0:	0021      	movs	r1, r4
     fe2:	9600      	str	r6, [sp, #0]
     fe4:	9701      	str	r7, [sp, #4]
     fe6:	465c      	mov	r4, fp
     fe8:	9403      	str	r4, [sp, #12]
     fea:	4644      	mov	r4, r8
     fec:	9405      	str	r4, [sp, #20]
     fee:	e013      	b.n	1018 <long_division+0x5a>
     ff0:	2420      	movs	r4, #32
     ff2:	1a64      	subs	r4, r4, r1
     ff4:	0005      	movs	r5, r0
     ff6:	40e5      	lsrs	r5, r4
     ff8:	46a8      	mov	r8, r5
     ffa:	e014      	b.n	1026 <long_division+0x68>
		if (n & bit_shift) {
			r |= 0x01;
		}

		if (r >= d) {
			r = r - d;
     ffc:	9c00      	ldr	r4, [sp, #0]
     ffe:	9d01      	ldr	r5, [sp, #4]
    1000:	1b12      	subs	r2, r2, r4
    1002:	41ab      	sbcs	r3, r5
			q |= bit_shift;
    1004:	465c      	mov	r4, fp
    1006:	464d      	mov	r5, r9
    1008:	432c      	orrs	r4, r5
    100a:	46a3      	mov	fp, r4
    100c:	9c03      	ldr	r4, [sp, #12]
    100e:	4645      	mov	r5, r8
    1010:	432c      	orrs	r4, r5
    1012:	9403      	str	r4, [sp, #12]
	for (i = 63; i >= 0; i--) {
    1014:	3901      	subs	r1, #1
    1016:	d325      	bcc.n	1064 <long_division+0xa6>
		bit_shift = (uint64_t)1 << i;
    1018:	2420      	movs	r4, #32
    101a:	4264      	negs	r4, r4
    101c:	190c      	adds	r4, r1, r4
    101e:	d4e7      	bmi.n	ff0 <long_division+0x32>
    1020:	0005      	movs	r5, r0
    1022:	40a5      	lsls	r5, r4
    1024:	46a8      	mov	r8, r5
    1026:	0004      	movs	r4, r0
    1028:	408c      	lsls	r4, r1
    102a:	46a1      	mov	r9, r4
		r = r << 1;
    102c:	1892      	adds	r2, r2, r2
    102e:	415b      	adcs	r3, r3
    1030:	0014      	movs	r4, r2
    1032:	001d      	movs	r5, r3
		if (n & bit_shift) {
    1034:	9e05      	ldr	r6, [sp, #20]
    1036:	464f      	mov	r7, r9
    1038:	403e      	ands	r6, r7
    103a:	46b4      	mov	ip, r6
    103c:	9e04      	ldr	r6, [sp, #16]
    103e:	4647      	mov	r7, r8
    1040:	403e      	ands	r6, r7
    1042:	46b2      	mov	sl, r6
    1044:	4666      	mov	r6, ip
    1046:	4657      	mov	r7, sl
    1048:	433e      	orrs	r6, r7
    104a:	d003      	beq.n	1054 <long_division+0x96>
			r |= 0x01;
    104c:	0006      	movs	r6, r0
    104e:	4326      	orrs	r6, r4
    1050:	0032      	movs	r2, r6
    1052:	002b      	movs	r3, r5
		if (r >= d) {
    1054:	9c00      	ldr	r4, [sp, #0]
    1056:	9d01      	ldr	r5, [sp, #4]
    1058:	429d      	cmp	r5, r3
    105a:	d8db      	bhi.n	1014 <long_division+0x56>
    105c:	d1ce      	bne.n	ffc <long_division+0x3e>
    105e:	4294      	cmp	r4, r2
    1060:	d8d8      	bhi.n	1014 <long_division+0x56>
    1062:	e7cb      	b.n	ffc <long_division+0x3e>
    1064:	9b03      	ldr	r3, [sp, #12]
		}
	}

	return q;
}
    1066:	4658      	mov	r0, fp
    1068:	0019      	movs	r1, r3
    106a:	b007      	add	sp, #28
    106c:	bc3c      	pop	{r2, r3, r4, r5}
    106e:	4690      	mov	r8, r2
    1070:	4699      	mov	r9, r3
    1072:	46a2      	mov	sl, r4
    1074:	46ab      	mov	fp, r5
    1076:	bdf0      	pop	{r4, r5, r6, r7, pc}

00001078 <_sercom_get_sync_baud_val>:
 */
enum status_code _sercom_get_sync_baud_val(
		const uint32_t baudrate,
		const uint32_t external_clock,
		uint16_t *const baudvalue)
{
    1078:	b510      	push	{r4, lr}
	uint16_t baud_calculated = 0;
	uint32_t clock_value = external_clock;


	/* Check if baudrate is outside of valid range */
	if (baudrate > (external_clock / 2)) {
    107a:	0849      	lsrs	r1, r1, #1
		/* Return with error code */
		return STATUS_ERR_BAUDRATE_UNAVAILABLE;
    107c:	2340      	movs	r3, #64	; 0x40
    107e:	2400      	movs	r4, #0
	if (baudrate > (external_clock / 2)) {
    1080:	4281      	cmp	r1, r0
    1082:	d202      	bcs.n	108a <_sercom_get_sync_baud_val+0x12>
		return STATUS_ERR_BAUDRATE_UNAVAILABLE;
	} else {
		*baudvalue = baud_calculated;
		return STATUS_OK;
	}
}
    1084:	0018      	movs	r0, r3
    1086:	bd10      	pop	{r4, pc}
		baud_calculated++;
    1088:	001c      	movs	r4, r3
		clock_value = clock_value - baudrate;
    108a:	1a09      	subs	r1, r1, r0
		baud_calculated++;
    108c:	1c63      	adds	r3, r4, #1
    108e:	b29b      	uxth	r3, r3
	while (clock_value >= baudrate) {
    1090:	4288      	cmp	r0, r1
    1092:	d9f9      	bls.n	1088 <_sercom_get_sync_baud_val+0x10>
		return STATUS_ERR_BAUDRATE_UNAVAILABLE;
    1094:	2340      	movs	r3, #64	; 0x40
	if (baud_calculated > 0xFF) {
    1096:	2cff      	cmp	r4, #255	; 0xff
    1098:	d8f4      	bhi.n	1084 <_sercom_get_sync_baud_val+0xc>
		*baudvalue = baud_calculated;
    109a:	8014      	strh	r4, [r2, #0]
		return STATUS_OK;
    109c:	2300      	movs	r3, #0
    109e:	e7f1      	b.n	1084 <_sercom_get_sync_baud_val+0xc>

000010a0 <_sercom_get_async_baud_val>:
		const uint32_t baudrate,
		const uint32_t peripheral_clock,
		uint16_t *const baudval,
		enum sercom_asynchronous_operation_mode mode,
		enum sercom_asynchronous_sample_num sample_num)
{
    10a0:	b5f0      	push	{r4, r5, r6, r7, lr}
    10a2:	b083      	sub	sp, #12
    10a4:	000f      	movs	r7, r1
    10a6:	0016      	movs	r6, r2
    10a8:	aa08      	add	r2, sp, #32
    10aa:	7811      	ldrb	r1, [r2, #0]
	uint8_t baud_fp;
	uint32_t baud_int = 0;
	uint64_t temp1;

	/* Check if the baudrate is outside of valid range */
	if ((baudrate * sample_num) > peripheral_clock) {
    10ac:	0004      	movs	r4, r0
    10ae:	434c      	muls	r4, r1
		/* Return with error code */
		return STATUS_ERR_BAUDRATE_UNAVAILABLE;
    10b0:	2240      	movs	r2, #64	; 0x40
	if ((baudrate * sample_num) > peripheral_clock) {
    10b2:	42bc      	cmp	r4, r7
    10b4:	d902      	bls.n	10bc <_sercom_get_async_baud_val+0x1c>
		baud_calculated = baud_int | (baud_fp << 13);
	}

	*baudval = baud_calculated;
	return STATUS_OK;
}
    10b6:	0010      	movs	r0, r2
    10b8:	b003      	add	sp, #12
    10ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
	if(mode == SERCOM_ASYNC_OPERATION_MODE_ARITHMETIC) {
    10bc:	2b00      	cmp	r3, #0
    10be:	d114      	bne.n	10ea <_sercom_get_async_baud_val+0x4a>
		temp1 = ((sample_num * (uint64_t)baudrate) << SHIFT);
    10c0:	0002      	movs	r2, r0
    10c2:	0008      	movs	r0, r1
    10c4:	2100      	movs	r1, #0
    10c6:	4c19      	ldr	r4, [pc, #100]	; (112c <_sercom_get_async_baud_val+0x8c>)
    10c8:	47a0      	blx	r4
    10ca:	0001      	movs	r1, r0
		ratio = long_division(temp1, peripheral_clock);
    10cc:	003a      	movs	r2, r7
    10ce:	2300      	movs	r3, #0
    10d0:	2000      	movs	r0, #0
    10d2:	4c17      	ldr	r4, [pc, #92]	; (1130 <_sercom_get_async_baud_val+0x90>)
    10d4:	47a0      	blx	r4
		scale = ((uint64_t)1 << SHIFT) - ratio;
    10d6:	2200      	movs	r2, #0
    10d8:	2301      	movs	r3, #1
    10da:	1a12      	subs	r2, r2, r0
    10dc:	418b      	sbcs	r3, r1
		baud_calculated = (65536 * scale) >> SHIFT;
    10de:	0c12      	lsrs	r2, r2, #16
    10e0:	041b      	lsls	r3, r3, #16
    10e2:	431a      	orrs	r2, r3
	*baudval = baud_calculated;
    10e4:	8032      	strh	r2, [r6, #0]
	return STATUS_OK;
    10e6:	2200      	movs	r2, #0
    10e8:	e7e5      	b.n	10b6 <_sercom_get_async_baud_val+0x16>
	uint64_t baud_calculated = 0;
    10ea:	2200      	movs	r2, #0
	} else if(mode == SERCOM_ASYNC_OPERATION_MODE_FRACTIONAL) {
    10ec:	2b01      	cmp	r3, #1
    10ee:	d1f9      	bne.n	10e4 <_sercom_get_async_baud_val+0x44>
		temp1 = ((uint64_t)baudrate * sample_num);
    10f0:	000a      	movs	r2, r1
    10f2:	2300      	movs	r3, #0
    10f4:	2100      	movs	r1, #0
    10f6:	4c0d      	ldr	r4, [pc, #52]	; (112c <_sercom_get_async_baud_val+0x8c>)
    10f8:	47a0      	blx	r4
    10fa:	0002      	movs	r2, r0
    10fc:	000b      	movs	r3, r1
    10fe:	9200      	str	r2, [sp, #0]
    1100:	9301      	str	r3, [sp, #4]
		baud_int = long_division( peripheral_clock, temp1);
    1102:	0038      	movs	r0, r7
    1104:	2100      	movs	r1, #0
    1106:	4c0a      	ldr	r4, [pc, #40]	; (1130 <_sercom_get_async_baud_val+0x90>)
    1108:	47a0      	blx	r4
    110a:	0005      	movs	r5, r0
		if(baud_int > BAUD_INT_MAX) {
    110c:	2380      	movs	r3, #128	; 0x80
    110e:	019b      	lsls	r3, r3, #6
				return STATUS_ERR_BAUDRATE_UNAVAILABLE;
    1110:	2240      	movs	r2, #64	; 0x40
		if(baud_int > BAUD_INT_MAX) {
    1112:	4298      	cmp	r0, r3
    1114:	d8cf      	bhi.n	10b6 <_sercom_get_async_baud_val+0x16>
		temp1 = long_division( 8 * (uint64_t)peripheral_clock, temp1);
    1116:	0f79      	lsrs	r1, r7, #29
    1118:	00f8      	lsls	r0, r7, #3
    111a:	9a00      	ldr	r2, [sp, #0]
    111c:	9b01      	ldr	r3, [sp, #4]
    111e:	47a0      	blx	r4
		baud_fp = temp1 - 8 * baud_int;
    1120:	00ea      	lsls	r2, r5, #3
    1122:	1a82      	subs	r2, r0, r2
		baud_calculated = baud_int | (baud_fp << 13);
    1124:	b2d2      	uxtb	r2, r2
    1126:	0352      	lsls	r2, r2, #13
    1128:	432a      	orrs	r2, r5
    112a:	e7db      	b.n	10e4 <_sercom_get_async_baud_val+0x44>
    112c:	00004591 	.word	0x00004591
    1130:	00000fbf 	.word	0x00000fbf

00001134 <sercom_set_gclk_generator>:
 *                                         forced.
 */
enum status_code sercom_set_gclk_generator(
		const enum gclk_generator generator_source,
		const bool force_change)
{
    1134:	b510      	push	{r4, lr}
    1136:	b082      	sub	sp, #8
    1138:	0004      	movs	r4, r0
	/* Check if valid option */
	if (!_sercom_config.generator_is_set || force_change) {
    113a:	4b0e      	ldr	r3, [pc, #56]	; (1174 <sercom_set_gclk_generator+0x40>)
    113c:	781b      	ldrb	r3, [r3, #0]
    113e:	2b00      	cmp	r3, #0
    1140:	d007      	beq.n	1152 <sercom_set_gclk_generator+0x1e>
    1142:	2900      	cmp	r1, #0
    1144:	d105      	bne.n	1152 <sercom_set_gclk_generator+0x1e>
		/* Save config */
		_sercom_config.generator_source = generator_source;
		_sercom_config.generator_is_set = true;

		return STATUS_OK;
	} else if (generator_source == _sercom_config.generator_source) {
    1146:	4b0b      	ldr	r3, [pc, #44]	; (1174 <sercom_set_gclk_generator+0x40>)
    1148:	785b      	ldrb	r3, [r3, #1]
    114a:	4283      	cmp	r3, r0
    114c:	d010      	beq.n	1170 <sercom_set_gclk_generator+0x3c>
		/* Return status OK if same config */
		return STATUS_OK;
	}

	/* Return invalid config to already initialized GCLK */
	return STATUS_ERR_ALREADY_INITIALIZED;
    114e:	201d      	movs	r0, #29
    1150:	e00c      	b.n	116c <sercom_set_gclk_generator+0x38>
		gclk_chan_conf.source_generator = generator_source;
    1152:	a901      	add	r1, sp, #4
    1154:	700c      	strb	r4, [r1, #0]
		system_gclk_chan_set_config(SERCOM_GCLK_ID, &gclk_chan_conf);
    1156:	2013      	movs	r0, #19
    1158:	4b07      	ldr	r3, [pc, #28]	; (1178 <sercom_set_gclk_generator+0x44>)
    115a:	4798      	blx	r3
		system_gclk_chan_enable(SERCOM_GCLK_ID);
    115c:	2013      	movs	r0, #19
    115e:	4b07      	ldr	r3, [pc, #28]	; (117c <sercom_set_gclk_generator+0x48>)
    1160:	4798      	blx	r3
		_sercom_config.generator_source = generator_source;
    1162:	4b04      	ldr	r3, [pc, #16]	; (1174 <sercom_set_gclk_generator+0x40>)
    1164:	705c      	strb	r4, [r3, #1]
		_sercom_config.generator_is_set = true;
    1166:	2201      	movs	r2, #1
    1168:	701a      	strb	r2, [r3, #0]
		return STATUS_OK;
    116a:	2000      	movs	r0, #0
}
    116c:	b002      	add	sp, #8
    116e:	bd10      	pop	{r4, pc}
		return STATUS_OK;
    1170:	2000      	movs	r0, #0
    1172:	e7fb      	b.n	116c <sercom_set_gclk_generator+0x38>
    1174:	2000026c 	.word	0x2000026c
    1178:	000015cd 	.word	0x000015cd
    117c:	00001541 	.word	0x00001541

00001180 <_sercom_get_default_pad>:
 */
uint32_t _sercom_get_default_pad(
		Sercom *const sercom_module,
		const uint8_t pad)
{
	switch ((uintptr_t)sercom_module) {
    1180:	4b3c      	ldr	r3, [pc, #240]	; (1274 <_sercom_get_default_pad+0xf4>)
    1182:	4298      	cmp	r0, r3
    1184:	d031      	beq.n	11ea <_sercom_get_default_pad+0x6a>
    1186:	d90a      	bls.n	119e <_sercom_get_default_pad+0x1e>
    1188:	4b3b      	ldr	r3, [pc, #236]	; (1278 <_sercom_get_default_pad+0xf8>)
    118a:	4298      	cmp	r0, r3
    118c:	d04d      	beq.n	122a <_sercom_get_default_pad+0xaa>
    118e:	4b3b      	ldr	r3, [pc, #236]	; (127c <_sercom_get_default_pad+0xfc>)
    1190:	4298      	cmp	r0, r3
    1192:	d054      	beq.n	123e <_sercom_get_default_pad+0xbe>
    1194:	4b3a      	ldr	r3, [pc, #232]	; (1280 <_sercom_get_default_pad+0x100>)
    1196:	4298      	cmp	r0, r3
    1198:	d037      	beq.n	120a <_sercom_get_default_pad+0x8a>
		/* Auto-generate a lookup table for the default SERCOM pad defaults */
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
	}

	Assert(false);
	return 0;
    119a:	2000      	movs	r0, #0
}
    119c:	4770      	bx	lr
	switch ((uintptr_t)sercom_module) {
    119e:	4b39      	ldr	r3, [pc, #228]	; (1284 <_sercom_get_default_pad+0x104>)
    11a0:	4298      	cmp	r0, r3
    11a2:	d00c      	beq.n	11be <_sercom_get_default_pad+0x3e>
    11a4:	4b38      	ldr	r3, [pc, #224]	; (1288 <_sercom_get_default_pad+0x108>)
    11a6:	4298      	cmp	r0, r3
    11a8:	d1f7      	bne.n	119a <_sercom_get_default_pad+0x1a>
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
    11aa:	2901      	cmp	r1, #1
    11ac:	d017      	beq.n	11de <_sercom_get_default_pad+0x5e>
    11ae:	2900      	cmp	r1, #0
    11b0:	d057      	beq.n	1262 <_sercom_get_default_pad+0xe2>
    11b2:	2902      	cmp	r1, #2
    11b4:	d015      	beq.n	11e2 <_sercom_get_default_pad+0x62>
    11b6:	2903      	cmp	r1, #3
    11b8:	d015      	beq.n	11e6 <_sercom_get_default_pad+0x66>
	return 0;
    11ba:	2000      	movs	r0, #0
    11bc:	e7ee      	b.n	119c <_sercom_get_default_pad+0x1c>
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
    11be:	2901      	cmp	r1, #1
    11c0:	d007      	beq.n	11d2 <_sercom_get_default_pad+0x52>
    11c2:	2900      	cmp	r1, #0
    11c4:	d04b      	beq.n	125e <_sercom_get_default_pad+0xde>
    11c6:	2902      	cmp	r1, #2
    11c8:	d005      	beq.n	11d6 <_sercom_get_default_pad+0x56>
    11ca:	2903      	cmp	r1, #3
    11cc:	d005      	beq.n	11da <_sercom_get_default_pad+0x5a>
	return 0;
    11ce:	2000      	movs	r0, #0
    11d0:	e7e4      	b.n	119c <_sercom_get_default_pad+0x1c>
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
    11d2:	482e      	ldr	r0, [pc, #184]	; (128c <_sercom_get_default_pad+0x10c>)
    11d4:	e7e2      	b.n	119c <_sercom_get_default_pad+0x1c>
    11d6:	482e      	ldr	r0, [pc, #184]	; (1290 <_sercom_get_default_pad+0x110>)
    11d8:	e7e0      	b.n	119c <_sercom_get_default_pad+0x1c>
    11da:	482e      	ldr	r0, [pc, #184]	; (1294 <_sercom_get_default_pad+0x114>)
    11dc:	e7de      	b.n	119c <_sercom_get_default_pad+0x1c>
    11de:	482e      	ldr	r0, [pc, #184]	; (1298 <_sercom_get_default_pad+0x118>)
    11e0:	e7dc      	b.n	119c <_sercom_get_default_pad+0x1c>
    11e2:	482e      	ldr	r0, [pc, #184]	; (129c <_sercom_get_default_pad+0x11c>)
    11e4:	e7da      	b.n	119c <_sercom_get_default_pad+0x1c>
    11e6:	482e      	ldr	r0, [pc, #184]	; (12a0 <_sercom_get_default_pad+0x120>)
    11e8:	e7d8      	b.n	119c <_sercom_get_default_pad+0x1c>
    11ea:	2901      	cmp	r1, #1
    11ec:	d007      	beq.n	11fe <_sercom_get_default_pad+0x7e>
    11ee:	2900      	cmp	r1, #0
    11f0:	d039      	beq.n	1266 <_sercom_get_default_pad+0xe6>
    11f2:	2902      	cmp	r1, #2
    11f4:	d005      	beq.n	1202 <_sercom_get_default_pad+0x82>
    11f6:	2903      	cmp	r1, #3
    11f8:	d005      	beq.n	1206 <_sercom_get_default_pad+0x86>
	return 0;
    11fa:	2000      	movs	r0, #0
    11fc:	e7ce      	b.n	119c <_sercom_get_default_pad+0x1c>
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
    11fe:	4829      	ldr	r0, [pc, #164]	; (12a4 <_sercom_get_default_pad+0x124>)
    1200:	e7cc      	b.n	119c <_sercom_get_default_pad+0x1c>
    1202:	4829      	ldr	r0, [pc, #164]	; (12a8 <_sercom_get_default_pad+0x128>)
    1204:	e7ca      	b.n	119c <_sercom_get_default_pad+0x1c>
    1206:	4829      	ldr	r0, [pc, #164]	; (12ac <_sercom_get_default_pad+0x12c>)
    1208:	e7c8      	b.n	119c <_sercom_get_default_pad+0x1c>
    120a:	2901      	cmp	r1, #1
    120c:	d007      	beq.n	121e <_sercom_get_default_pad+0x9e>
    120e:	2900      	cmp	r1, #0
    1210:	d02b      	beq.n	126a <_sercom_get_default_pad+0xea>
    1212:	2902      	cmp	r1, #2
    1214:	d005      	beq.n	1222 <_sercom_get_default_pad+0xa2>
    1216:	2903      	cmp	r1, #3
    1218:	d005      	beq.n	1226 <_sercom_get_default_pad+0xa6>
	return 0;
    121a:	2000      	movs	r0, #0
    121c:	e7be      	b.n	119c <_sercom_get_default_pad+0x1c>
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
    121e:	4824      	ldr	r0, [pc, #144]	; (12b0 <_sercom_get_default_pad+0x130>)
    1220:	e7bc      	b.n	119c <_sercom_get_default_pad+0x1c>
    1222:	4824      	ldr	r0, [pc, #144]	; (12b4 <_sercom_get_default_pad+0x134>)
    1224:	e7ba      	b.n	119c <_sercom_get_default_pad+0x1c>
    1226:	4824      	ldr	r0, [pc, #144]	; (12b8 <_sercom_get_default_pad+0x138>)
    1228:	e7b8      	b.n	119c <_sercom_get_default_pad+0x1c>
    122a:	2902      	cmp	r1, #2
    122c:	d003      	beq.n	1236 <_sercom_get_default_pad+0xb6>
    122e:	2903      	cmp	r1, #3
    1230:	d003      	beq.n	123a <_sercom_get_default_pad+0xba>
    1232:	2000      	movs	r0, #0
    1234:	e7b2      	b.n	119c <_sercom_get_default_pad+0x1c>
    1236:	4821      	ldr	r0, [pc, #132]	; (12bc <_sercom_get_default_pad+0x13c>)
    1238:	e7b0      	b.n	119c <_sercom_get_default_pad+0x1c>
    123a:	4821      	ldr	r0, [pc, #132]	; (12c0 <_sercom_get_default_pad+0x140>)
    123c:	e7ae      	b.n	119c <_sercom_get_default_pad+0x1c>
    123e:	2901      	cmp	r1, #1
    1240:	d007      	beq.n	1252 <_sercom_get_default_pad+0xd2>
    1242:	2900      	cmp	r1, #0
    1244:	d013      	beq.n	126e <_sercom_get_default_pad+0xee>
    1246:	2902      	cmp	r1, #2
    1248:	d005      	beq.n	1256 <_sercom_get_default_pad+0xd6>
    124a:	2903      	cmp	r1, #3
    124c:	d005      	beq.n	125a <_sercom_get_default_pad+0xda>
	return 0;
    124e:	2000      	movs	r0, #0
    1250:	e7a4      	b.n	119c <_sercom_get_default_pad+0x1c>
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
    1252:	481c      	ldr	r0, [pc, #112]	; (12c4 <_sercom_get_default_pad+0x144>)
    1254:	e7a2      	b.n	119c <_sercom_get_default_pad+0x1c>
    1256:	481c      	ldr	r0, [pc, #112]	; (12c8 <_sercom_get_default_pad+0x148>)
    1258:	e7a0      	b.n	119c <_sercom_get_default_pad+0x1c>
    125a:	481c      	ldr	r0, [pc, #112]	; (12cc <_sercom_get_default_pad+0x14c>)
    125c:	e79e      	b.n	119c <_sercom_get_default_pad+0x1c>
    125e:	481c      	ldr	r0, [pc, #112]	; (12d0 <_sercom_get_default_pad+0x150>)
    1260:	e79c      	b.n	119c <_sercom_get_default_pad+0x1c>
    1262:	481c      	ldr	r0, [pc, #112]	; (12d4 <_sercom_get_default_pad+0x154>)
    1264:	e79a      	b.n	119c <_sercom_get_default_pad+0x1c>
    1266:	481c      	ldr	r0, [pc, #112]	; (12d8 <_sercom_get_default_pad+0x158>)
    1268:	e798      	b.n	119c <_sercom_get_default_pad+0x1c>
    126a:	481c      	ldr	r0, [pc, #112]	; (12dc <_sercom_get_default_pad+0x15c>)
    126c:	e796      	b.n	119c <_sercom_get_default_pad+0x1c>
    126e:	481c      	ldr	r0, [pc, #112]	; (12e0 <_sercom_get_default_pad+0x160>)
    1270:	e794      	b.n	119c <_sercom_get_default_pad+0x1c>
    1272:	46c0      	nop			; (mov r8, r8)
    1274:	42001000 	.word	0x42001000
    1278:	42001800 	.word	0x42001800
    127c:	42001c00 	.word	0x42001c00
    1280:	42001400 	.word	0x42001400
    1284:	42000800 	.word	0x42000800
    1288:	42000c00 	.word	0x42000c00
    128c:	00050003 	.word	0x00050003
    1290:	000a0002 	.word	0x000a0002
    1294:	000b0002 	.word	0x000b0002
    1298:	00110002 	.word	0x00110002
    129c:	00120002 	.word	0x00120002
    12a0:	00130002 	.word	0x00130002
    12a4:	00090003 	.word	0x00090003
    12a8:	000e0002 	.word	0x000e0002
    12ac:	000f0002 	.word	0x000f0002
    12b0:	00110003 	.word	0x00110003
    12b4:	00120003 	.word	0x00120003
    12b8:	00130003 	.word	0x00130003
    12bc:	002a0003 	.word	0x002a0003
    12c0:	002b0003 	.word	0x002b0003
    12c4:	00310002 	.word	0x00310002
    12c8:	00140002 	.word	0x00140002
    12cc:	00150002 	.word	0x00150002
    12d0:	00040003 	.word	0x00040003
    12d4:	00100002 	.word	0x00100002
    12d8:	00080003 	.word	0x00080003
    12dc:	00100003 	.word	0x00100003
    12e0:	00300002 	.word	0x00300002

000012e4 <_sercom_get_sercom_inst_index>:
 *
 * \return Index of given instance.
 */
uint8_t _sercom_get_sercom_inst_index(
		Sercom *const sercom_instance)
{
    12e4:	b530      	push	{r4, r5, lr}
    12e6:	b087      	sub	sp, #28
	/* Save all available SERCOM instances for compare */
	Sercom *sercom_instances[SERCOM_INST_NUM] = SERCOM_INSTS;
    12e8:	4b0b      	ldr	r3, [pc, #44]	; (1318 <_sercom_get_sercom_inst_index+0x34>)
    12ea:	466a      	mov	r2, sp
    12ec:	cb32      	ldmia	r3!, {r1, r4, r5}
    12ee:	c232      	stmia	r2!, {r1, r4, r5}
    12f0:	cb32      	ldmia	r3!, {r1, r4, r5}
    12f2:	c232      	stmia	r2!, {r1, r4, r5}

	/* Find index for sercom instance */
	for (uint32_t i = 0; i < SERCOM_INST_NUM; i++) {
		if ((uintptr_t)sercom_instance == (uintptr_t)sercom_instances[i]) {
    12f4:	9b00      	ldr	r3, [sp, #0]
    12f6:	4283      	cmp	r3, r0
    12f8:	d00b      	beq.n	1312 <_sercom_get_sercom_inst_index+0x2e>
    12fa:	2301      	movs	r3, #1
    12fc:	009a      	lsls	r2, r3, #2
    12fe:	4669      	mov	r1, sp
    1300:	5852      	ldr	r2, [r2, r1]
    1302:	4282      	cmp	r2, r0
    1304:	d006      	beq.n	1314 <_sercom_get_sercom_inst_index+0x30>
	for (uint32_t i = 0; i < SERCOM_INST_NUM; i++) {
    1306:	3301      	adds	r3, #1
    1308:	2b06      	cmp	r3, #6
    130a:	d1f7      	bne.n	12fc <_sercom_get_sercom_inst_index+0x18>
		}
	}

	/* Invalid data given */
	Assert(false);
	return 0;
    130c:	2000      	movs	r0, #0
}
    130e:	b007      	add	sp, #28
    1310:	bd30      	pop	{r4, r5, pc}
	for (uint32_t i = 0; i < SERCOM_INST_NUM; i++) {
    1312:	2300      	movs	r3, #0
			return i;
    1314:	b2d8      	uxtb	r0, r3
    1316:	e7fa      	b.n	130e <_sercom_get_sercom_inst_index+0x2a>
    1318:	000061c4 	.word	0x000061c4

0000131c <delay_init>:
 *
 * This must be called during start up to initialize the delay routine with
 * the current used main clock. It must run any time the main CPU clock is changed.
 */
void delay_init(void)
{
    131c:	b570      	push	{r4, r5, r6, lr}
	cycles_per_ms = system_gclk_gen_get_hz(0);
    131e:	2000      	movs	r0, #0
    1320:	4b08      	ldr	r3, [pc, #32]	; (1344 <delay_init+0x28>)
    1322:	4798      	blx	r3
    1324:	0005      	movs	r5, r0
	cycles_per_ms /= 1000;
    1326:	4c08      	ldr	r4, [pc, #32]	; (1348 <delay_init+0x2c>)
    1328:	21fa      	movs	r1, #250	; 0xfa
    132a:	0089      	lsls	r1, r1, #2
    132c:	47a0      	blx	r4
    132e:	4b07      	ldr	r3, [pc, #28]	; (134c <delay_init+0x30>)
    1330:	6018      	str	r0, [r3, #0]
	cycles_per_us = cycles_per_ms / 1000;
    1332:	4907      	ldr	r1, [pc, #28]	; (1350 <delay_init+0x34>)
    1334:	0028      	movs	r0, r5
    1336:	47a0      	blx	r4
    1338:	4b06      	ldr	r3, [pc, #24]	; (1354 <delay_init+0x38>)
    133a:	6018      	str	r0, [r3, #0]

	SysTick->CTRL = SysTick_CTRL_CLKSOURCE_Msk | SysTick_CTRL_ENABLE_Msk;
    133c:	2205      	movs	r2, #5
    133e:	4b06      	ldr	r3, [pc, #24]	; (1358 <delay_init+0x3c>)
    1340:	601a      	str	r2, [r3, #0]
}
    1342:	bd70      	pop	{r4, r5, r6, pc}
    1344:	000014b5 	.word	0x000014b5
    1348:	00004229 	.word	0x00004229
    134c:	20000008 	.word	0x20000008
    1350:	000f4240 	.word	0x000f4240
    1354:	2000000c 	.word	0x2000000c
    1358:	e000e010 	.word	0xe000e010

0000135c <cpu_irq_enter_critical>:
volatile bool g_interrupt_enabled = true;
#endif

void cpu_irq_enter_critical(void)
{
	if (cpu_irq_critical_section_counter == 0) {
    135c:	4b0c      	ldr	r3, [pc, #48]	; (1390 <cpu_irq_enter_critical+0x34>)
    135e:	681b      	ldr	r3, [r3, #0]
    1360:	2b00      	cmp	r3, #0
    1362:	d106      	bne.n	1372 <cpu_irq_enter_critical+0x16>
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
    1364:	f3ef 8310 	mrs	r3, PRIMASK
		if (cpu_irq_is_enabled()) {
    1368:	2b00      	cmp	r3, #0
    136a:	d007      	beq.n	137c <cpu_irq_enter_critical+0x20>
			cpu_irq_disable();
			cpu_irq_prev_interrupt_state = true;
		} else {
			/* Make sure the to save the prev state as false */
			cpu_irq_prev_interrupt_state = false;
    136c:	2200      	movs	r2, #0
    136e:	4b09      	ldr	r3, [pc, #36]	; (1394 <cpu_irq_enter_critical+0x38>)
    1370:	701a      	strb	r2, [r3, #0]
		}

	}

	cpu_irq_critical_section_counter++;
    1372:	4a07      	ldr	r2, [pc, #28]	; (1390 <cpu_irq_enter_critical+0x34>)
    1374:	6813      	ldr	r3, [r2, #0]
    1376:	3301      	adds	r3, #1
    1378:	6013      	str	r3, [r2, #0]
}
    137a:	4770      	bx	lr
  __ASM volatile ("cpsid i" : : : "memory");
    137c:	b672      	cpsid	i
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb");
    137e:	f3bf 8f5f 	dmb	sy
			cpu_irq_disable();
    1382:	2200      	movs	r2, #0
    1384:	4b04      	ldr	r3, [pc, #16]	; (1398 <cpu_irq_enter_critical+0x3c>)
    1386:	701a      	strb	r2, [r3, #0]
			cpu_irq_prev_interrupt_state = true;
    1388:	3201      	adds	r2, #1
    138a:	4b02      	ldr	r3, [pc, #8]	; (1394 <cpu_irq_enter_critical+0x38>)
    138c:	701a      	strb	r2, [r3, #0]
    138e:	e7f0      	b.n	1372 <cpu_irq_enter_critical+0x16>
    1390:	20000270 	.word	0x20000270
    1394:	20000274 	.word	0x20000274
    1398:	20000010 	.word	0x20000010

0000139c <cpu_irq_leave_critical>:
void cpu_irq_leave_critical(void)
{
	/* Check if the user is trying to leave a critical section when not in a critical section */
	Assert(cpu_irq_critical_section_counter > 0);

	cpu_irq_critical_section_counter--;
    139c:	4b08      	ldr	r3, [pc, #32]	; (13c0 <cpu_irq_leave_critical+0x24>)
    139e:	681a      	ldr	r2, [r3, #0]
    13a0:	3a01      	subs	r2, #1
    13a2:	601a      	str	r2, [r3, #0]

	/* Only enable global interrupts when the counter reaches 0 and the state of the global interrupt flag
	   was enabled when entering critical state */
	if ((cpu_irq_critical_section_counter == 0) && (cpu_irq_prev_interrupt_state)) {
    13a4:	681b      	ldr	r3, [r3, #0]
    13a6:	2b00      	cmp	r3, #0
    13a8:	d109      	bne.n	13be <cpu_irq_leave_critical+0x22>
    13aa:	4b06      	ldr	r3, [pc, #24]	; (13c4 <cpu_irq_leave_critical+0x28>)
    13ac:	781b      	ldrb	r3, [r3, #0]
    13ae:	2b00      	cmp	r3, #0
    13b0:	d005      	beq.n	13be <cpu_irq_leave_critical+0x22>
		cpu_irq_enable();
    13b2:	2201      	movs	r2, #1
    13b4:	4b04      	ldr	r3, [pc, #16]	; (13c8 <cpu_irq_leave_critical+0x2c>)
    13b6:	701a      	strb	r2, [r3, #0]
    13b8:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
    13bc:	b662      	cpsie	i
	}
}
    13be:	4770      	bx	lr
    13c0:	20000270 	.word	0x20000270
    13c4:	20000274 	.word	0x20000274
    13c8:	20000010 	.word	0x20000010

000013cc <system_board_init>:
void board_init(void);
#  pragma weak board_init=system_board_init
#endif

void system_board_init(void)
{
    13cc:	b5f0      	push	{r4, r5, r6, r7, lr}
    13ce:	b083      	sub	sp, #12
	config->input_pull = PORT_PIN_PULL_UP;
    13d0:	ac01      	add	r4, sp, #4
    13d2:	2501      	movs	r5, #1
    13d4:	7065      	strb	r5, [r4, #1]
	config->powersave  = false;
    13d6:	2700      	movs	r7, #0
    13d8:	70a7      	strb	r7, [r4, #2]
	struct port_config pin_conf;
	port_get_config_defaults(&pin_conf);

	/* Configure LEDs as outputs, turn them off */
	pin_conf.direction  = PORT_PIN_DIR_OUTPUT;
    13da:	7025      	strb	r5, [r4, #0]
	port_pin_set_config(LED_0_PIN, &pin_conf);
    13dc:	0021      	movs	r1, r4
    13de:	2000      	movs	r0, #0
    13e0:	4e05      	ldr	r6, [pc, #20]	; (13f8 <system_board_init+0x2c>)
    13e2:	47b0      	blx	r6
	PortGroup *const port_base = port_get_group_from_gpio_pin(gpio_pin);
	uint32_t pin_mask  = (1UL << (gpio_pin % 32));

	/* Set the pin to high or low atomically based on the requested level */
	if (level) {
		port_base->OUTSET.reg = pin_mask;
    13e4:	4b05      	ldr	r3, [pc, #20]	; (13fc <system_board_init+0x30>)
    13e6:	619d      	str	r5, [r3, #24]
	port_pin_set_output_level(LED_0_PIN, LED_0_INACTIVE);

	/* Set buttons as inputs */
	pin_conf.direction  = PORT_PIN_DIR_INPUT;
    13e8:	7027      	strb	r7, [r4, #0]
	pin_conf.input_pull = PORT_PIN_PULL_UP;
    13ea:	7065      	strb	r5, [r4, #1]
	port_pin_set_config(BUTTON_0_PIN, &pin_conf);
    13ec:	0021      	movs	r1, r4
    13ee:	2023      	movs	r0, #35	; 0x23
    13f0:	47b0      	blx	r6
}
    13f2:	b003      	add	sp, #12
    13f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    13f6:	46c0      	nop			; (mov r8, r8)
    13f8:	00001401 	.word	0x00001401
    13fc:	41004400 	.word	0x41004400

00001400 <port_pin_set_config>:
 *  \param[in] config    Configuration settings for the pin
 */
void port_pin_set_config(
		const uint8_t gpio_pin,
		const struct port_config *const config)
{
    1400:	b500      	push	{lr}
    1402:	b083      	sub	sp, #12
	config->mux_position = SYSTEM_PINMUX_GPIO;
    1404:	ab01      	add	r3, sp, #4
    1406:	2280      	movs	r2, #128	; 0x80
    1408:	701a      	strb	r2, [r3, #0]

	struct system_pinmux_config pinmux_config;
	system_pinmux_get_config_defaults(&pinmux_config);

	pinmux_config.mux_position = SYSTEM_PINMUX_GPIO;
	pinmux_config.direction    = (enum system_pinmux_pin_dir)config->direction;
    140a:	780a      	ldrb	r2, [r1, #0]
    140c:	705a      	strb	r2, [r3, #1]
	pinmux_config.input_pull   = (enum system_pinmux_pin_pull)config->input_pull;
    140e:	784a      	ldrb	r2, [r1, #1]
    1410:	709a      	strb	r2, [r3, #2]
	pinmux_config.powersave    = config->powersave;
    1412:	788a      	ldrb	r2, [r1, #2]
    1414:	70da      	strb	r2, [r3, #3]

	system_pinmux_pin_set_config(gpio_pin, &pinmux_config);
    1416:	0019      	movs	r1, r3
    1418:	4b01      	ldr	r3, [pc, #4]	; (1420 <port_pin_set_config+0x20>)
    141a:	4798      	blx	r3
}
    141c:	b003      	add	sp, #12
    141e:	bd00      	pop	{pc}
    1420:	000016c5 	.word	0x000016c5

00001424 <system_clock_source_get_hz>:
 *
 * \returns Frequency of the given clock source, in Hz.
 */
uint32_t system_clock_source_get_hz(
		const enum system_clock_source clock_source)
{
    1424:	b510      	push	{r4, lr}
	switch (clock_source) {
    1426:	2808      	cmp	r0, #8
    1428:	d803      	bhi.n	1432 <system_clock_source_get_hz+0xe>
    142a:	0080      	lsls	r0, r0, #2
    142c:	4b1b      	ldr	r3, [pc, #108]	; (149c <system_clock_source_get_hz+0x78>)
    142e:	581b      	ldr	r3, [r3, r0]
    1430:	469f      	mov	pc, r3

		return _system_clock_inst.dpll.frequency;
#endif

	default:
		return 0;
    1432:	2000      	movs	r0, #0
    1434:	e030      	b.n	1498 <system_clock_source_get_hz+0x74>
		return _system_clock_inst.xosc.frequency;
    1436:	4b1a      	ldr	r3, [pc, #104]	; (14a0 <system_clock_source_get_hz+0x7c>)
    1438:	6918      	ldr	r0, [r3, #16]
    143a:	e02d      	b.n	1498 <system_clock_source_get_hz+0x74>
		return 8000000UL >> SYSCTRL->OSC8M.bit.PRESC;
    143c:	4b19      	ldr	r3, [pc, #100]	; (14a4 <system_clock_source_get_hz+0x80>)
    143e:	6a1b      	ldr	r3, [r3, #32]
    1440:	059b      	lsls	r3, r3, #22
    1442:	0f9b      	lsrs	r3, r3, #30
    1444:	4818      	ldr	r0, [pc, #96]	; (14a8 <system_clock_source_get_hz+0x84>)
    1446:	40d8      	lsrs	r0, r3
    1448:	e026      	b.n	1498 <system_clock_source_get_hz+0x74>
		return _system_clock_inst.xosc32k.frequency;
    144a:	4b15      	ldr	r3, [pc, #84]	; (14a0 <system_clock_source_get_hz+0x7c>)
    144c:	6958      	ldr	r0, [r3, #20]
    144e:	e023      	b.n	1498 <system_clock_source_get_hz+0x74>
		if (!(_system_clock_inst.dfll.control & SYSCTRL_DFLLCTRL_ENABLE))
    1450:	4b13      	ldr	r3, [pc, #76]	; (14a0 <system_clock_source_get_hz+0x7c>)
    1452:	681b      	ldr	r3, [r3, #0]
			return 0;
    1454:	2000      	movs	r0, #0
		if (!(_system_clock_inst.dfll.control & SYSCTRL_DFLLCTRL_ENABLE))
    1456:	079b      	lsls	r3, r3, #30
    1458:	d51e      	bpl.n	1498 <system_clock_source_get_hz+0x74>
	while (!(SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY)) {
    145a:	4912      	ldr	r1, [pc, #72]	; (14a4 <system_clock_source_get_hz+0x80>)
    145c:	2210      	movs	r2, #16
    145e:	68cb      	ldr	r3, [r1, #12]
    1460:	421a      	tst	r2, r3
    1462:	d0fc      	beq.n	145e <system_clock_source_get_hz+0x3a>
		if (_system_clock_inst.dfll.control & SYSCTRL_DFLLCTRL_MODE) {
    1464:	4b0e      	ldr	r3, [pc, #56]	; (14a0 <system_clock_source_get_hz+0x7c>)
    1466:	681b      	ldr	r3, [r3, #0]
    1468:	075b      	lsls	r3, r3, #29
    146a:	d401      	bmi.n	1470 <system_clock_source_get_hz+0x4c>
		return 48000000UL;
    146c:	480f      	ldr	r0, [pc, #60]	; (14ac <system_clock_source_get_hz+0x88>)
    146e:	e013      	b.n	1498 <system_clock_source_get_hz+0x74>
			return system_gclk_chan_get_hz(SYSCTRL_GCLK_ID_DFLL48) *
    1470:	2000      	movs	r0, #0
    1472:	4b0f      	ldr	r3, [pc, #60]	; (14b0 <system_clock_source_get_hz+0x8c>)
    1474:	4798      	blx	r3
					(_system_clock_inst.dfll.mul & 0xffff);
    1476:	4b0a      	ldr	r3, [pc, #40]	; (14a0 <system_clock_source_get_hz+0x7c>)
    1478:	689b      	ldr	r3, [r3, #8]
    147a:	041b      	lsls	r3, r3, #16
    147c:	0c1b      	lsrs	r3, r3, #16
			return system_gclk_chan_get_hz(SYSCTRL_GCLK_ID_DFLL48) *
    147e:	4358      	muls	r0, r3
    1480:	e00a      	b.n	1498 <system_clock_source_get_hz+0x74>
		if (!(SYSCTRL->DPLLSTATUS.reg & SYSCTRL_DPLLSTATUS_ENABLE)) {
    1482:	2350      	movs	r3, #80	; 0x50
    1484:	4a07      	ldr	r2, [pc, #28]	; (14a4 <system_clock_source_get_hz+0x80>)
    1486:	5cd3      	ldrb	r3, [r2, r3]
			return 0;
    1488:	2000      	movs	r0, #0
		if (!(SYSCTRL->DPLLSTATUS.reg & SYSCTRL_DPLLSTATUS_ENABLE)) {
    148a:	075b      	lsls	r3, r3, #29
    148c:	d504      	bpl.n	1498 <system_clock_source_get_hz+0x74>
		return _system_clock_inst.dpll.frequency;
    148e:	4b04      	ldr	r3, [pc, #16]	; (14a0 <system_clock_source_get_hz+0x7c>)
    1490:	68d8      	ldr	r0, [r3, #12]
    1492:	e001      	b.n	1498 <system_clock_source_get_hz+0x74>
		return 32768UL;
    1494:	2080      	movs	r0, #128	; 0x80
    1496:	0200      	lsls	r0, r0, #8
	}
}
    1498:	bd10      	pop	{r4, pc}
    149a:	46c0      	nop			; (mov r8, r8)
    149c:	000061dc 	.word	0x000061dc
    14a0:	20000278 	.word	0x20000278
    14a4:	40000800 	.word	0x40000800
    14a8:	007a1200 	.word	0x007a1200
    14ac:	02dc6c00 	.word	0x02dc6c00
    14b0:	000015e9 	.word	0x000015e9

000014b4 <system_gclk_gen_get_hz>:
 *
 * \return The frequency of the generic clock generator, in Hz.
 */
uint32_t system_gclk_gen_get_hz(
		const uint8_t generator)
{
    14b4:	b570      	push	{r4, r5, r6, lr}
    14b6:	0004      	movs	r4, r0
	if (GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY){
    14b8:	4a1a      	ldr	r2, [pc, #104]	; (1524 <system_gclk_gen_get_hz+0x70>)
    14ba:	7853      	ldrb	r3, [r2, #1]
	while (system_gclk_is_syncing()) {
    14bc:	b25b      	sxtb	r3, r3
    14be:	2b00      	cmp	r3, #0
    14c0:	dbfb      	blt.n	14ba <system_gclk_gen_get_hz+0x6>
 * are only re-enabled upon leaving the outermost nested critical section.
 *
 */
static inline void system_interrupt_enter_critical_section(void)
{
	cpu_irq_enter_critical();
    14c2:	4b19      	ldr	r3, [pc, #100]	; (1528 <system_gclk_gen_get_hz+0x74>)
    14c4:	4798      	blx	r3
	};

	system_interrupt_enter_critical_section();

	/* Select the appropriate generator */
	*((uint8_t*)&GCLK->GENCTRL.reg) = generator;
    14c6:	4b19      	ldr	r3, [pc, #100]	; (152c <system_gclk_gen_get_hz+0x78>)
    14c8:	701c      	strb	r4, [r3, #0]
	if (GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY){
    14ca:	4a16      	ldr	r2, [pc, #88]	; (1524 <system_gclk_gen_get_hz+0x70>)
    14cc:	7853      	ldrb	r3, [r2, #1]
	while (system_gclk_is_syncing()) {
    14ce:	b25b      	sxtb	r3, r3
    14d0:	2b00      	cmp	r3, #0
    14d2:	dbfb      	blt.n	14cc <system_gclk_gen_get_hz+0x18>
		/* Wait for synchronization */
	};

	/* Get the frequency of the source connected to the GCLK generator */
	uint32_t gen_input_hz = system_clock_source_get_hz(
			(enum system_clock_source)GCLK->GENCTRL.bit.SRC);
    14d4:	4e13      	ldr	r6, [pc, #76]	; (1524 <system_gclk_gen_get_hz+0x70>)
    14d6:	6870      	ldr	r0, [r6, #4]
    14d8:	04c0      	lsls	r0, r0, #19
    14da:	0ec0      	lsrs	r0, r0, #27
	uint32_t gen_input_hz = system_clock_source_get_hz(
    14dc:	4b14      	ldr	r3, [pc, #80]	; (1530 <system_gclk_gen_get_hz+0x7c>)
    14de:	4798      	blx	r3
    14e0:	0005      	movs	r5, r0

	*((uint8_t*)&GCLK->GENCTRL.reg) = generator;
    14e2:	4b12      	ldr	r3, [pc, #72]	; (152c <system_gclk_gen_get_hz+0x78>)
    14e4:	701c      	strb	r4, [r3, #0]

	uint8_t divsel = GCLK->GENCTRL.bit.DIVSEL;
    14e6:	6876      	ldr	r6, [r6, #4]
    14e8:	02f6      	lsls	r6, r6, #11
    14ea:	0ff6      	lsrs	r6, r6, #31

	/* Select the appropriate generator division register */
	*((uint8_t*)&GCLK->GENDIV.reg) = generator;
    14ec:	4b11      	ldr	r3, [pc, #68]	; (1534 <system_gclk_gen_get_hz+0x80>)
    14ee:	701c      	strb	r4, [r3, #0]
	if (GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY){
    14f0:	4a0c      	ldr	r2, [pc, #48]	; (1524 <system_gclk_gen_get_hz+0x70>)
    14f2:	7853      	ldrb	r3, [r2, #1]
	while (system_gclk_is_syncing()) {
    14f4:	b25b      	sxtb	r3, r3
    14f6:	2b00      	cmp	r3, #0
    14f8:	dbfb      	blt.n	14f2 <system_gclk_gen_get_hz+0x3e>
		/* Wait for synchronization */
	};

	uint32_t divider = GCLK->GENDIV.bit.DIV;
    14fa:	4b0a      	ldr	r3, [pc, #40]	; (1524 <system_gclk_gen_get_hz+0x70>)
    14fc:	689c      	ldr	r4, [r3, #8]
    14fe:	0224      	lsls	r4, r4, #8
    1500:	0c24      	lsrs	r4, r4, #16
 * are only re-enabled upon leaving the outermost nested critical section.
 *
 */
static inline void system_interrupt_leave_critical_section(void)
{
	cpu_irq_leave_critical();
    1502:	4b0d      	ldr	r3, [pc, #52]	; (1538 <system_gclk_gen_get_hz+0x84>)
    1504:	4798      	blx	r3

	system_interrupt_leave_critical_section();

	/* Check if the generator is using fractional or binary division */
	if (!divsel && divider > 1) {
    1506:	2e00      	cmp	r6, #0
    1508:	d107      	bne.n	151a <system_gclk_gen_get_hz+0x66>
    150a:	2c01      	cmp	r4, #1
    150c:	d907      	bls.n	151e <system_gclk_gen_get_hz+0x6a>
		gen_input_hz /= divider;
    150e:	0021      	movs	r1, r4
    1510:	0028      	movs	r0, r5
    1512:	4b0a      	ldr	r3, [pc, #40]	; (153c <system_gclk_gen_get_hz+0x88>)
    1514:	4798      	blx	r3
    1516:	0005      	movs	r5, r0
    1518:	e001      	b.n	151e <system_gclk_gen_get_hz+0x6a>
	} else if (divsel) {
		gen_input_hz >>= (divider+1);
    151a:	3401      	adds	r4, #1
    151c:	40e5      	lsrs	r5, r4
	}

	return gen_input_hz;
}
    151e:	0028      	movs	r0, r5
    1520:	bd70      	pop	{r4, r5, r6, pc}
    1522:	46c0      	nop			; (mov r8, r8)
    1524:	40000c00 	.word	0x40000c00
    1528:	0000135d 	.word	0x0000135d
    152c:	40000c04 	.word	0x40000c04
    1530:	00001425 	.word	0x00001425
    1534:	40000c08 	.word	0x40000c08
    1538:	0000139d 	.word	0x0000139d
    153c:	00004229 	.word	0x00004229

00001540 <system_gclk_chan_enable>:
 *
 * \param[in] channel   Generic Clock channel to enable
 */
void system_gclk_chan_enable(
		const uint8_t channel)
{
    1540:	b510      	push	{r4, lr}
    1542:	0004      	movs	r4, r0
	cpu_irq_enter_critical();
    1544:	4b06      	ldr	r3, [pc, #24]	; (1560 <system_gclk_chan_enable+0x20>)
    1546:	4798      	blx	r3
	system_interrupt_enter_critical_section();

	/* Select the requested generator channel */
	*((uint8_t*)&GCLK->CLKCTRL.reg) = channel;
    1548:	4b06      	ldr	r3, [pc, #24]	; (1564 <system_gclk_chan_enable+0x24>)
    154a:	701c      	strb	r4, [r3, #0]

	/* Enable the generic clock */
	GCLK->CLKCTRL.reg |= GCLK_CLKCTRL_CLKEN;
    154c:	4a06      	ldr	r2, [pc, #24]	; (1568 <system_gclk_chan_enable+0x28>)
    154e:	8853      	ldrh	r3, [r2, #2]
    1550:	2180      	movs	r1, #128	; 0x80
    1552:	01c9      	lsls	r1, r1, #7
    1554:	430b      	orrs	r3, r1
    1556:	8053      	strh	r3, [r2, #2]
	cpu_irq_leave_critical();
    1558:	4b04      	ldr	r3, [pc, #16]	; (156c <system_gclk_chan_enable+0x2c>)
    155a:	4798      	blx	r3

	system_interrupt_leave_critical_section();
}
    155c:	bd10      	pop	{r4, pc}
    155e:	46c0      	nop			; (mov r8, r8)
    1560:	0000135d 	.word	0x0000135d
    1564:	40000c02 	.word	0x40000c02
    1568:	40000c00 	.word	0x40000c00
    156c:	0000139d 	.word	0x0000139d

00001570 <system_gclk_chan_disable>:
 *
 * \param[in] channel  Generic Clock channel to disable
 */
void system_gclk_chan_disable(
		const uint8_t channel)
{
    1570:	b510      	push	{r4, lr}
    1572:	0004      	movs	r4, r0
	cpu_irq_enter_critical();
    1574:	4b0f      	ldr	r3, [pc, #60]	; (15b4 <system_gclk_chan_disable+0x44>)
    1576:	4798      	blx	r3
	system_interrupt_enter_critical_section();

	/* Select the requested generator channel */
	*((uint8_t*)&GCLK->CLKCTRL.reg) = channel;
    1578:	4b0f      	ldr	r3, [pc, #60]	; (15b8 <system_gclk_chan_disable+0x48>)
    157a:	701c      	strb	r4, [r3, #0]

	/* Sanity check WRTLOCK */
	Assert(!GCLK->CLKCTRL.bit.WRTLOCK);

	/* Switch to known-working source so that the channel can be disabled */
	uint32_t prev_gen_id = GCLK->CLKCTRL.bit.GEN;
    157c:	4a0f      	ldr	r2, [pc, #60]	; (15bc <system_gclk_chan_disable+0x4c>)
    157e:	8853      	ldrh	r3, [r2, #2]
    1580:	051b      	lsls	r3, r3, #20
    1582:	0f18      	lsrs	r0, r3, #28
	GCLK->CLKCTRL.bit.GEN = 0;
    1584:	8853      	ldrh	r3, [r2, #2]
    1586:	490e      	ldr	r1, [pc, #56]	; (15c0 <system_gclk_chan_disable+0x50>)
    1588:	400b      	ands	r3, r1
    158a:	8053      	strh	r3, [r2, #2]

	/* Disable the generic clock */
	GCLK->CLKCTRL.reg &= ~GCLK_CLKCTRL_CLKEN;
    158c:	8853      	ldrh	r3, [r2, #2]
    158e:	490d      	ldr	r1, [pc, #52]	; (15c4 <system_gclk_chan_disable+0x54>)
    1590:	400b      	ands	r3, r1
    1592:	8053      	strh	r3, [r2, #2]
	while (GCLK->CLKCTRL.reg & GCLK_CLKCTRL_CLKEN) {
    1594:	0011      	movs	r1, r2
    1596:	2280      	movs	r2, #128	; 0x80
    1598:	01d2      	lsls	r2, r2, #7
    159a:	884b      	ldrh	r3, [r1, #2]
    159c:	4213      	tst	r3, r2
    159e:	d1fc      	bne.n	159a <system_gclk_chan_disable+0x2a>
		/* Wait for clock to become disabled */
	}

	/* Restore previous configured clock generator */
	GCLK->CLKCTRL.bit.GEN = prev_gen_id;
    15a0:	4906      	ldr	r1, [pc, #24]	; (15bc <system_gclk_chan_disable+0x4c>)
    15a2:	884a      	ldrh	r2, [r1, #2]
    15a4:	0203      	lsls	r3, r0, #8
    15a6:	4806      	ldr	r0, [pc, #24]	; (15c0 <system_gclk_chan_disable+0x50>)
    15a8:	4002      	ands	r2, r0
    15aa:	4313      	orrs	r3, r2
    15ac:	804b      	strh	r3, [r1, #2]
	cpu_irq_leave_critical();
    15ae:	4b06      	ldr	r3, [pc, #24]	; (15c8 <system_gclk_chan_disable+0x58>)
    15b0:	4798      	blx	r3

	system_interrupt_leave_critical_section();
}
    15b2:	bd10      	pop	{r4, pc}
    15b4:	0000135d 	.word	0x0000135d
    15b8:	40000c02 	.word	0x40000c02
    15bc:	40000c00 	.word	0x40000c00
    15c0:	fffff0ff 	.word	0xfffff0ff
    15c4:	ffffbfff 	.word	0xffffbfff
    15c8:	0000139d 	.word	0x0000139d

000015cc <system_gclk_chan_set_config>:
{
    15cc:	b510      	push	{r4, lr}
	new_clkctrl_config |= config->source_generator << GCLK_CLKCTRL_GEN_Pos;
    15ce:	780c      	ldrb	r4, [r1, #0]
    15d0:	0224      	lsls	r4, r4, #8
    15d2:	4304      	orrs	r4, r0
	system_gclk_chan_disable(channel);
    15d4:	4b02      	ldr	r3, [pc, #8]	; (15e0 <system_gclk_chan_set_config+0x14>)
    15d6:	4798      	blx	r3
	GCLK->CLKCTRL.reg = new_clkctrl_config;
    15d8:	b2a4      	uxth	r4, r4
    15da:	4b02      	ldr	r3, [pc, #8]	; (15e4 <system_gclk_chan_set_config+0x18>)
    15dc:	805c      	strh	r4, [r3, #2]
}
    15de:	bd10      	pop	{r4, pc}
    15e0:	00001571 	.word	0x00001571
    15e4:	40000c00 	.word	0x40000c00

000015e8 <system_gclk_chan_get_hz>:
 *
 * \return The frequency of the generic clock channel, in Hz.
 */
uint32_t system_gclk_chan_get_hz(
		const uint8_t channel)
{
    15e8:	b510      	push	{r4, lr}
    15ea:	0004      	movs	r4, r0
	cpu_irq_enter_critical();
    15ec:	4b06      	ldr	r3, [pc, #24]	; (1608 <system_gclk_chan_get_hz+0x20>)
    15ee:	4798      	blx	r3
	uint8_t gen_id;

	system_interrupt_enter_critical_section();

	/* Select the requested generic clock channel */
	*((uint8_t*)&GCLK->CLKCTRL.reg) = channel;
    15f0:	4b06      	ldr	r3, [pc, #24]	; (160c <system_gclk_chan_get_hz+0x24>)
    15f2:	701c      	strb	r4, [r3, #0]
	gen_id = GCLK->CLKCTRL.bit.GEN;
    15f4:	4b06      	ldr	r3, [pc, #24]	; (1610 <system_gclk_chan_get_hz+0x28>)
    15f6:	885c      	ldrh	r4, [r3, #2]
    15f8:	0524      	lsls	r4, r4, #20
    15fa:	0f24      	lsrs	r4, r4, #28
	cpu_irq_leave_critical();
    15fc:	4b05      	ldr	r3, [pc, #20]	; (1614 <system_gclk_chan_get_hz+0x2c>)
    15fe:	4798      	blx	r3

	system_interrupt_leave_critical_section();

	/* Return the clock speed of the associated GCLK generator */
	return system_gclk_gen_get_hz(gen_id);
    1600:	0020      	movs	r0, r4
    1602:	4b05      	ldr	r3, [pc, #20]	; (1618 <system_gclk_chan_get_hz+0x30>)
    1604:	4798      	blx	r3
}
    1606:	bd10      	pop	{r4, pc}
    1608:	0000135d 	.word	0x0000135d
    160c:	40000c02 	.word	0x40000c02
    1610:	40000c00 	.word	0x40000c00
    1614:	0000139d 	.word	0x0000139d
    1618:	000014b5 	.word	0x000014b5

0000161c <_system_pinmux_config>:
 */
static void _system_pinmux_config(
		PortGroup *const port,
		const uint32_t pin_mask,
		const struct system_pinmux_config *const config)
{
    161c:	b530      	push	{r4, r5, lr}

	/* Track the configuration bits into a temporary variable before writing */
	uint32_t pin_cfg = 0;

	/* Enabled powersave mode, don't create configuration */
	if (!config->powersave) {
    161e:	78d3      	ldrb	r3, [r2, #3]
    1620:	2b00      	cmp	r3, #0
    1622:	d135      	bne.n	1690 <_system_pinmux_config+0x74>
		/* Enable the pin peripheral MUX flag if non-GPIO selected (pinmux will
		 * be written later) and store the new MUX mask */
		if (config->mux_position != SYSTEM_PINMUX_GPIO) {
    1624:	7813      	ldrb	r3, [r2, #0]
    1626:	2b80      	cmp	r3, #128	; 0x80
    1628:	d029      	beq.n	167e <_system_pinmux_config+0x62>
			pin_cfg |= PORT_WRCONFIG_PMUXEN;
			pin_cfg |= (config->mux_position << PORT_WRCONFIG_PMUX_Pos);
    162a:	061b      	lsls	r3, r3, #24
    162c:	2480      	movs	r4, #128	; 0x80
    162e:	0264      	lsls	r4, r4, #9
    1630:	4323      	orrs	r3, r4
		}

		/* Check if the user has requested that the input buffer be enabled */
		if ((config->direction == SYSTEM_PINMUX_PIN_DIR_INPUT) ||
    1632:	7854      	ldrb	r4, [r2, #1]
    1634:	2502      	movs	r5, #2
    1636:	43ac      	bics	r4, r5
    1638:	d106      	bne.n	1648 <_system_pinmux_config+0x2c>
				(config->direction == SYSTEM_PINMUX_PIN_DIR_OUTPUT_WITH_READBACK)) {
			/* Enable input buffer flag */
			pin_cfg |= PORT_WRCONFIG_INEN;

			/* Enable pull-up/pull-down control flag if requested */
			if (config->input_pull != SYSTEM_PINMUX_PIN_PULL_NONE) {
    163a:	7894      	ldrb	r4, [r2, #2]
    163c:	2c00      	cmp	r4, #0
    163e:	d120      	bne.n	1682 <_system_pinmux_config+0x66>
			pin_cfg |= PORT_WRCONFIG_INEN;
    1640:	2480      	movs	r4, #128	; 0x80
    1642:	02a4      	lsls	r4, r4, #10
    1644:	4323      	orrs	r3, r4
				pin_cfg |= PORT_WRCONFIG_PULLEN;
			}

			/* Clear the port DIR bits to disable the output buffer */
			port->DIRCLR.reg = pin_mask;
    1646:	6041      	str	r1, [r0, #4]
		}

		/* Check if the user has requested that the output buffer be enabled */
		if ((config->direction == SYSTEM_PINMUX_PIN_DIR_OUTPUT) ||
    1648:	7854      	ldrb	r4, [r2, #1]
    164a:	3c01      	subs	r4, #1
    164c:	2c01      	cmp	r4, #1
    164e:	d91c      	bls.n	168a <_system_pinmux_config+0x6e>
		port->DIRCLR.reg = pin_mask;
	}

	/* The Write Configuration register (WRCONFIG) requires the
	 * pins to to grouped into two 16-bit half-words - split them out here */
	uint32_t lower_pin_mask = (pin_mask & 0xFFFF);
    1650:	040d      	lsls	r5, r1, #16
    1652:	0c2d      	lsrs	r5, r5, #16

	/* Configure the lower 16-bits of the port to the desired configuration,
	 * including the pin peripheral multiplexer just in case it is enabled */
	port->WRCONFIG.reg
		= (lower_pin_mask << PORT_WRCONFIG_PINMASK_Pos) |
			pin_cfg | PORT_WRCONFIG_WRPMUX | PORT_WRCONFIG_WRPINCFG;
    1654:	24a0      	movs	r4, #160	; 0xa0
    1656:	05e4      	lsls	r4, r4, #23
    1658:	432c      	orrs	r4, r5
    165a:	431c      	orrs	r4, r3
		= (lower_pin_mask << PORT_WRCONFIG_PINMASK_Pos) |
    165c:	6284      	str	r4, [r0, #40]	; 0x28
	uint32_t upper_pin_mask = (pin_mask >> 16);
    165e:	0c0d      	lsrs	r5, r1, #16

	/* Configure the upper 16-bits of the port to the desired configuration,
	 * including the pin peripheral multiplexer just in case it is enabled */
	port->WRCONFIG.reg
		= (upper_pin_mask << PORT_WRCONFIG_PINMASK_Pos) |
			pin_cfg | PORT_WRCONFIG_WRPMUX | PORT_WRCONFIG_WRPINCFG |
    1660:	24d0      	movs	r4, #208	; 0xd0
    1662:	0624      	lsls	r4, r4, #24
    1664:	432c      	orrs	r4, r5
    1666:	431c      	orrs	r4, r3
		= (upper_pin_mask << PORT_WRCONFIG_PINMASK_Pos) |
    1668:	6284      	str	r4, [r0, #40]	; 0x28
			PORT_WRCONFIG_HWSEL;

	if(!config->powersave) {
    166a:	78d4      	ldrb	r4, [r2, #3]
    166c:	2c00      	cmp	r4, #0
    166e:	d122      	bne.n	16b6 <_system_pinmux_config+0x9a>
		/* Set the pull-up state once the port pins are configured if one was
		 * requested and it does not violate the valid set of port
		 * configurations */
		if (pin_cfg & PORT_WRCONFIG_PULLEN) {
    1670:	035b      	lsls	r3, r3, #13
    1672:	d51c      	bpl.n	16ae <_system_pinmux_config+0x92>
			/* Set the OUT register bits to enable the pull-up if requested,
			 * clear to enable pull-down */
			if (config->input_pull == SYSTEM_PINMUX_PIN_PULL_UP) {
    1674:	7893      	ldrb	r3, [r2, #2]
    1676:	2b01      	cmp	r3, #1
    1678:	d01e      	beq.n	16b8 <_system_pinmux_config+0x9c>
				port->OUTSET.reg = pin_mask;
			} else {
				port->OUTCLR.reg = pin_mask;
    167a:	6141      	str	r1, [r0, #20]
    167c:	e017      	b.n	16ae <_system_pinmux_config+0x92>
	uint32_t pin_cfg = 0;
    167e:	2300      	movs	r3, #0
    1680:	e7d7      	b.n	1632 <_system_pinmux_config+0x16>
				pin_cfg |= PORT_WRCONFIG_PULLEN;
    1682:	24c0      	movs	r4, #192	; 0xc0
    1684:	02e4      	lsls	r4, r4, #11
    1686:	4323      	orrs	r3, r4
    1688:	e7dd      	b.n	1646 <_system_pinmux_config+0x2a>
			pin_cfg &= ~PORT_WRCONFIG_PULLEN;
    168a:	4c0d      	ldr	r4, [pc, #52]	; (16c0 <_system_pinmux_config+0xa4>)
    168c:	4023      	ands	r3, r4
    168e:	e7df      	b.n	1650 <_system_pinmux_config+0x34>
		port->DIRCLR.reg = pin_mask;
    1690:	6041      	str	r1, [r0, #4]
	uint32_t lower_pin_mask = (pin_mask & 0xFFFF);
    1692:	040c      	lsls	r4, r1, #16
    1694:	0c24      	lsrs	r4, r4, #16
			pin_cfg | PORT_WRCONFIG_WRPMUX | PORT_WRCONFIG_WRPINCFG;
    1696:	23a0      	movs	r3, #160	; 0xa0
    1698:	05db      	lsls	r3, r3, #23
    169a:	4323      	orrs	r3, r4
		= (lower_pin_mask << PORT_WRCONFIG_PINMASK_Pos) |
    169c:	6283      	str	r3, [r0, #40]	; 0x28
	uint32_t upper_pin_mask = (pin_mask >> 16);
    169e:	0c0c      	lsrs	r4, r1, #16
			pin_cfg | PORT_WRCONFIG_WRPMUX | PORT_WRCONFIG_WRPINCFG |
    16a0:	23d0      	movs	r3, #208	; 0xd0
    16a2:	061b      	lsls	r3, r3, #24
    16a4:	4323      	orrs	r3, r4
		= (upper_pin_mask << PORT_WRCONFIG_PINMASK_Pos) |
    16a6:	6283      	str	r3, [r0, #40]	; 0x28
	if(!config->powersave) {
    16a8:	78d3      	ldrb	r3, [r2, #3]
    16aa:	2b00      	cmp	r3, #0
    16ac:	d103      	bne.n	16b6 <_system_pinmux_config+0x9a>
			}
		}

		/* Check if the user has requested that the output buffer be enabled */
		if ((config->direction == SYSTEM_PINMUX_PIN_DIR_OUTPUT) ||
    16ae:	7853      	ldrb	r3, [r2, #1]
    16b0:	3b01      	subs	r3, #1
    16b2:	2b01      	cmp	r3, #1
    16b4:	d902      	bls.n	16bc <_system_pinmux_config+0xa0>
				(config->direction == SYSTEM_PINMUX_PIN_DIR_OUTPUT_WITH_READBACK)) {
			/* Set the port DIR bits to enable the output buffer */
			port->DIRSET.reg = pin_mask;
		}
	}
}
    16b6:	bd30      	pop	{r4, r5, pc}
				port->OUTSET.reg = pin_mask;
    16b8:	6181      	str	r1, [r0, #24]
    16ba:	e7f8      	b.n	16ae <_system_pinmux_config+0x92>
			port->DIRSET.reg = pin_mask;
    16bc:	6081      	str	r1, [r0, #8]
}
    16be:	e7fa      	b.n	16b6 <_system_pinmux_config+0x9a>
    16c0:	fffbffff 	.word	0xfffbffff

000016c4 <system_pinmux_pin_set_config>:
 * \param[in] config    Configuration settings for the pin
 */
void system_pinmux_pin_set_config(
		const uint8_t gpio_pin,
		const struct system_pinmux_config *const config)
{
    16c4:	b510      	push	{r4, lr}
    16c6:	000a      	movs	r2, r1
	uint8_t group_index = (gpio_pin / 32);

	/* Array of available ports */
	Port *const ports[PORT_INST_NUM] = PORT_INSTS;

	if (port_index < PORT_INST_NUM) {
    16c8:	09c1      	lsrs	r1, r0, #7
		return &(ports[port_index]->Group[group_index]);
	} else {
		Assert(false);
		return NULL;
    16ca:	2300      	movs	r3, #0
	if (port_index < PORT_INST_NUM) {
    16cc:	2900      	cmp	r1, #0
    16ce:	d104      	bne.n	16da <system_pinmux_pin_set_config+0x16>
		return &(ports[port_index]->Group[group_index]);
    16d0:	0943      	lsrs	r3, r0, #5
    16d2:	01db      	lsls	r3, r3, #7
    16d4:	4905      	ldr	r1, [pc, #20]	; (16ec <system_pinmux_pin_set_config+0x28>)
    16d6:	468c      	mov	ip, r1
    16d8:	4463      	add	r3, ip
	PortGroup *const port = system_pinmux_get_group_from_gpio_pin(gpio_pin);
	uint32_t pin_mask = (1UL << (gpio_pin % 32));
    16da:	241f      	movs	r4, #31
    16dc:	4020      	ands	r0, r4
    16de:	2101      	movs	r1, #1
    16e0:	4081      	lsls	r1, r0

	_system_pinmux_config(port, pin_mask, config);
    16e2:	0018      	movs	r0, r3
    16e4:	4b02      	ldr	r3, [pc, #8]	; (16f0 <system_pinmux_pin_set_config+0x2c>)
    16e6:	4798      	blx	r3
}
    16e8:	bd10      	pop	{r4, pc}
    16ea:	46c0      	nop			; (mov r8, r8)
    16ec:	41004400 	.word	0x41004400
    16f0:	0000161d 	.word	0x0000161d

000016f4 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
    16f4:	e7fe      	b.n	16f4 <Dummy_Handler>
	...

000016f8 <Reset_Handler>:
{
    16f8:	b510      	push	{r4, lr}
        if (pSrc != pDest) {
    16fa:	4a26      	ldr	r2, [pc, #152]	; (1794 <Reset_Handler+0x9c>)
    16fc:	4b26      	ldr	r3, [pc, #152]	; (1798 <Reset_Handler+0xa0>)
    16fe:	429a      	cmp	r2, r3
    1700:	d011      	beq.n	1726 <Reset_Handler+0x2e>
                for (; pDest < &_erelocate;) {
    1702:	001a      	movs	r2, r3
    1704:	4b25      	ldr	r3, [pc, #148]	; (179c <Reset_Handler+0xa4>)
    1706:	429a      	cmp	r2, r3
    1708:	d20d      	bcs.n	1726 <Reset_Handler+0x2e>
    170a:	4a25      	ldr	r2, [pc, #148]	; (17a0 <Reset_Handler+0xa8>)
    170c:	3303      	adds	r3, #3
    170e:	1a9b      	subs	r3, r3, r2
    1710:	089b      	lsrs	r3, r3, #2
    1712:	3301      	adds	r3, #1
    1714:	009b      	lsls	r3, r3, #2
    1716:	2200      	movs	r2, #0
                        *pDest++ = *pSrc++;
    1718:	481f      	ldr	r0, [pc, #124]	; (1798 <Reset_Handler+0xa0>)
    171a:	491e      	ldr	r1, [pc, #120]	; (1794 <Reset_Handler+0x9c>)
    171c:	588c      	ldr	r4, [r1, r2]
    171e:	5084      	str	r4, [r0, r2]
    1720:	3204      	adds	r2, #4
                for (; pDest < &_erelocate;) {
    1722:	429a      	cmp	r2, r3
    1724:	d1fa      	bne.n	171c <Reset_Handler+0x24>
        for (pDest = &_szero; pDest < &_ezero;) {
    1726:	4a1f      	ldr	r2, [pc, #124]	; (17a4 <Reset_Handler+0xac>)
    1728:	4b1f      	ldr	r3, [pc, #124]	; (17a8 <Reset_Handler+0xb0>)
    172a:	429a      	cmp	r2, r3
    172c:	d20a      	bcs.n	1744 <Reset_Handler+0x4c>
    172e:	43d3      	mvns	r3, r2
    1730:	491d      	ldr	r1, [pc, #116]	; (17a8 <Reset_Handler+0xb0>)
    1732:	185b      	adds	r3, r3, r1
    1734:	2103      	movs	r1, #3
    1736:	438b      	bics	r3, r1
    1738:	3304      	adds	r3, #4
    173a:	189b      	adds	r3, r3, r2
                *pDest++ = 0;
    173c:	2100      	movs	r1, #0
    173e:	c202      	stmia	r2!, {r1}
        for (pDest = &_szero; pDest < &_ezero;) {
    1740:	4293      	cmp	r3, r2
    1742:	d1fc      	bne.n	173e <Reset_Handler+0x46>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
    1744:	4a19      	ldr	r2, [pc, #100]	; (17ac <Reset_Handler+0xb4>)
    1746:	21ff      	movs	r1, #255	; 0xff
    1748:	4b19      	ldr	r3, [pc, #100]	; (17b0 <Reset_Handler+0xb8>)
    174a:	438b      	bics	r3, r1
    174c:	6093      	str	r3, [r2, #8]
        SBMATRIX->SFR[SBMATRIX_SLAVE_HMCRAMC0].reg = 2;
    174e:	39fd      	subs	r1, #253	; 0xfd
    1750:	2390      	movs	r3, #144	; 0x90
    1752:	005b      	lsls	r3, r3, #1
    1754:	4a17      	ldr	r2, [pc, #92]	; (17b4 <Reset_Handler+0xbc>)
    1756:	50d1      	str	r1, [r2, r3]
        DMAC->QOSCTRL.bit.DQOS = 2;
    1758:	4b17      	ldr	r3, [pc, #92]	; (17b8 <Reset_Handler+0xc0>)
    175a:	7b9a      	ldrb	r2, [r3, #14]
    175c:	312e      	adds	r1, #46	; 0x2e
    175e:	438a      	bics	r2, r1
    1760:	2120      	movs	r1, #32
    1762:	430a      	orrs	r2, r1
    1764:	739a      	strb	r2, [r3, #14]
        DMAC->QOSCTRL.bit.FQOS = 2;
    1766:	7b9a      	ldrb	r2, [r3, #14]
    1768:	210c      	movs	r1, #12
    176a:	438a      	bics	r2, r1
    176c:	2108      	movs	r1, #8
    176e:	430a      	orrs	r2, r1
    1770:	739a      	strb	r2, [r3, #14]
        DMAC->QOSCTRL.bit.WRBQOS = 2;
    1772:	7b9a      	ldrb	r2, [r3, #14]
    1774:	2103      	movs	r1, #3
    1776:	438a      	bics	r2, r1
    1778:	2102      	movs	r1, #2
    177a:	430a      	orrs	r2, r1
    177c:	739a      	strb	r2, [r3, #14]
        NVMCTRL->CTRLB.bit.MANW = 1;
    177e:	4a0f      	ldr	r2, [pc, #60]	; (17bc <Reset_Handler+0xc4>)
    1780:	6853      	ldr	r3, [r2, #4]
    1782:	2180      	movs	r1, #128	; 0x80
    1784:	430b      	orrs	r3, r1
    1786:	6053      	str	r3, [r2, #4]
        __libc_init_array();
    1788:	4b0d      	ldr	r3, [pc, #52]	; (17c0 <Reset_Handler+0xc8>)
    178a:	4798      	blx	r3
        main();
    178c:	4b0d      	ldr	r3, [pc, #52]	; (17c4 <Reset_Handler+0xcc>)
    178e:	4798      	blx	r3
    1790:	e7fe      	b.n	1790 <Reset_Handler+0x98>
    1792:	46c0      	nop			; (mov r8, r8)
    1794:	00006564 	.word	0x00006564
    1798:	20000000 	.word	0x20000000
    179c:	200001e8 	.word	0x200001e8
    17a0:	20000004 	.word	0x20000004
    17a4:	200001e8 	.word	0x200001e8
    17a8:	200002ac 	.word	0x200002ac
    17ac:	e000ed00 	.word	0xe000ed00
    17b0:	00000000 	.word	0x00000000
    17b4:	41007000 	.word	0x41007000
    17b8:	41004800 	.word	0x41004800
    17bc:	41004000 	.word	0x41004000
    17c0:	00001815 	.word	0x00001815
    17c4:	0000048d 	.word	0x0000048d

000017c8 <SystemInit>:
 *         Initialize the System and update the SystemCoreClock variable.
 */
void SystemInit(void)
{
	// Keep the default device state after reset
	SystemCoreClock = __SYSTEM_CLOCK;
    17c8:	4a01      	ldr	r2, [pc, #4]	; (17d0 <SystemInit+0x8>)
    17ca:	4b02      	ldr	r3, [pc, #8]	; (17d4 <SystemInit+0xc>)
    17cc:	601a      	str	r2, [r3, #0]
	return;
}
    17ce:	4770      	bx	lr
    17d0:	000f4240 	.word	0x000f4240
    17d4:	20000014 	.word	0x20000014

000017d8 <_sbrk>:
extern void _exit(int status);
extern void _kill(int pid, int sig);
extern int _getpid(void);

extern caddr_t _sbrk(int incr)
{
    17d8:	0003      	movs	r3, r0
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;

	if (heap == NULL) {
    17da:	4a06      	ldr	r2, [pc, #24]	; (17f4 <_sbrk+0x1c>)
    17dc:	6812      	ldr	r2, [r2, #0]
    17de:	2a00      	cmp	r2, #0
    17e0:	d004      	beq.n	17ec <_sbrk+0x14>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
    17e2:	4a04      	ldr	r2, [pc, #16]	; (17f4 <_sbrk+0x1c>)
    17e4:	6810      	ldr	r0, [r2, #0]

	heap += incr;
    17e6:	18c3      	adds	r3, r0, r3
    17e8:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap;
}
    17ea:	4770      	bx	lr
		heap = (unsigned char *)&_end;
    17ec:	4902      	ldr	r1, [pc, #8]	; (17f8 <_sbrk+0x20>)
    17ee:	4a01      	ldr	r2, [pc, #4]	; (17f4 <_sbrk+0x1c>)
    17f0:	6011      	str	r1, [r2, #0]
    17f2:	e7f6      	b.n	17e2 <_sbrk+0xa>
    17f4:	20000290 	.word	0x20000290
    17f8:	20000ab0 	.word	0x20000ab0

000017fc <_close>:
}

extern int _close(int file)
{
	return -1;
}
    17fc:	2001      	movs	r0, #1
    17fe:	4240      	negs	r0, r0
    1800:	4770      	bx	lr

00001802 <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
    1802:	2380      	movs	r3, #128	; 0x80
    1804:	019b      	lsls	r3, r3, #6
    1806:	604b      	str	r3, [r1, #4]

	return 0;
}
    1808:	2000      	movs	r0, #0
    180a:	4770      	bx	lr

0000180c <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
    180c:	2001      	movs	r0, #1
    180e:	4770      	bx	lr

00001810 <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
    1810:	2000      	movs	r0, #0
    1812:	4770      	bx	lr

00001814 <__libc_init_array>:
    1814:	b570      	push	{r4, r5, r6, lr}
    1816:	2600      	movs	r6, #0
    1818:	4d0c      	ldr	r5, [pc, #48]	; (184c <__libc_init_array+0x38>)
    181a:	4c0d      	ldr	r4, [pc, #52]	; (1850 <__libc_init_array+0x3c>)
    181c:	1b64      	subs	r4, r4, r5
    181e:	10a4      	asrs	r4, r4, #2
    1820:	42a6      	cmp	r6, r4
    1822:	d109      	bne.n	1838 <__libc_init_array+0x24>
    1824:	2600      	movs	r6, #0
    1826:	f004 fe8b 	bl	6540 <_init>
    182a:	4d0a      	ldr	r5, [pc, #40]	; (1854 <__libc_init_array+0x40>)
    182c:	4c0a      	ldr	r4, [pc, #40]	; (1858 <__libc_init_array+0x44>)
    182e:	1b64      	subs	r4, r4, r5
    1830:	10a4      	asrs	r4, r4, #2
    1832:	42a6      	cmp	r6, r4
    1834:	d105      	bne.n	1842 <__libc_init_array+0x2e>
    1836:	bd70      	pop	{r4, r5, r6, pc}
    1838:	00b3      	lsls	r3, r6, #2
    183a:	58eb      	ldr	r3, [r5, r3]
    183c:	4798      	blx	r3
    183e:	3601      	adds	r6, #1
    1840:	e7ee      	b.n	1820 <__libc_init_array+0xc>
    1842:	00b3      	lsls	r3, r6, #2
    1844:	58eb      	ldr	r3, [r5, r3]
    1846:	4798      	blx	r3
    1848:	3601      	adds	r6, #1
    184a:	e7f2      	b.n	1832 <__libc_init_array+0x1e>
    184c:	0000654c 	.word	0x0000654c
    1850:	0000654c 	.word	0x0000654c
    1854:	0000654c 	.word	0x0000654c
    1858:	00006554 	.word	0x00006554

0000185c <memset>:
    185c:	0003      	movs	r3, r0
    185e:	1882      	adds	r2, r0, r2
    1860:	4293      	cmp	r3, r2
    1862:	d100      	bne.n	1866 <memset+0xa>
    1864:	4770      	bx	lr
    1866:	7019      	strb	r1, [r3, #0]
    1868:	3301      	adds	r3, #1
    186a:	e7f9      	b.n	1860 <memset+0x4>

0000186c <__cvt>:
    186c:	b5f0      	push	{r4, r5, r6, r7, lr}
    186e:	b08b      	sub	sp, #44	; 0x2c
    1870:	0014      	movs	r4, r2
    1872:	1e1d      	subs	r5, r3, #0
    1874:	9912      	ldr	r1, [sp, #72]	; 0x48
    1876:	da53      	bge.n	1920 <__cvt+0xb4>
    1878:	2480      	movs	r4, #128	; 0x80
    187a:	0624      	lsls	r4, r4, #24
    187c:	191b      	adds	r3, r3, r4
    187e:	001d      	movs	r5, r3
    1880:	0014      	movs	r4, r2
    1882:	232d      	movs	r3, #45	; 0x2d
    1884:	700b      	strb	r3, [r1, #0]
    1886:	2320      	movs	r3, #32
    1888:	9e14      	ldr	r6, [sp, #80]	; 0x50
    188a:	2203      	movs	r2, #3
    188c:	439e      	bics	r6, r3
    188e:	2e46      	cmp	r6, #70	; 0x46
    1890:	d007      	beq.n	18a2 <__cvt+0x36>
    1892:	0033      	movs	r3, r6
    1894:	3b45      	subs	r3, #69	; 0x45
    1896:	4259      	negs	r1, r3
    1898:	414b      	adcs	r3, r1
    189a:	9910      	ldr	r1, [sp, #64]	; 0x40
    189c:	3a01      	subs	r2, #1
    189e:	18cb      	adds	r3, r1, r3
    18a0:	9310      	str	r3, [sp, #64]	; 0x40
    18a2:	ab09      	add	r3, sp, #36	; 0x24
    18a4:	9304      	str	r3, [sp, #16]
    18a6:	ab08      	add	r3, sp, #32
    18a8:	9303      	str	r3, [sp, #12]
    18aa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    18ac:	9200      	str	r2, [sp, #0]
    18ae:	9302      	str	r3, [sp, #8]
    18b0:	9b10      	ldr	r3, [sp, #64]	; 0x40
    18b2:	0022      	movs	r2, r4
    18b4:	9301      	str	r3, [sp, #4]
    18b6:	002b      	movs	r3, r5
    18b8:	f000 feda 	bl	2670 <_dtoa_r>
    18bc:	0007      	movs	r7, r0
    18be:	2e47      	cmp	r6, #71	; 0x47
    18c0:	d102      	bne.n	18c8 <__cvt+0x5c>
    18c2:	9b11      	ldr	r3, [sp, #68]	; 0x44
    18c4:	07db      	lsls	r3, r3, #31
    18c6:	d524      	bpl.n	1912 <__cvt+0xa6>
    18c8:	9b10      	ldr	r3, [sp, #64]	; 0x40
    18ca:	18fb      	adds	r3, r7, r3
    18cc:	9307      	str	r3, [sp, #28]
    18ce:	2e46      	cmp	r6, #70	; 0x46
    18d0:	d114      	bne.n	18fc <__cvt+0x90>
    18d2:	783b      	ldrb	r3, [r7, #0]
    18d4:	2b30      	cmp	r3, #48	; 0x30
    18d6:	d10c      	bne.n	18f2 <__cvt+0x86>
    18d8:	2200      	movs	r2, #0
    18da:	2300      	movs	r3, #0
    18dc:	0020      	movs	r0, r4
    18de:	0029      	movs	r1, r5
    18e0:	f002 fe28 	bl	4534 <__aeabi_dcmpeq>
    18e4:	2800      	cmp	r0, #0
    18e6:	d104      	bne.n	18f2 <__cvt+0x86>
    18e8:	2301      	movs	r3, #1
    18ea:	9a10      	ldr	r2, [sp, #64]	; 0x40
    18ec:	1a9b      	subs	r3, r3, r2
    18ee:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    18f0:	6013      	str	r3, [r2, #0]
    18f2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    18f4:	9a07      	ldr	r2, [sp, #28]
    18f6:	681b      	ldr	r3, [r3, #0]
    18f8:	18d3      	adds	r3, r2, r3
    18fa:	9307      	str	r3, [sp, #28]
    18fc:	2200      	movs	r2, #0
    18fe:	2300      	movs	r3, #0
    1900:	0020      	movs	r0, r4
    1902:	0029      	movs	r1, r5
    1904:	f002 fe16 	bl	4534 <__aeabi_dcmpeq>
    1908:	2230      	movs	r2, #48	; 0x30
    190a:	2800      	cmp	r0, #0
    190c:	d00d      	beq.n	192a <__cvt+0xbe>
    190e:	9b07      	ldr	r3, [sp, #28]
    1910:	9309      	str	r3, [sp, #36]	; 0x24
    1912:	0038      	movs	r0, r7
    1914:	9b09      	ldr	r3, [sp, #36]	; 0x24
    1916:	9a15      	ldr	r2, [sp, #84]	; 0x54
    1918:	1bdb      	subs	r3, r3, r7
    191a:	6013      	str	r3, [r2, #0]
    191c:	b00b      	add	sp, #44	; 0x2c
    191e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1920:	2300      	movs	r3, #0
    1922:	e7af      	b.n	1884 <__cvt+0x18>
    1924:	1c59      	adds	r1, r3, #1
    1926:	9109      	str	r1, [sp, #36]	; 0x24
    1928:	701a      	strb	r2, [r3, #0]
    192a:	9b09      	ldr	r3, [sp, #36]	; 0x24
    192c:	9907      	ldr	r1, [sp, #28]
    192e:	4299      	cmp	r1, r3
    1930:	d8f8      	bhi.n	1924 <__cvt+0xb8>
    1932:	e7ee      	b.n	1912 <__cvt+0xa6>

00001934 <__exponent>:
    1934:	b5f0      	push	{r4, r5, r6, r7, lr}
    1936:	232b      	movs	r3, #43	; 0x2b
    1938:	b085      	sub	sp, #20
    193a:	0007      	movs	r7, r0
    193c:	000c      	movs	r4, r1
    193e:	7002      	strb	r2, [r0, #0]
    1940:	1c86      	adds	r6, r0, #2
    1942:	2900      	cmp	r1, #0
    1944:	da01      	bge.n	194a <__exponent+0x16>
    1946:	232d      	movs	r3, #45	; 0x2d
    1948:	424c      	negs	r4, r1
    194a:	707b      	strb	r3, [r7, #1]
    194c:	2c09      	cmp	r4, #9
    194e:	dd23      	ble.n	1998 <__exponent+0x64>
    1950:	ab02      	add	r3, sp, #8
    1952:	1ddd      	adds	r5, r3, #7
    1954:	1e6b      	subs	r3, r5, #1
    1956:	0020      	movs	r0, r4
    1958:	210a      	movs	r1, #10
    195a:	9301      	str	r3, [sp, #4]
    195c:	f002 fdd4 	bl	4508 <__aeabi_idivmod>
    1960:	1e6b      	subs	r3, r5, #1
    1962:	3130      	adds	r1, #48	; 0x30
    1964:	7019      	strb	r1, [r3, #0]
    1966:	0020      	movs	r0, r4
    1968:	210a      	movs	r1, #10
    196a:	f002 fce7 	bl	433c <__divsi3>
    196e:	0004      	movs	r4, r0
    1970:	2809      	cmp	r0, #9
    1972:	dc0a      	bgt.n	198a <__exponent+0x56>
    1974:	3d02      	subs	r5, #2
    1976:	3430      	adds	r4, #48	; 0x30
    1978:	702c      	strb	r4, [r5, #0]
    197a:	ab02      	add	r3, sp, #8
    197c:	3307      	adds	r3, #7
    197e:	0030      	movs	r0, r6
    1980:	42ab      	cmp	r3, r5
    1982:	d804      	bhi.n	198e <__exponent+0x5a>
    1984:	1bc0      	subs	r0, r0, r7
    1986:	b005      	add	sp, #20
    1988:	bdf0      	pop	{r4, r5, r6, r7, pc}
    198a:	9d01      	ldr	r5, [sp, #4]
    198c:	e7e2      	b.n	1954 <__exponent+0x20>
    198e:	782b      	ldrb	r3, [r5, #0]
    1990:	3501      	adds	r5, #1
    1992:	7033      	strb	r3, [r6, #0]
    1994:	3601      	adds	r6, #1
    1996:	e7f0      	b.n	197a <__exponent+0x46>
    1998:	2330      	movs	r3, #48	; 0x30
    199a:	18e4      	adds	r4, r4, r3
    199c:	7033      	strb	r3, [r6, #0]
    199e:	1cb0      	adds	r0, r6, #2
    19a0:	7074      	strb	r4, [r6, #1]
    19a2:	e7ef      	b.n	1984 <__exponent+0x50>

000019a4 <_printf_float>:
    19a4:	b5f0      	push	{r4, r5, r6, r7, lr}
    19a6:	b095      	sub	sp, #84	; 0x54
    19a8:	000c      	movs	r4, r1
    19aa:	920a      	str	r2, [sp, #40]	; 0x28
    19ac:	930b      	str	r3, [sp, #44]	; 0x2c
    19ae:	9d1a      	ldr	r5, [sp, #104]	; 0x68
    19b0:	9009      	str	r0, [sp, #36]	; 0x24
    19b2:	f001 fdd3 	bl	355c <_localeconv_r>
    19b6:	6803      	ldr	r3, [r0, #0]
    19b8:	0018      	movs	r0, r3
    19ba:	930d      	str	r3, [sp, #52]	; 0x34
    19bc:	f000 fd00 	bl	23c0 <strlen>
    19c0:	2300      	movs	r3, #0
    19c2:	9312      	str	r3, [sp, #72]	; 0x48
    19c4:	6823      	ldr	r3, [r4, #0]
    19c6:	900e      	str	r0, [sp, #56]	; 0x38
    19c8:	930c      	str	r3, [sp, #48]	; 0x30
    19ca:	990c      	ldr	r1, [sp, #48]	; 0x30
    19cc:	7e27      	ldrb	r7, [r4, #24]
    19ce:	682b      	ldr	r3, [r5, #0]
    19d0:	2207      	movs	r2, #7
    19d2:	05c9      	lsls	r1, r1, #23
    19d4:	d547      	bpl.n	1a66 <_printf_float+0xc2>
    19d6:	189b      	adds	r3, r3, r2
    19d8:	4393      	bics	r3, r2
    19da:	001a      	movs	r2, r3
    19dc:	3208      	adds	r2, #8
    19de:	602a      	str	r2, [r5, #0]
    19e0:	681a      	ldr	r2, [r3, #0]
    19e2:	685b      	ldr	r3, [r3, #4]
    19e4:	64a2      	str	r2, [r4, #72]	; 0x48
    19e6:	64e3      	str	r3, [r4, #76]	; 0x4c
    19e8:	2201      	movs	r2, #1
    19ea:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
    19ec:	6ca6      	ldr	r6, [r4, #72]	; 0x48
    19ee:	006b      	lsls	r3, r5, #1
    19f0:	085b      	lsrs	r3, r3, #1
    19f2:	930f      	str	r3, [sp, #60]	; 0x3c
    19f4:	4252      	negs	r2, r2
    19f6:	4ba7      	ldr	r3, [pc, #668]	; (1c94 <_printf_float+0x2f0>)
    19f8:	0030      	movs	r0, r6
    19fa:	990f      	ldr	r1, [sp, #60]	; 0x3c
    19fc:	f004 facc 	bl	5f98 <__aeabi_dcmpun>
    1a00:	2800      	cmp	r0, #0
    1a02:	d000      	beq.n	1a06 <_printf_float+0x62>
    1a04:	e206      	b.n	1e14 <_printf_float+0x470>
    1a06:	2201      	movs	r2, #1
    1a08:	4ba2      	ldr	r3, [pc, #648]	; (1c94 <_printf_float+0x2f0>)
    1a0a:	4252      	negs	r2, r2
    1a0c:	0030      	movs	r0, r6
    1a0e:	990f      	ldr	r1, [sp, #60]	; 0x3c
    1a10:	f002 fda0 	bl	4554 <__aeabi_dcmple>
    1a14:	2800      	cmp	r0, #0
    1a16:	d000      	beq.n	1a1a <_printf_float+0x76>
    1a18:	e1fc      	b.n	1e14 <_printf_float+0x470>
    1a1a:	2200      	movs	r2, #0
    1a1c:	2300      	movs	r3, #0
    1a1e:	0030      	movs	r0, r6
    1a20:	0029      	movs	r1, r5
    1a22:	f002 fd8d 	bl	4540 <__aeabi_dcmplt>
    1a26:	2800      	cmp	r0, #0
    1a28:	d003      	beq.n	1a32 <_printf_float+0x8e>
    1a2a:	0023      	movs	r3, r4
    1a2c:	222d      	movs	r2, #45	; 0x2d
    1a2e:	3343      	adds	r3, #67	; 0x43
    1a30:	701a      	strb	r2, [r3, #0]
    1a32:	4d99      	ldr	r5, [pc, #612]	; (1c98 <_printf_float+0x2f4>)
    1a34:	2f47      	cmp	r7, #71	; 0x47
    1a36:	d800      	bhi.n	1a3a <_printf_float+0x96>
    1a38:	4d98      	ldr	r5, [pc, #608]	; (1c9c <_printf_float+0x2f8>)
    1a3a:	2303      	movs	r3, #3
    1a3c:	2600      	movs	r6, #0
    1a3e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    1a40:	6123      	str	r3, [r4, #16]
    1a42:	3301      	adds	r3, #1
    1a44:	439a      	bics	r2, r3
    1a46:	6022      	str	r2, [r4, #0]
    1a48:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    1a4a:	aa13      	add	r2, sp, #76	; 0x4c
    1a4c:	9300      	str	r3, [sp, #0]
    1a4e:	0021      	movs	r1, r4
    1a50:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    1a52:	9809      	ldr	r0, [sp, #36]	; 0x24
    1a54:	f000 f9f2 	bl	1e3c <_printf_common>
    1a58:	1c43      	adds	r3, r0, #1
    1a5a:	d000      	beq.n	1a5e <_printf_float+0xba>
    1a5c:	e09c      	b.n	1b98 <_printf_float+0x1f4>
    1a5e:	2001      	movs	r0, #1
    1a60:	4240      	negs	r0, r0
    1a62:	b015      	add	sp, #84	; 0x54
    1a64:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1a66:	3307      	adds	r3, #7
    1a68:	e7b6      	b.n	19d8 <_printf_float+0x34>
    1a6a:	2380      	movs	r3, #128	; 0x80
    1a6c:	6862      	ldr	r2, [r4, #4]
    1a6e:	00db      	lsls	r3, r3, #3
    1a70:	1c51      	adds	r1, r2, #1
    1a72:	d145      	bne.n	1b00 <_printf_float+0x15c>
    1a74:	3207      	adds	r2, #7
    1a76:	6062      	str	r2, [r4, #4]
    1a78:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    1a7a:	2100      	movs	r1, #0
    1a7c:	4313      	orrs	r3, r2
    1a7e:	aa12      	add	r2, sp, #72	; 0x48
    1a80:	9205      	str	r2, [sp, #20]
    1a82:	aa11      	add	r2, sp, #68	; 0x44
    1a84:	9203      	str	r2, [sp, #12]
    1a86:	2223      	movs	r2, #35	; 0x23
    1a88:	6023      	str	r3, [r4, #0]
    1a8a:	9106      	str	r1, [sp, #24]
    1a8c:	9301      	str	r3, [sp, #4]
    1a8e:	a908      	add	r1, sp, #32
    1a90:	6863      	ldr	r3, [r4, #4]
    1a92:	1852      	adds	r2, r2, r1
    1a94:	9202      	str	r2, [sp, #8]
    1a96:	9300      	str	r3, [sp, #0]
    1a98:	0032      	movs	r2, r6
    1a9a:	002b      	movs	r3, r5
    1a9c:	9704      	str	r7, [sp, #16]
    1a9e:	9809      	ldr	r0, [sp, #36]	; 0x24
    1aa0:	f7ff fee4 	bl	186c <__cvt>
    1aa4:	2320      	movs	r3, #32
    1aa6:	003a      	movs	r2, r7
    1aa8:	0005      	movs	r5, r0
    1aaa:	439a      	bics	r2, r3
    1aac:	2a47      	cmp	r2, #71	; 0x47
    1aae:	d107      	bne.n	1ac0 <_printf_float+0x11c>
    1ab0:	9b11      	ldr	r3, [sp, #68]	; 0x44
    1ab2:	1cda      	adds	r2, r3, #3
    1ab4:	db02      	blt.n	1abc <_printf_float+0x118>
    1ab6:	6862      	ldr	r2, [r4, #4]
    1ab8:	4293      	cmp	r3, r2
    1aba:	dd5b      	ble.n	1b74 <_printf_float+0x1d0>
    1abc:	3f02      	subs	r7, #2
    1abe:	b2ff      	uxtb	r7, r7
    1ac0:	9911      	ldr	r1, [sp, #68]	; 0x44
    1ac2:	2f65      	cmp	r7, #101	; 0x65
    1ac4:	d83b      	bhi.n	1b3e <_printf_float+0x19a>
    1ac6:	0020      	movs	r0, r4
    1ac8:	3901      	subs	r1, #1
    1aca:	003a      	movs	r2, r7
    1acc:	3050      	adds	r0, #80	; 0x50
    1ace:	9111      	str	r1, [sp, #68]	; 0x44
    1ad0:	f7ff ff30 	bl	1934 <__exponent>
    1ad4:	9a12      	ldr	r2, [sp, #72]	; 0x48
    1ad6:	0006      	movs	r6, r0
    1ad8:	1883      	adds	r3, r0, r2
    1ada:	6123      	str	r3, [r4, #16]
    1adc:	2a01      	cmp	r2, #1
    1ade:	dc02      	bgt.n	1ae6 <_printf_float+0x142>
    1ae0:	6822      	ldr	r2, [r4, #0]
    1ae2:	07d2      	lsls	r2, r2, #31
    1ae4:	d501      	bpl.n	1aea <_printf_float+0x146>
    1ae6:	3301      	adds	r3, #1
    1ae8:	6123      	str	r3, [r4, #16]
    1aea:	2323      	movs	r3, #35	; 0x23
    1aec:	aa08      	add	r2, sp, #32
    1aee:	189b      	adds	r3, r3, r2
    1af0:	781b      	ldrb	r3, [r3, #0]
    1af2:	2b00      	cmp	r3, #0
    1af4:	d0a8      	beq.n	1a48 <_printf_float+0xa4>
    1af6:	0023      	movs	r3, r4
    1af8:	222d      	movs	r2, #45	; 0x2d
    1afa:	3343      	adds	r3, #67	; 0x43
    1afc:	701a      	strb	r2, [r3, #0]
    1afe:	e7a3      	b.n	1a48 <_printf_float+0xa4>
    1b00:	2f67      	cmp	r7, #103	; 0x67
    1b02:	d001      	beq.n	1b08 <_printf_float+0x164>
    1b04:	2f47      	cmp	r7, #71	; 0x47
    1b06:	d1b7      	bne.n	1a78 <_printf_float+0xd4>
    1b08:	2a00      	cmp	r2, #0
    1b0a:	d016      	beq.n	1b3a <_printf_float+0x196>
    1b0c:	990c      	ldr	r1, [sp, #48]	; 0x30
    1b0e:	a808      	add	r0, sp, #32
    1b10:	430b      	orrs	r3, r1
    1b12:	2100      	movs	r1, #0
    1b14:	9106      	str	r1, [sp, #24]
    1b16:	a912      	add	r1, sp, #72	; 0x48
    1b18:	9105      	str	r1, [sp, #20]
    1b1a:	a911      	add	r1, sp, #68	; 0x44
    1b1c:	9103      	str	r1, [sp, #12]
    1b1e:	2123      	movs	r1, #35	; 0x23
    1b20:	1809      	adds	r1, r1, r0
    1b22:	6023      	str	r3, [r4, #0]
    1b24:	9301      	str	r3, [sp, #4]
    1b26:	9200      	str	r2, [sp, #0]
    1b28:	002b      	movs	r3, r5
    1b2a:	9704      	str	r7, [sp, #16]
    1b2c:	9102      	str	r1, [sp, #8]
    1b2e:	0032      	movs	r2, r6
    1b30:	9809      	ldr	r0, [sp, #36]	; 0x24
    1b32:	f7ff fe9b 	bl	186c <__cvt>
    1b36:	0005      	movs	r5, r0
    1b38:	e7ba      	b.n	1ab0 <_printf_float+0x10c>
    1b3a:	2201      	movs	r2, #1
    1b3c:	e79b      	b.n	1a76 <_printf_float+0xd2>
    1b3e:	2f66      	cmp	r7, #102	; 0x66
    1b40:	d119      	bne.n	1b76 <_printf_float+0x1d2>
    1b42:	6863      	ldr	r3, [r4, #4]
    1b44:	2900      	cmp	r1, #0
    1b46:	dd0c      	ble.n	1b62 <_printf_float+0x1be>
    1b48:	6121      	str	r1, [r4, #16]
    1b4a:	2b00      	cmp	r3, #0
    1b4c:	d102      	bne.n	1b54 <_printf_float+0x1b0>
    1b4e:	6822      	ldr	r2, [r4, #0]
    1b50:	07d2      	lsls	r2, r2, #31
    1b52:	d502      	bpl.n	1b5a <_printf_float+0x1b6>
    1b54:	3301      	adds	r3, #1
    1b56:	185b      	adds	r3, r3, r1
    1b58:	6123      	str	r3, [r4, #16]
    1b5a:	9b11      	ldr	r3, [sp, #68]	; 0x44
    1b5c:	2600      	movs	r6, #0
    1b5e:	65a3      	str	r3, [r4, #88]	; 0x58
    1b60:	e7c3      	b.n	1aea <_printf_float+0x146>
    1b62:	2b00      	cmp	r3, #0
    1b64:	d103      	bne.n	1b6e <_printf_float+0x1ca>
    1b66:	2201      	movs	r2, #1
    1b68:	6821      	ldr	r1, [r4, #0]
    1b6a:	4211      	tst	r1, r2
    1b6c:	d000      	beq.n	1b70 <_printf_float+0x1cc>
    1b6e:	1c9a      	adds	r2, r3, #2
    1b70:	6122      	str	r2, [r4, #16]
    1b72:	e7f2      	b.n	1b5a <_printf_float+0x1b6>
    1b74:	2767      	movs	r7, #103	; 0x67
    1b76:	9b11      	ldr	r3, [sp, #68]	; 0x44
    1b78:	9812      	ldr	r0, [sp, #72]	; 0x48
    1b7a:	4283      	cmp	r3, r0
    1b7c:	db05      	blt.n	1b8a <_printf_float+0x1e6>
    1b7e:	6822      	ldr	r2, [r4, #0]
    1b80:	6123      	str	r3, [r4, #16]
    1b82:	07d2      	lsls	r2, r2, #31
    1b84:	d5e9      	bpl.n	1b5a <_printf_float+0x1b6>
    1b86:	3301      	adds	r3, #1
    1b88:	e7e6      	b.n	1b58 <_printf_float+0x1b4>
    1b8a:	2201      	movs	r2, #1
    1b8c:	2b00      	cmp	r3, #0
    1b8e:	dc01      	bgt.n	1b94 <_printf_float+0x1f0>
    1b90:	1892      	adds	r2, r2, r2
    1b92:	1ad2      	subs	r2, r2, r3
    1b94:	1812      	adds	r2, r2, r0
    1b96:	e7eb      	b.n	1b70 <_printf_float+0x1cc>
    1b98:	6822      	ldr	r2, [r4, #0]
    1b9a:	0553      	lsls	r3, r2, #21
    1b9c:	d408      	bmi.n	1bb0 <_printf_float+0x20c>
    1b9e:	6923      	ldr	r3, [r4, #16]
    1ba0:	002a      	movs	r2, r5
    1ba2:	990a      	ldr	r1, [sp, #40]	; 0x28
    1ba4:	9809      	ldr	r0, [sp, #36]	; 0x24
    1ba6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    1ba8:	47a8      	blx	r5
    1baa:	1c43      	adds	r3, r0, #1
    1bac:	d129      	bne.n	1c02 <_printf_float+0x25e>
    1bae:	e756      	b.n	1a5e <_printf_float+0xba>
    1bb0:	2f65      	cmp	r7, #101	; 0x65
    1bb2:	d800      	bhi.n	1bb6 <_printf_float+0x212>
    1bb4:	e0dc      	b.n	1d70 <_printf_float+0x3cc>
    1bb6:	6ca0      	ldr	r0, [r4, #72]	; 0x48
    1bb8:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
    1bba:	2200      	movs	r2, #0
    1bbc:	2300      	movs	r3, #0
    1bbe:	f002 fcb9 	bl	4534 <__aeabi_dcmpeq>
    1bc2:	2800      	cmp	r0, #0
    1bc4:	d035      	beq.n	1c32 <_printf_float+0x28e>
    1bc6:	2301      	movs	r3, #1
    1bc8:	4a35      	ldr	r2, [pc, #212]	; (1ca0 <_printf_float+0x2fc>)
    1bca:	990a      	ldr	r1, [sp, #40]	; 0x28
    1bcc:	9809      	ldr	r0, [sp, #36]	; 0x24
    1bce:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    1bd0:	47a8      	blx	r5
    1bd2:	1c43      	adds	r3, r0, #1
    1bd4:	d100      	bne.n	1bd8 <_printf_float+0x234>
    1bd6:	e742      	b.n	1a5e <_printf_float+0xba>
    1bd8:	9b11      	ldr	r3, [sp, #68]	; 0x44
    1bda:	9a12      	ldr	r2, [sp, #72]	; 0x48
    1bdc:	4293      	cmp	r3, r2
    1bde:	db02      	blt.n	1be6 <_printf_float+0x242>
    1be0:	6823      	ldr	r3, [r4, #0]
    1be2:	07db      	lsls	r3, r3, #31
    1be4:	d50d      	bpl.n	1c02 <_printf_float+0x25e>
    1be6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    1be8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    1bea:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    1bec:	990a      	ldr	r1, [sp, #40]	; 0x28
    1bee:	9809      	ldr	r0, [sp, #36]	; 0x24
    1bf0:	47a8      	blx	r5
    1bf2:	2500      	movs	r5, #0
    1bf4:	1c43      	adds	r3, r0, #1
    1bf6:	d100      	bne.n	1bfa <_printf_float+0x256>
    1bf8:	e731      	b.n	1a5e <_printf_float+0xba>
    1bfa:	9b12      	ldr	r3, [sp, #72]	; 0x48
    1bfc:	3b01      	subs	r3, #1
    1bfe:	429d      	cmp	r5, r3
    1c00:	db0b      	blt.n	1c1a <_printf_float+0x276>
    1c02:	6823      	ldr	r3, [r4, #0]
    1c04:	2500      	movs	r5, #0
    1c06:	079b      	lsls	r3, r3, #30
    1c08:	d500      	bpl.n	1c0c <_printf_float+0x268>
    1c0a:	e0fd      	b.n	1e08 <_printf_float+0x464>
    1c0c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    1c0e:	68e0      	ldr	r0, [r4, #12]
    1c10:	4298      	cmp	r0, r3
    1c12:	db00      	blt.n	1c16 <_printf_float+0x272>
    1c14:	e725      	b.n	1a62 <_printf_float+0xbe>
    1c16:	0018      	movs	r0, r3
    1c18:	e723      	b.n	1a62 <_printf_float+0xbe>
    1c1a:	0022      	movs	r2, r4
    1c1c:	2301      	movs	r3, #1
    1c1e:	321a      	adds	r2, #26
    1c20:	990a      	ldr	r1, [sp, #40]	; 0x28
    1c22:	9809      	ldr	r0, [sp, #36]	; 0x24
    1c24:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
    1c26:	47b0      	blx	r6
    1c28:	1c43      	adds	r3, r0, #1
    1c2a:	d100      	bne.n	1c2e <_printf_float+0x28a>
    1c2c:	e717      	b.n	1a5e <_printf_float+0xba>
    1c2e:	3501      	adds	r5, #1
    1c30:	e7e3      	b.n	1bfa <_printf_float+0x256>
    1c32:	9b11      	ldr	r3, [sp, #68]	; 0x44
    1c34:	2b00      	cmp	r3, #0
    1c36:	dc35      	bgt.n	1ca4 <_printf_float+0x300>
    1c38:	2301      	movs	r3, #1
    1c3a:	4a19      	ldr	r2, [pc, #100]	; (1ca0 <_printf_float+0x2fc>)
    1c3c:	990a      	ldr	r1, [sp, #40]	; 0x28
    1c3e:	9809      	ldr	r0, [sp, #36]	; 0x24
    1c40:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
    1c42:	47b0      	blx	r6
    1c44:	1c43      	adds	r3, r0, #1
    1c46:	d100      	bne.n	1c4a <_printf_float+0x2a6>
    1c48:	e709      	b.n	1a5e <_printf_float+0xba>
    1c4a:	9b11      	ldr	r3, [sp, #68]	; 0x44
    1c4c:	2b00      	cmp	r3, #0
    1c4e:	d105      	bne.n	1c5c <_printf_float+0x2b8>
    1c50:	9b12      	ldr	r3, [sp, #72]	; 0x48
    1c52:	2b00      	cmp	r3, #0
    1c54:	d102      	bne.n	1c5c <_printf_float+0x2b8>
    1c56:	6823      	ldr	r3, [r4, #0]
    1c58:	07db      	lsls	r3, r3, #31
    1c5a:	d5d2      	bpl.n	1c02 <_printf_float+0x25e>
    1c5c:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
    1c5e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    1c60:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    1c62:	990a      	ldr	r1, [sp, #40]	; 0x28
    1c64:	9809      	ldr	r0, [sp, #36]	; 0x24
    1c66:	47b0      	blx	r6
    1c68:	2600      	movs	r6, #0
    1c6a:	1c43      	adds	r3, r0, #1
    1c6c:	d100      	bne.n	1c70 <_printf_float+0x2cc>
    1c6e:	e6f6      	b.n	1a5e <_printf_float+0xba>
    1c70:	9b11      	ldr	r3, [sp, #68]	; 0x44
    1c72:	425b      	negs	r3, r3
    1c74:	429e      	cmp	r6, r3
    1c76:	db01      	blt.n	1c7c <_printf_float+0x2d8>
    1c78:	9b12      	ldr	r3, [sp, #72]	; 0x48
    1c7a:	e791      	b.n	1ba0 <_printf_float+0x1fc>
    1c7c:	0022      	movs	r2, r4
    1c7e:	2301      	movs	r3, #1
    1c80:	321a      	adds	r2, #26
    1c82:	990a      	ldr	r1, [sp, #40]	; 0x28
    1c84:	9809      	ldr	r0, [sp, #36]	; 0x24
    1c86:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
    1c88:	47b8      	blx	r7
    1c8a:	1c43      	adds	r3, r0, #1
    1c8c:	d100      	bne.n	1c90 <_printf_float+0x2ec>
    1c8e:	e6e6      	b.n	1a5e <_printf_float+0xba>
    1c90:	3601      	adds	r6, #1
    1c92:	e7ed      	b.n	1c70 <_printf_float+0x2cc>
    1c94:	7fefffff 	.word	0x7fefffff
    1c98:	00006208 	.word	0x00006208
    1c9c:	00006204 	.word	0x00006204
    1ca0:	00006214 	.word	0x00006214
    1ca4:	6da3      	ldr	r3, [r4, #88]	; 0x58
    1ca6:	9e12      	ldr	r6, [sp, #72]	; 0x48
    1ca8:	429e      	cmp	r6, r3
    1caa:	dd00      	ble.n	1cae <_printf_float+0x30a>
    1cac:	001e      	movs	r6, r3
    1cae:	2e00      	cmp	r6, #0
    1cb0:	dc35      	bgt.n	1d1e <_printf_float+0x37a>
    1cb2:	2300      	movs	r3, #0
    1cb4:	930c      	str	r3, [sp, #48]	; 0x30
    1cb6:	43f3      	mvns	r3, r6
    1cb8:	17db      	asrs	r3, r3, #31
    1cba:	930f      	str	r3, [sp, #60]	; 0x3c
    1cbc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    1cbe:	6da7      	ldr	r7, [r4, #88]	; 0x58
    1cc0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    1cc2:	4033      	ands	r3, r6
    1cc4:	1afb      	subs	r3, r7, r3
    1cc6:	429a      	cmp	r2, r3
    1cc8:	db32      	blt.n	1d30 <_printf_float+0x38c>
    1cca:	9b11      	ldr	r3, [sp, #68]	; 0x44
    1ccc:	9a12      	ldr	r2, [sp, #72]	; 0x48
    1cce:	4293      	cmp	r3, r2
    1cd0:	db3c      	blt.n	1d4c <_printf_float+0x3a8>
    1cd2:	6823      	ldr	r3, [r4, #0]
    1cd4:	07db      	lsls	r3, r3, #31
    1cd6:	d439      	bmi.n	1d4c <_printf_float+0x3a8>
    1cd8:	9e12      	ldr	r6, [sp, #72]	; 0x48
    1cda:	9a11      	ldr	r2, [sp, #68]	; 0x44
    1cdc:	1bf3      	subs	r3, r6, r7
    1cde:	1ab6      	subs	r6, r6, r2
    1ce0:	429e      	cmp	r6, r3
    1ce2:	dd00      	ble.n	1ce6 <_printf_float+0x342>
    1ce4:	001e      	movs	r6, r3
    1ce6:	2e00      	cmp	r6, #0
    1ce8:	dc39      	bgt.n	1d5e <_printf_float+0x3ba>
    1cea:	43f7      	mvns	r7, r6
    1cec:	2500      	movs	r5, #0
    1cee:	17fb      	asrs	r3, r7, #31
    1cf0:	930c      	str	r3, [sp, #48]	; 0x30
    1cf2:	9a11      	ldr	r2, [sp, #68]	; 0x44
    1cf4:	9b12      	ldr	r3, [sp, #72]	; 0x48
    1cf6:	990c      	ldr	r1, [sp, #48]	; 0x30
    1cf8:	1a9b      	subs	r3, r3, r2
    1cfa:	0032      	movs	r2, r6
    1cfc:	400a      	ands	r2, r1
    1cfe:	1a9b      	subs	r3, r3, r2
    1d00:	429d      	cmp	r5, r3
    1d02:	db00      	blt.n	1d06 <_printf_float+0x362>
    1d04:	e77d      	b.n	1c02 <_printf_float+0x25e>
    1d06:	0022      	movs	r2, r4
    1d08:	2301      	movs	r3, #1
    1d0a:	321a      	adds	r2, #26
    1d0c:	990a      	ldr	r1, [sp, #40]	; 0x28
    1d0e:	9809      	ldr	r0, [sp, #36]	; 0x24
    1d10:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
    1d12:	47b8      	blx	r7
    1d14:	1c43      	adds	r3, r0, #1
    1d16:	d100      	bne.n	1d1a <_printf_float+0x376>
    1d18:	e6a1      	b.n	1a5e <_printf_float+0xba>
    1d1a:	3501      	adds	r5, #1
    1d1c:	e7e9      	b.n	1cf2 <_printf_float+0x34e>
    1d1e:	0033      	movs	r3, r6
    1d20:	002a      	movs	r2, r5
    1d22:	990a      	ldr	r1, [sp, #40]	; 0x28
    1d24:	9809      	ldr	r0, [sp, #36]	; 0x24
    1d26:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
    1d28:	47b8      	blx	r7
    1d2a:	1c43      	adds	r3, r0, #1
    1d2c:	d1c1      	bne.n	1cb2 <_printf_float+0x30e>
    1d2e:	e696      	b.n	1a5e <_printf_float+0xba>
    1d30:	0022      	movs	r2, r4
    1d32:	2301      	movs	r3, #1
    1d34:	321a      	adds	r2, #26
    1d36:	990a      	ldr	r1, [sp, #40]	; 0x28
    1d38:	9809      	ldr	r0, [sp, #36]	; 0x24
    1d3a:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
    1d3c:	47b8      	blx	r7
    1d3e:	1c43      	adds	r3, r0, #1
    1d40:	d100      	bne.n	1d44 <_printf_float+0x3a0>
    1d42:	e68c      	b.n	1a5e <_printf_float+0xba>
    1d44:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    1d46:	3301      	adds	r3, #1
    1d48:	930c      	str	r3, [sp, #48]	; 0x30
    1d4a:	e7b7      	b.n	1cbc <_printf_float+0x318>
    1d4c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    1d4e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    1d50:	990a      	ldr	r1, [sp, #40]	; 0x28
    1d52:	9809      	ldr	r0, [sp, #36]	; 0x24
    1d54:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
    1d56:	47b0      	blx	r6
    1d58:	1c43      	adds	r3, r0, #1
    1d5a:	d1bd      	bne.n	1cd8 <_printf_float+0x334>
    1d5c:	e67f      	b.n	1a5e <_printf_float+0xba>
    1d5e:	19ea      	adds	r2, r5, r7
    1d60:	0033      	movs	r3, r6
    1d62:	990a      	ldr	r1, [sp, #40]	; 0x28
    1d64:	9809      	ldr	r0, [sp, #36]	; 0x24
    1d66:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    1d68:	47a8      	blx	r5
    1d6a:	1c43      	adds	r3, r0, #1
    1d6c:	d1bd      	bne.n	1cea <_printf_float+0x346>
    1d6e:	e676      	b.n	1a5e <_printf_float+0xba>
    1d70:	9b12      	ldr	r3, [sp, #72]	; 0x48
    1d72:	2b01      	cmp	r3, #1
    1d74:	dc02      	bgt.n	1d7c <_printf_float+0x3d8>
    1d76:	2301      	movs	r3, #1
    1d78:	421a      	tst	r2, r3
    1d7a:	d038      	beq.n	1dee <_printf_float+0x44a>
    1d7c:	2301      	movs	r3, #1
    1d7e:	002a      	movs	r2, r5
    1d80:	990a      	ldr	r1, [sp, #40]	; 0x28
    1d82:	9809      	ldr	r0, [sp, #36]	; 0x24
    1d84:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
    1d86:	47b8      	blx	r7
    1d88:	1c43      	adds	r3, r0, #1
    1d8a:	d100      	bne.n	1d8e <_printf_float+0x3ea>
    1d8c:	e667      	b.n	1a5e <_printf_float+0xba>
    1d8e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    1d90:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    1d92:	990a      	ldr	r1, [sp, #40]	; 0x28
    1d94:	9809      	ldr	r0, [sp, #36]	; 0x24
    1d96:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
    1d98:	47b8      	blx	r7
    1d9a:	1c43      	adds	r3, r0, #1
    1d9c:	d100      	bne.n	1da0 <_printf_float+0x3fc>
    1d9e:	e65e      	b.n	1a5e <_printf_float+0xba>
    1da0:	6ca0      	ldr	r0, [r4, #72]	; 0x48
    1da2:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
    1da4:	2200      	movs	r2, #0
    1da6:	2300      	movs	r3, #0
    1da8:	f002 fbc4 	bl	4534 <__aeabi_dcmpeq>
    1dac:	2800      	cmp	r0, #0
    1dae:	d008      	beq.n	1dc2 <_printf_float+0x41e>
    1db0:	2500      	movs	r5, #0
    1db2:	9b12      	ldr	r3, [sp, #72]	; 0x48
    1db4:	3b01      	subs	r3, #1
    1db6:	429d      	cmp	r5, r3
    1db8:	db0d      	blt.n	1dd6 <_printf_float+0x432>
    1dba:	0022      	movs	r2, r4
    1dbc:	0033      	movs	r3, r6
    1dbe:	3250      	adds	r2, #80	; 0x50
    1dc0:	e6ef      	b.n	1ba2 <_printf_float+0x1fe>
    1dc2:	9b12      	ldr	r3, [sp, #72]	; 0x48
    1dc4:	1c6a      	adds	r2, r5, #1
    1dc6:	3b01      	subs	r3, #1
    1dc8:	990a      	ldr	r1, [sp, #40]	; 0x28
    1dca:	9809      	ldr	r0, [sp, #36]	; 0x24
    1dcc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    1dce:	47a8      	blx	r5
    1dd0:	1c43      	adds	r3, r0, #1
    1dd2:	d1f2      	bne.n	1dba <_printf_float+0x416>
    1dd4:	e643      	b.n	1a5e <_printf_float+0xba>
    1dd6:	0022      	movs	r2, r4
    1dd8:	2301      	movs	r3, #1
    1dda:	321a      	adds	r2, #26
    1ddc:	990a      	ldr	r1, [sp, #40]	; 0x28
    1dde:	9809      	ldr	r0, [sp, #36]	; 0x24
    1de0:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
    1de2:	47b8      	blx	r7
    1de4:	1c43      	adds	r3, r0, #1
    1de6:	d100      	bne.n	1dea <_printf_float+0x446>
    1de8:	e639      	b.n	1a5e <_printf_float+0xba>
    1dea:	3501      	adds	r5, #1
    1dec:	e7e1      	b.n	1db2 <_printf_float+0x40e>
    1dee:	002a      	movs	r2, r5
    1df0:	e7ea      	b.n	1dc8 <_printf_float+0x424>
    1df2:	0022      	movs	r2, r4
    1df4:	2301      	movs	r3, #1
    1df6:	3219      	adds	r2, #25
    1df8:	990a      	ldr	r1, [sp, #40]	; 0x28
    1dfa:	9809      	ldr	r0, [sp, #36]	; 0x24
    1dfc:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
    1dfe:	47b0      	blx	r6
    1e00:	1c43      	adds	r3, r0, #1
    1e02:	d100      	bne.n	1e06 <_printf_float+0x462>
    1e04:	e62b      	b.n	1a5e <_printf_float+0xba>
    1e06:	3501      	adds	r5, #1
    1e08:	68e3      	ldr	r3, [r4, #12]
    1e0a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    1e0c:	1a9b      	subs	r3, r3, r2
    1e0e:	429d      	cmp	r5, r3
    1e10:	dbef      	blt.n	1df2 <_printf_float+0x44e>
    1e12:	e6fb      	b.n	1c0c <_printf_float+0x268>
    1e14:	0032      	movs	r2, r6
    1e16:	002b      	movs	r3, r5
    1e18:	0030      	movs	r0, r6
    1e1a:	0029      	movs	r1, r5
    1e1c:	f004 f8bc 	bl	5f98 <__aeabi_dcmpun>
    1e20:	2800      	cmp	r0, #0
    1e22:	d100      	bne.n	1e26 <_printf_float+0x482>
    1e24:	e621      	b.n	1a6a <_printf_float+0xc6>
    1e26:	4d03      	ldr	r5, [pc, #12]	; (1e34 <_printf_float+0x490>)
    1e28:	2f47      	cmp	r7, #71	; 0x47
    1e2a:	d900      	bls.n	1e2e <_printf_float+0x48a>
    1e2c:	e605      	b.n	1a3a <_printf_float+0x96>
    1e2e:	4d02      	ldr	r5, [pc, #8]	; (1e38 <_printf_float+0x494>)
    1e30:	e603      	b.n	1a3a <_printf_float+0x96>
    1e32:	46c0      	nop			; (mov r8, r8)
    1e34:	00006210 	.word	0x00006210
    1e38:	0000620c 	.word	0x0000620c

00001e3c <_printf_common>:
    1e3c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    1e3e:	0015      	movs	r5, r2
    1e40:	9301      	str	r3, [sp, #4]
    1e42:	688a      	ldr	r2, [r1, #8]
    1e44:	690b      	ldr	r3, [r1, #16]
    1e46:	9000      	str	r0, [sp, #0]
    1e48:	000c      	movs	r4, r1
    1e4a:	4293      	cmp	r3, r2
    1e4c:	da00      	bge.n	1e50 <_printf_common+0x14>
    1e4e:	0013      	movs	r3, r2
    1e50:	0022      	movs	r2, r4
    1e52:	602b      	str	r3, [r5, #0]
    1e54:	3243      	adds	r2, #67	; 0x43
    1e56:	7812      	ldrb	r2, [r2, #0]
    1e58:	2a00      	cmp	r2, #0
    1e5a:	d001      	beq.n	1e60 <_printf_common+0x24>
    1e5c:	3301      	adds	r3, #1
    1e5e:	602b      	str	r3, [r5, #0]
    1e60:	6823      	ldr	r3, [r4, #0]
    1e62:	069b      	lsls	r3, r3, #26
    1e64:	d502      	bpl.n	1e6c <_printf_common+0x30>
    1e66:	682b      	ldr	r3, [r5, #0]
    1e68:	3302      	adds	r3, #2
    1e6a:	602b      	str	r3, [r5, #0]
    1e6c:	2706      	movs	r7, #6
    1e6e:	6823      	ldr	r3, [r4, #0]
    1e70:	401f      	ands	r7, r3
    1e72:	d027      	beq.n	1ec4 <_printf_common+0x88>
    1e74:	0023      	movs	r3, r4
    1e76:	3343      	adds	r3, #67	; 0x43
    1e78:	781b      	ldrb	r3, [r3, #0]
    1e7a:	1e5a      	subs	r2, r3, #1
    1e7c:	4193      	sbcs	r3, r2
    1e7e:	6822      	ldr	r2, [r4, #0]
    1e80:	0692      	lsls	r2, r2, #26
    1e82:	d430      	bmi.n	1ee6 <_printf_common+0xaa>
    1e84:	0022      	movs	r2, r4
    1e86:	9901      	ldr	r1, [sp, #4]
    1e88:	3243      	adds	r2, #67	; 0x43
    1e8a:	9800      	ldr	r0, [sp, #0]
    1e8c:	9e08      	ldr	r6, [sp, #32]
    1e8e:	47b0      	blx	r6
    1e90:	1c43      	adds	r3, r0, #1
    1e92:	d025      	beq.n	1ee0 <_printf_common+0xa4>
    1e94:	2306      	movs	r3, #6
    1e96:	6820      	ldr	r0, [r4, #0]
    1e98:	682a      	ldr	r2, [r5, #0]
    1e9a:	68e1      	ldr	r1, [r4, #12]
    1e9c:	4003      	ands	r3, r0
    1e9e:	2500      	movs	r5, #0
    1ea0:	2b04      	cmp	r3, #4
    1ea2:	d103      	bne.n	1eac <_printf_common+0x70>
    1ea4:	1a8d      	subs	r5, r1, r2
    1ea6:	43eb      	mvns	r3, r5
    1ea8:	17db      	asrs	r3, r3, #31
    1eaa:	401d      	ands	r5, r3
    1eac:	68a3      	ldr	r3, [r4, #8]
    1eae:	6922      	ldr	r2, [r4, #16]
    1eb0:	4293      	cmp	r3, r2
    1eb2:	dd01      	ble.n	1eb8 <_printf_common+0x7c>
    1eb4:	1a9b      	subs	r3, r3, r2
    1eb6:	18ed      	adds	r5, r5, r3
    1eb8:	2700      	movs	r7, #0
    1eba:	42bd      	cmp	r5, r7
    1ebc:	d120      	bne.n	1f00 <_printf_common+0xc4>
    1ebe:	2000      	movs	r0, #0
    1ec0:	e010      	b.n	1ee4 <_printf_common+0xa8>
    1ec2:	3701      	adds	r7, #1
    1ec4:	68e3      	ldr	r3, [r4, #12]
    1ec6:	682a      	ldr	r2, [r5, #0]
    1ec8:	1a9b      	subs	r3, r3, r2
    1eca:	429f      	cmp	r7, r3
    1ecc:	dad2      	bge.n	1e74 <_printf_common+0x38>
    1ece:	0022      	movs	r2, r4
    1ed0:	2301      	movs	r3, #1
    1ed2:	3219      	adds	r2, #25
    1ed4:	9901      	ldr	r1, [sp, #4]
    1ed6:	9800      	ldr	r0, [sp, #0]
    1ed8:	9e08      	ldr	r6, [sp, #32]
    1eda:	47b0      	blx	r6
    1edc:	1c43      	adds	r3, r0, #1
    1ede:	d1f0      	bne.n	1ec2 <_printf_common+0x86>
    1ee0:	2001      	movs	r0, #1
    1ee2:	4240      	negs	r0, r0
    1ee4:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    1ee6:	2030      	movs	r0, #48	; 0x30
    1ee8:	18e1      	adds	r1, r4, r3
    1eea:	3143      	adds	r1, #67	; 0x43
    1eec:	7008      	strb	r0, [r1, #0]
    1eee:	0021      	movs	r1, r4
    1ef0:	1c5a      	adds	r2, r3, #1
    1ef2:	3145      	adds	r1, #69	; 0x45
    1ef4:	7809      	ldrb	r1, [r1, #0]
    1ef6:	18a2      	adds	r2, r4, r2
    1ef8:	3243      	adds	r2, #67	; 0x43
    1efa:	3302      	adds	r3, #2
    1efc:	7011      	strb	r1, [r2, #0]
    1efe:	e7c1      	b.n	1e84 <_printf_common+0x48>
    1f00:	0022      	movs	r2, r4
    1f02:	2301      	movs	r3, #1
    1f04:	321a      	adds	r2, #26
    1f06:	9901      	ldr	r1, [sp, #4]
    1f08:	9800      	ldr	r0, [sp, #0]
    1f0a:	9e08      	ldr	r6, [sp, #32]
    1f0c:	47b0      	blx	r6
    1f0e:	1c43      	adds	r3, r0, #1
    1f10:	d0e6      	beq.n	1ee0 <_printf_common+0xa4>
    1f12:	3701      	adds	r7, #1
    1f14:	e7d1      	b.n	1eba <_printf_common+0x7e>
	...

00001f18 <_printf_i>:
    1f18:	b5f0      	push	{r4, r5, r6, r7, lr}
    1f1a:	b08b      	sub	sp, #44	; 0x2c
    1f1c:	9206      	str	r2, [sp, #24]
    1f1e:	000a      	movs	r2, r1
    1f20:	3243      	adds	r2, #67	; 0x43
    1f22:	9307      	str	r3, [sp, #28]
    1f24:	9005      	str	r0, [sp, #20]
    1f26:	9204      	str	r2, [sp, #16]
    1f28:	7e0a      	ldrb	r2, [r1, #24]
    1f2a:	000c      	movs	r4, r1
    1f2c:	9b10      	ldr	r3, [sp, #64]	; 0x40
    1f2e:	2a6e      	cmp	r2, #110	; 0x6e
    1f30:	d100      	bne.n	1f34 <_printf_i+0x1c>
    1f32:	e08f      	b.n	2054 <_printf_i+0x13c>
    1f34:	d817      	bhi.n	1f66 <_printf_i+0x4e>
    1f36:	2a63      	cmp	r2, #99	; 0x63
    1f38:	d02c      	beq.n	1f94 <_printf_i+0x7c>
    1f3a:	d808      	bhi.n	1f4e <_printf_i+0x36>
    1f3c:	2a00      	cmp	r2, #0
    1f3e:	d100      	bne.n	1f42 <_printf_i+0x2a>
    1f40:	e099      	b.n	2076 <_printf_i+0x15e>
    1f42:	2a58      	cmp	r2, #88	; 0x58
    1f44:	d054      	beq.n	1ff0 <_printf_i+0xd8>
    1f46:	0026      	movs	r6, r4
    1f48:	3642      	adds	r6, #66	; 0x42
    1f4a:	7032      	strb	r2, [r6, #0]
    1f4c:	e029      	b.n	1fa2 <_printf_i+0x8a>
    1f4e:	2a64      	cmp	r2, #100	; 0x64
    1f50:	d001      	beq.n	1f56 <_printf_i+0x3e>
    1f52:	2a69      	cmp	r2, #105	; 0x69
    1f54:	d1f7      	bne.n	1f46 <_printf_i+0x2e>
    1f56:	6821      	ldr	r1, [r4, #0]
    1f58:	681a      	ldr	r2, [r3, #0]
    1f5a:	0608      	lsls	r0, r1, #24
    1f5c:	d523      	bpl.n	1fa6 <_printf_i+0x8e>
    1f5e:	1d11      	adds	r1, r2, #4
    1f60:	6019      	str	r1, [r3, #0]
    1f62:	6815      	ldr	r5, [r2, #0]
    1f64:	e025      	b.n	1fb2 <_printf_i+0x9a>
    1f66:	2a73      	cmp	r2, #115	; 0x73
    1f68:	d100      	bne.n	1f6c <_printf_i+0x54>
    1f6a:	e088      	b.n	207e <_printf_i+0x166>
    1f6c:	d808      	bhi.n	1f80 <_printf_i+0x68>
    1f6e:	2a6f      	cmp	r2, #111	; 0x6f
    1f70:	d029      	beq.n	1fc6 <_printf_i+0xae>
    1f72:	2a70      	cmp	r2, #112	; 0x70
    1f74:	d1e7      	bne.n	1f46 <_printf_i+0x2e>
    1f76:	2220      	movs	r2, #32
    1f78:	6809      	ldr	r1, [r1, #0]
    1f7a:	430a      	orrs	r2, r1
    1f7c:	6022      	str	r2, [r4, #0]
    1f7e:	e003      	b.n	1f88 <_printf_i+0x70>
    1f80:	2a75      	cmp	r2, #117	; 0x75
    1f82:	d020      	beq.n	1fc6 <_printf_i+0xae>
    1f84:	2a78      	cmp	r2, #120	; 0x78
    1f86:	d1de      	bne.n	1f46 <_printf_i+0x2e>
    1f88:	0022      	movs	r2, r4
    1f8a:	2178      	movs	r1, #120	; 0x78
    1f8c:	3245      	adds	r2, #69	; 0x45
    1f8e:	7011      	strb	r1, [r2, #0]
    1f90:	4a6c      	ldr	r2, [pc, #432]	; (2144 <_printf_i+0x22c>)
    1f92:	e030      	b.n	1ff6 <_printf_i+0xde>
    1f94:	000e      	movs	r6, r1
    1f96:	681a      	ldr	r2, [r3, #0]
    1f98:	3642      	adds	r6, #66	; 0x42
    1f9a:	1d11      	adds	r1, r2, #4
    1f9c:	6019      	str	r1, [r3, #0]
    1f9e:	6813      	ldr	r3, [r2, #0]
    1fa0:	7033      	strb	r3, [r6, #0]
    1fa2:	2301      	movs	r3, #1
    1fa4:	e079      	b.n	209a <_printf_i+0x182>
    1fa6:	0649      	lsls	r1, r1, #25
    1fa8:	d5d9      	bpl.n	1f5e <_printf_i+0x46>
    1faa:	1d11      	adds	r1, r2, #4
    1fac:	6019      	str	r1, [r3, #0]
    1fae:	2300      	movs	r3, #0
    1fb0:	5ed5      	ldrsh	r5, [r2, r3]
    1fb2:	2d00      	cmp	r5, #0
    1fb4:	da03      	bge.n	1fbe <_printf_i+0xa6>
    1fb6:	232d      	movs	r3, #45	; 0x2d
    1fb8:	9a04      	ldr	r2, [sp, #16]
    1fba:	426d      	negs	r5, r5
    1fbc:	7013      	strb	r3, [r2, #0]
    1fbe:	4b62      	ldr	r3, [pc, #392]	; (2148 <_printf_i+0x230>)
    1fc0:	270a      	movs	r7, #10
    1fc2:	9303      	str	r3, [sp, #12]
    1fc4:	e02f      	b.n	2026 <_printf_i+0x10e>
    1fc6:	6820      	ldr	r0, [r4, #0]
    1fc8:	6819      	ldr	r1, [r3, #0]
    1fca:	0605      	lsls	r5, r0, #24
    1fcc:	d503      	bpl.n	1fd6 <_printf_i+0xbe>
    1fce:	1d08      	adds	r0, r1, #4
    1fd0:	6018      	str	r0, [r3, #0]
    1fd2:	680d      	ldr	r5, [r1, #0]
    1fd4:	e005      	b.n	1fe2 <_printf_i+0xca>
    1fd6:	0640      	lsls	r0, r0, #25
    1fd8:	d5f9      	bpl.n	1fce <_printf_i+0xb6>
    1fda:	680d      	ldr	r5, [r1, #0]
    1fdc:	1d08      	adds	r0, r1, #4
    1fde:	6018      	str	r0, [r3, #0]
    1fe0:	b2ad      	uxth	r5, r5
    1fe2:	4b59      	ldr	r3, [pc, #356]	; (2148 <_printf_i+0x230>)
    1fe4:	2708      	movs	r7, #8
    1fe6:	9303      	str	r3, [sp, #12]
    1fe8:	2a6f      	cmp	r2, #111	; 0x6f
    1fea:	d018      	beq.n	201e <_printf_i+0x106>
    1fec:	270a      	movs	r7, #10
    1fee:	e016      	b.n	201e <_printf_i+0x106>
    1ff0:	3145      	adds	r1, #69	; 0x45
    1ff2:	700a      	strb	r2, [r1, #0]
    1ff4:	4a54      	ldr	r2, [pc, #336]	; (2148 <_printf_i+0x230>)
    1ff6:	9203      	str	r2, [sp, #12]
    1ff8:	681a      	ldr	r2, [r3, #0]
    1ffa:	6821      	ldr	r1, [r4, #0]
    1ffc:	1d10      	adds	r0, r2, #4
    1ffe:	6018      	str	r0, [r3, #0]
    2000:	6815      	ldr	r5, [r2, #0]
    2002:	0608      	lsls	r0, r1, #24
    2004:	d522      	bpl.n	204c <_printf_i+0x134>
    2006:	07cb      	lsls	r3, r1, #31
    2008:	d502      	bpl.n	2010 <_printf_i+0xf8>
    200a:	2320      	movs	r3, #32
    200c:	4319      	orrs	r1, r3
    200e:	6021      	str	r1, [r4, #0]
    2010:	2710      	movs	r7, #16
    2012:	2d00      	cmp	r5, #0
    2014:	d103      	bne.n	201e <_printf_i+0x106>
    2016:	2320      	movs	r3, #32
    2018:	6822      	ldr	r2, [r4, #0]
    201a:	439a      	bics	r2, r3
    201c:	6022      	str	r2, [r4, #0]
    201e:	0023      	movs	r3, r4
    2020:	2200      	movs	r2, #0
    2022:	3343      	adds	r3, #67	; 0x43
    2024:	701a      	strb	r2, [r3, #0]
    2026:	6863      	ldr	r3, [r4, #4]
    2028:	60a3      	str	r3, [r4, #8]
    202a:	2b00      	cmp	r3, #0
    202c:	db5c      	blt.n	20e8 <_printf_i+0x1d0>
    202e:	2204      	movs	r2, #4
    2030:	6821      	ldr	r1, [r4, #0]
    2032:	4391      	bics	r1, r2
    2034:	6021      	str	r1, [r4, #0]
    2036:	2d00      	cmp	r5, #0
    2038:	d158      	bne.n	20ec <_printf_i+0x1d4>
    203a:	9e04      	ldr	r6, [sp, #16]
    203c:	2b00      	cmp	r3, #0
    203e:	d064      	beq.n	210a <_printf_i+0x1f2>
    2040:	0026      	movs	r6, r4
    2042:	9b03      	ldr	r3, [sp, #12]
    2044:	3642      	adds	r6, #66	; 0x42
    2046:	781b      	ldrb	r3, [r3, #0]
    2048:	7033      	strb	r3, [r6, #0]
    204a:	e05e      	b.n	210a <_printf_i+0x1f2>
    204c:	0648      	lsls	r0, r1, #25
    204e:	d5da      	bpl.n	2006 <_printf_i+0xee>
    2050:	b2ad      	uxth	r5, r5
    2052:	e7d8      	b.n	2006 <_printf_i+0xee>
    2054:	6809      	ldr	r1, [r1, #0]
    2056:	681a      	ldr	r2, [r3, #0]
    2058:	0608      	lsls	r0, r1, #24
    205a:	d505      	bpl.n	2068 <_printf_i+0x150>
    205c:	1d11      	adds	r1, r2, #4
    205e:	6019      	str	r1, [r3, #0]
    2060:	6813      	ldr	r3, [r2, #0]
    2062:	6962      	ldr	r2, [r4, #20]
    2064:	601a      	str	r2, [r3, #0]
    2066:	e006      	b.n	2076 <_printf_i+0x15e>
    2068:	0649      	lsls	r1, r1, #25
    206a:	d5f7      	bpl.n	205c <_printf_i+0x144>
    206c:	1d11      	adds	r1, r2, #4
    206e:	6019      	str	r1, [r3, #0]
    2070:	6813      	ldr	r3, [r2, #0]
    2072:	8aa2      	ldrh	r2, [r4, #20]
    2074:	801a      	strh	r2, [r3, #0]
    2076:	2300      	movs	r3, #0
    2078:	9e04      	ldr	r6, [sp, #16]
    207a:	6123      	str	r3, [r4, #16]
    207c:	e054      	b.n	2128 <_printf_i+0x210>
    207e:	681a      	ldr	r2, [r3, #0]
    2080:	1d11      	adds	r1, r2, #4
    2082:	6019      	str	r1, [r3, #0]
    2084:	6816      	ldr	r6, [r2, #0]
    2086:	2100      	movs	r1, #0
    2088:	6862      	ldr	r2, [r4, #4]
    208a:	0030      	movs	r0, r6
    208c:	f001 fae2 	bl	3654 <memchr>
    2090:	2800      	cmp	r0, #0
    2092:	d001      	beq.n	2098 <_printf_i+0x180>
    2094:	1b80      	subs	r0, r0, r6
    2096:	6060      	str	r0, [r4, #4]
    2098:	6863      	ldr	r3, [r4, #4]
    209a:	6123      	str	r3, [r4, #16]
    209c:	2300      	movs	r3, #0
    209e:	9a04      	ldr	r2, [sp, #16]
    20a0:	7013      	strb	r3, [r2, #0]
    20a2:	e041      	b.n	2128 <_printf_i+0x210>
    20a4:	6923      	ldr	r3, [r4, #16]
    20a6:	0032      	movs	r2, r6
    20a8:	9906      	ldr	r1, [sp, #24]
    20aa:	9805      	ldr	r0, [sp, #20]
    20ac:	9d07      	ldr	r5, [sp, #28]
    20ae:	47a8      	blx	r5
    20b0:	1c43      	adds	r3, r0, #1
    20b2:	d043      	beq.n	213c <_printf_i+0x224>
    20b4:	6823      	ldr	r3, [r4, #0]
    20b6:	2500      	movs	r5, #0
    20b8:	079b      	lsls	r3, r3, #30
    20ba:	d40f      	bmi.n	20dc <_printf_i+0x1c4>
    20bc:	9b09      	ldr	r3, [sp, #36]	; 0x24
    20be:	68e0      	ldr	r0, [r4, #12]
    20c0:	4298      	cmp	r0, r3
    20c2:	da3d      	bge.n	2140 <_printf_i+0x228>
    20c4:	0018      	movs	r0, r3
    20c6:	e03b      	b.n	2140 <_printf_i+0x228>
    20c8:	0022      	movs	r2, r4
    20ca:	2301      	movs	r3, #1
    20cc:	3219      	adds	r2, #25
    20ce:	9906      	ldr	r1, [sp, #24]
    20d0:	9805      	ldr	r0, [sp, #20]
    20d2:	9e07      	ldr	r6, [sp, #28]
    20d4:	47b0      	blx	r6
    20d6:	1c43      	adds	r3, r0, #1
    20d8:	d030      	beq.n	213c <_printf_i+0x224>
    20da:	3501      	adds	r5, #1
    20dc:	68e3      	ldr	r3, [r4, #12]
    20de:	9a09      	ldr	r2, [sp, #36]	; 0x24
    20e0:	1a9b      	subs	r3, r3, r2
    20e2:	429d      	cmp	r5, r3
    20e4:	dbf0      	blt.n	20c8 <_printf_i+0x1b0>
    20e6:	e7e9      	b.n	20bc <_printf_i+0x1a4>
    20e8:	2d00      	cmp	r5, #0
    20ea:	d0a9      	beq.n	2040 <_printf_i+0x128>
    20ec:	9e04      	ldr	r6, [sp, #16]
    20ee:	0028      	movs	r0, r5
    20f0:	0039      	movs	r1, r7
    20f2:	f002 f91f 	bl	4334 <__aeabi_uidivmod>
    20f6:	9b03      	ldr	r3, [sp, #12]
    20f8:	3e01      	subs	r6, #1
    20fa:	5c5b      	ldrb	r3, [r3, r1]
    20fc:	0028      	movs	r0, r5
    20fe:	7033      	strb	r3, [r6, #0]
    2100:	0039      	movs	r1, r7
    2102:	f002 f891 	bl	4228 <__udivsi3>
    2106:	1e05      	subs	r5, r0, #0
    2108:	d1f1      	bne.n	20ee <_printf_i+0x1d6>
    210a:	2f08      	cmp	r7, #8
    210c:	d109      	bne.n	2122 <_printf_i+0x20a>
    210e:	6823      	ldr	r3, [r4, #0]
    2110:	07db      	lsls	r3, r3, #31
    2112:	d506      	bpl.n	2122 <_printf_i+0x20a>
    2114:	6863      	ldr	r3, [r4, #4]
    2116:	6922      	ldr	r2, [r4, #16]
    2118:	4293      	cmp	r3, r2
    211a:	dc02      	bgt.n	2122 <_printf_i+0x20a>
    211c:	2330      	movs	r3, #48	; 0x30
    211e:	3e01      	subs	r6, #1
    2120:	7033      	strb	r3, [r6, #0]
    2122:	9b04      	ldr	r3, [sp, #16]
    2124:	1b9b      	subs	r3, r3, r6
    2126:	6123      	str	r3, [r4, #16]
    2128:	9b07      	ldr	r3, [sp, #28]
    212a:	aa09      	add	r2, sp, #36	; 0x24
    212c:	9300      	str	r3, [sp, #0]
    212e:	0021      	movs	r1, r4
    2130:	9b06      	ldr	r3, [sp, #24]
    2132:	9805      	ldr	r0, [sp, #20]
    2134:	f7ff fe82 	bl	1e3c <_printf_common>
    2138:	1c43      	adds	r3, r0, #1
    213a:	d1b3      	bne.n	20a4 <_printf_i+0x18c>
    213c:	2001      	movs	r0, #1
    213e:	4240      	negs	r0, r0
    2140:	b00b      	add	sp, #44	; 0x2c
    2142:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2144:	00006227 	.word	0x00006227
    2148:	00006216 	.word	0x00006216

0000214c <iprintf>:
    214c:	b40f      	push	{r0, r1, r2, r3}
    214e:	4b0b      	ldr	r3, [pc, #44]	; (217c <iprintf+0x30>)
    2150:	b513      	push	{r0, r1, r4, lr}
    2152:	681c      	ldr	r4, [r3, #0]
    2154:	2c00      	cmp	r4, #0
    2156:	d005      	beq.n	2164 <iprintf+0x18>
    2158:	69a3      	ldr	r3, [r4, #24]
    215a:	2b00      	cmp	r3, #0
    215c:	d102      	bne.n	2164 <iprintf+0x18>
    215e:	0020      	movs	r0, r4
    2160:	f001 f966 	bl	3430 <__sinit>
    2164:	ab05      	add	r3, sp, #20
    2166:	9a04      	ldr	r2, [sp, #16]
    2168:	68a1      	ldr	r1, [r4, #8]
    216a:	0020      	movs	r0, r4
    216c:	9301      	str	r3, [sp, #4]
    216e:	f001 fe45 	bl	3dfc <_vfiprintf_r>
    2172:	bc16      	pop	{r1, r2, r4}
    2174:	bc08      	pop	{r3}
    2176:	b004      	add	sp, #16
    2178:	4718      	bx	r3
    217a:	46c0      	nop			; (mov r8, r8)
    217c:	20000018 	.word	0x20000018

00002180 <_puts_r>:
    2180:	b570      	push	{r4, r5, r6, lr}
    2182:	0005      	movs	r5, r0
    2184:	000e      	movs	r6, r1
    2186:	2800      	cmp	r0, #0
    2188:	d004      	beq.n	2194 <_puts_r+0x14>
    218a:	6983      	ldr	r3, [r0, #24]
    218c:	2b00      	cmp	r3, #0
    218e:	d101      	bne.n	2194 <_puts_r+0x14>
    2190:	f001 f94e 	bl	3430 <__sinit>
    2194:	69ab      	ldr	r3, [r5, #24]
    2196:	68ac      	ldr	r4, [r5, #8]
    2198:	2b00      	cmp	r3, #0
    219a:	d102      	bne.n	21a2 <_puts_r+0x22>
    219c:	0028      	movs	r0, r5
    219e:	f001 f947 	bl	3430 <__sinit>
    21a2:	4b24      	ldr	r3, [pc, #144]	; (2234 <_puts_r+0xb4>)
    21a4:	429c      	cmp	r4, r3
    21a6:	d10f      	bne.n	21c8 <_puts_r+0x48>
    21a8:	686c      	ldr	r4, [r5, #4]
    21aa:	89a3      	ldrh	r3, [r4, #12]
    21ac:	071b      	lsls	r3, r3, #28
    21ae:	d502      	bpl.n	21b6 <_puts_r+0x36>
    21b0:	6923      	ldr	r3, [r4, #16]
    21b2:	2b00      	cmp	r3, #0
    21b4:	d120      	bne.n	21f8 <_puts_r+0x78>
    21b6:	0021      	movs	r1, r4
    21b8:	0028      	movs	r0, r5
    21ba:	f000 f95f 	bl	247c <__swsetup_r>
    21be:	2800      	cmp	r0, #0
    21c0:	d01a      	beq.n	21f8 <_puts_r+0x78>
    21c2:	2001      	movs	r0, #1
    21c4:	4240      	negs	r0, r0
    21c6:	bd70      	pop	{r4, r5, r6, pc}
    21c8:	4b1b      	ldr	r3, [pc, #108]	; (2238 <_puts_r+0xb8>)
    21ca:	429c      	cmp	r4, r3
    21cc:	d101      	bne.n	21d2 <_puts_r+0x52>
    21ce:	68ac      	ldr	r4, [r5, #8]
    21d0:	e7eb      	b.n	21aa <_puts_r+0x2a>
    21d2:	4b1a      	ldr	r3, [pc, #104]	; (223c <_puts_r+0xbc>)
    21d4:	429c      	cmp	r4, r3
    21d6:	d1e8      	bne.n	21aa <_puts_r+0x2a>
    21d8:	68ec      	ldr	r4, [r5, #12]
    21da:	e7e6      	b.n	21aa <_puts_r+0x2a>
    21dc:	3b01      	subs	r3, #1
    21de:	3601      	adds	r6, #1
    21e0:	60a3      	str	r3, [r4, #8]
    21e2:	2b00      	cmp	r3, #0
    21e4:	da04      	bge.n	21f0 <_puts_r+0x70>
    21e6:	69a2      	ldr	r2, [r4, #24]
    21e8:	4293      	cmp	r3, r2
    21ea:	db16      	blt.n	221a <_puts_r+0x9a>
    21ec:	290a      	cmp	r1, #10
    21ee:	d014      	beq.n	221a <_puts_r+0x9a>
    21f0:	6823      	ldr	r3, [r4, #0]
    21f2:	1c5a      	adds	r2, r3, #1
    21f4:	6022      	str	r2, [r4, #0]
    21f6:	7019      	strb	r1, [r3, #0]
    21f8:	7831      	ldrb	r1, [r6, #0]
    21fa:	68a3      	ldr	r3, [r4, #8]
    21fc:	2900      	cmp	r1, #0
    21fe:	d1ed      	bne.n	21dc <_puts_r+0x5c>
    2200:	3b01      	subs	r3, #1
    2202:	60a3      	str	r3, [r4, #8]
    2204:	2b00      	cmp	r3, #0
    2206:	da0f      	bge.n	2228 <_puts_r+0xa8>
    2208:	0022      	movs	r2, r4
    220a:	310a      	adds	r1, #10
    220c:	0028      	movs	r0, r5
    220e:	f000 f8df 	bl	23d0 <__swbuf_r>
    2212:	1c43      	adds	r3, r0, #1
    2214:	d0d5      	beq.n	21c2 <_puts_r+0x42>
    2216:	200a      	movs	r0, #10
    2218:	e7d5      	b.n	21c6 <_puts_r+0x46>
    221a:	0022      	movs	r2, r4
    221c:	0028      	movs	r0, r5
    221e:	f000 f8d7 	bl	23d0 <__swbuf_r>
    2222:	1c43      	adds	r3, r0, #1
    2224:	d1e8      	bne.n	21f8 <_puts_r+0x78>
    2226:	e7cc      	b.n	21c2 <_puts_r+0x42>
    2228:	200a      	movs	r0, #10
    222a:	6823      	ldr	r3, [r4, #0]
    222c:	1c5a      	adds	r2, r3, #1
    222e:	6022      	str	r2, [r4, #0]
    2230:	7018      	strb	r0, [r3, #0]
    2232:	e7c8      	b.n	21c6 <_puts_r+0x46>
    2234:	00006268 	.word	0x00006268
    2238:	00006288 	.word	0x00006288
    223c:	00006248 	.word	0x00006248

00002240 <puts>:
    2240:	b510      	push	{r4, lr}
    2242:	4b03      	ldr	r3, [pc, #12]	; (2250 <puts+0x10>)
    2244:	0001      	movs	r1, r0
    2246:	6818      	ldr	r0, [r3, #0]
    2248:	f7ff ff9a 	bl	2180 <_puts_r>
    224c:	bd10      	pop	{r4, pc}
    224e:	46c0      	nop			; (mov r8, r8)
    2250:	20000018 	.word	0x20000018

00002254 <setbuf>:
    2254:	424a      	negs	r2, r1
    2256:	414a      	adcs	r2, r1
    2258:	2380      	movs	r3, #128	; 0x80
    225a:	b510      	push	{r4, lr}
    225c:	0052      	lsls	r2, r2, #1
    225e:	00db      	lsls	r3, r3, #3
    2260:	f000 f802 	bl	2268 <setvbuf>
    2264:	bd10      	pop	{r4, pc}
	...

00002268 <setvbuf>:
    2268:	b5f0      	push	{r4, r5, r6, r7, lr}
    226a:	001d      	movs	r5, r3
    226c:	4b4f      	ldr	r3, [pc, #316]	; (23ac <setvbuf+0x144>)
    226e:	b085      	sub	sp, #20
    2270:	681e      	ldr	r6, [r3, #0]
    2272:	0004      	movs	r4, r0
    2274:	000f      	movs	r7, r1
    2276:	9200      	str	r2, [sp, #0]
    2278:	2e00      	cmp	r6, #0
    227a:	d005      	beq.n	2288 <setvbuf+0x20>
    227c:	69b3      	ldr	r3, [r6, #24]
    227e:	2b00      	cmp	r3, #0
    2280:	d102      	bne.n	2288 <setvbuf+0x20>
    2282:	0030      	movs	r0, r6
    2284:	f001 f8d4 	bl	3430 <__sinit>
    2288:	4b49      	ldr	r3, [pc, #292]	; (23b0 <setvbuf+0x148>)
    228a:	429c      	cmp	r4, r3
    228c:	d150      	bne.n	2330 <setvbuf+0xc8>
    228e:	6874      	ldr	r4, [r6, #4]
    2290:	9b00      	ldr	r3, [sp, #0]
    2292:	2b02      	cmp	r3, #2
    2294:	d005      	beq.n	22a2 <setvbuf+0x3a>
    2296:	2b01      	cmp	r3, #1
    2298:	d900      	bls.n	229c <setvbuf+0x34>
    229a:	e084      	b.n	23a6 <setvbuf+0x13e>
    229c:	2d00      	cmp	r5, #0
    229e:	da00      	bge.n	22a2 <setvbuf+0x3a>
    22a0:	e081      	b.n	23a6 <setvbuf+0x13e>
    22a2:	0021      	movs	r1, r4
    22a4:	0030      	movs	r0, r6
    22a6:	f001 f855 	bl	3354 <_fflush_r>
    22aa:	6b61      	ldr	r1, [r4, #52]	; 0x34
    22ac:	2900      	cmp	r1, #0
    22ae:	d008      	beq.n	22c2 <setvbuf+0x5a>
    22b0:	0023      	movs	r3, r4
    22b2:	3344      	adds	r3, #68	; 0x44
    22b4:	4299      	cmp	r1, r3
    22b6:	d002      	beq.n	22be <setvbuf+0x56>
    22b8:	0030      	movs	r0, r6
    22ba:	f001 fccf 	bl	3c5c <_free_r>
    22be:	2300      	movs	r3, #0
    22c0:	6363      	str	r3, [r4, #52]	; 0x34
    22c2:	2300      	movs	r3, #0
    22c4:	61a3      	str	r3, [r4, #24]
    22c6:	6063      	str	r3, [r4, #4]
    22c8:	89a3      	ldrh	r3, [r4, #12]
    22ca:	061b      	lsls	r3, r3, #24
    22cc:	d503      	bpl.n	22d6 <setvbuf+0x6e>
    22ce:	6921      	ldr	r1, [r4, #16]
    22d0:	0030      	movs	r0, r6
    22d2:	f001 fcc3 	bl	3c5c <_free_r>
    22d6:	89a3      	ldrh	r3, [r4, #12]
    22d8:	4a36      	ldr	r2, [pc, #216]	; (23b4 <setvbuf+0x14c>)
    22da:	4013      	ands	r3, r2
    22dc:	81a3      	strh	r3, [r4, #12]
    22de:	9b00      	ldr	r3, [sp, #0]
    22e0:	2b02      	cmp	r3, #2
    22e2:	d05a      	beq.n	239a <setvbuf+0x132>
    22e4:	ab03      	add	r3, sp, #12
    22e6:	aa02      	add	r2, sp, #8
    22e8:	0021      	movs	r1, r4
    22ea:	0030      	movs	r0, r6
    22ec:	f001 f942 	bl	3574 <__swhatbuf_r>
    22f0:	89a3      	ldrh	r3, [r4, #12]
    22f2:	4318      	orrs	r0, r3
    22f4:	81a0      	strh	r0, [r4, #12]
    22f6:	2d00      	cmp	r5, #0
    22f8:	d124      	bne.n	2344 <setvbuf+0xdc>
    22fa:	9d02      	ldr	r5, [sp, #8]
    22fc:	0028      	movs	r0, r5
    22fe:	f001 f99f 	bl	3640 <malloc>
    2302:	9501      	str	r5, [sp, #4]
    2304:	1e07      	subs	r7, r0, #0
    2306:	d142      	bne.n	238e <setvbuf+0x126>
    2308:	9b02      	ldr	r3, [sp, #8]
    230a:	9301      	str	r3, [sp, #4]
    230c:	42ab      	cmp	r3, r5
    230e:	d139      	bne.n	2384 <setvbuf+0x11c>
    2310:	2001      	movs	r0, #1
    2312:	4240      	negs	r0, r0
    2314:	2302      	movs	r3, #2
    2316:	89a2      	ldrh	r2, [r4, #12]
    2318:	4313      	orrs	r3, r2
    231a:	81a3      	strh	r3, [r4, #12]
    231c:	2300      	movs	r3, #0
    231e:	60a3      	str	r3, [r4, #8]
    2320:	0023      	movs	r3, r4
    2322:	3347      	adds	r3, #71	; 0x47
    2324:	6023      	str	r3, [r4, #0]
    2326:	6123      	str	r3, [r4, #16]
    2328:	2301      	movs	r3, #1
    232a:	6163      	str	r3, [r4, #20]
    232c:	b005      	add	sp, #20
    232e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2330:	4b21      	ldr	r3, [pc, #132]	; (23b8 <setvbuf+0x150>)
    2332:	429c      	cmp	r4, r3
    2334:	d101      	bne.n	233a <setvbuf+0xd2>
    2336:	68b4      	ldr	r4, [r6, #8]
    2338:	e7aa      	b.n	2290 <setvbuf+0x28>
    233a:	4b20      	ldr	r3, [pc, #128]	; (23bc <setvbuf+0x154>)
    233c:	429c      	cmp	r4, r3
    233e:	d1a7      	bne.n	2290 <setvbuf+0x28>
    2340:	68f4      	ldr	r4, [r6, #12]
    2342:	e7a5      	b.n	2290 <setvbuf+0x28>
    2344:	2f00      	cmp	r7, #0
    2346:	d0d9      	beq.n	22fc <setvbuf+0x94>
    2348:	69b3      	ldr	r3, [r6, #24]
    234a:	2b00      	cmp	r3, #0
    234c:	d102      	bne.n	2354 <setvbuf+0xec>
    234e:	0030      	movs	r0, r6
    2350:	f001 f86e 	bl	3430 <__sinit>
    2354:	9b00      	ldr	r3, [sp, #0]
    2356:	2b01      	cmp	r3, #1
    2358:	d103      	bne.n	2362 <setvbuf+0xfa>
    235a:	89a3      	ldrh	r3, [r4, #12]
    235c:	9a00      	ldr	r2, [sp, #0]
    235e:	431a      	orrs	r2, r3
    2360:	81a2      	strh	r2, [r4, #12]
    2362:	2008      	movs	r0, #8
    2364:	89a3      	ldrh	r3, [r4, #12]
    2366:	6027      	str	r7, [r4, #0]
    2368:	6127      	str	r7, [r4, #16]
    236a:	6165      	str	r5, [r4, #20]
    236c:	4018      	ands	r0, r3
    236e:	d018      	beq.n	23a2 <setvbuf+0x13a>
    2370:	2001      	movs	r0, #1
    2372:	4018      	ands	r0, r3
    2374:	2300      	movs	r3, #0
    2376:	4298      	cmp	r0, r3
    2378:	d011      	beq.n	239e <setvbuf+0x136>
    237a:	426d      	negs	r5, r5
    237c:	60a3      	str	r3, [r4, #8]
    237e:	61a5      	str	r5, [r4, #24]
    2380:	0018      	movs	r0, r3
    2382:	e7d3      	b.n	232c <setvbuf+0xc4>
    2384:	9801      	ldr	r0, [sp, #4]
    2386:	f001 f95b 	bl	3640 <malloc>
    238a:	1e07      	subs	r7, r0, #0
    238c:	d0c0      	beq.n	2310 <setvbuf+0xa8>
    238e:	2380      	movs	r3, #128	; 0x80
    2390:	89a2      	ldrh	r2, [r4, #12]
    2392:	9d01      	ldr	r5, [sp, #4]
    2394:	4313      	orrs	r3, r2
    2396:	81a3      	strh	r3, [r4, #12]
    2398:	e7d6      	b.n	2348 <setvbuf+0xe0>
    239a:	2000      	movs	r0, #0
    239c:	e7ba      	b.n	2314 <setvbuf+0xac>
    239e:	60a5      	str	r5, [r4, #8]
    23a0:	e7c4      	b.n	232c <setvbuf+0xc4>
    23a2:	60a0      	str	r0, [r4, #8]
    23a4:	e7c2      	b.n	232c <setvbuf+0xc4>
    23a6:	2001      	movs	r0, #1
    23a8:	4240      	negs	r0, r0
    23aa:	e7bf      	b.n	232c <setvbuf+0xc4>
    23ac:	20000018 	.word	0x20000018
    23b0:	00006268 	.word	0x00006268
    23b4:	fffff35c 	.word	0xfffff35c
    23b8:	00006288 	.word	0x00006288
    23bc:	00006248 	.word	0x00006248

000023c0 <strlen>:
    23c0:	2300      	movs	r3, #0
    23c2:	5cc2      	ldrb	r2, [r0, r3]
    23c4:	3301      	adds	r3, #1
    23c6:	2a00      	cmp	r2, #0
    23c8:	d1fb      	bne.n	23c2 <strlen+0x2>
    23ca:	1e58      	subs	r0, r3, #1
    23cc:	4770      	bx	lr
	...

000023d0 <__swbuf_r>:
    23d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    23d2:	0005      	movs	r5, r0
    23d4:	000e      	movs	r6, r1
    23d6:	0014      	movs	r4, r2
    23d8:	2800      	cmp	r0, #0
    23da:	d004      	beq.n	23e6 <__swbuf_r+0x16>
    23dc:	6983      	ldr	r3, [r0, #24]
    23de:	2b00      	cmp	r3, #0
    23e0:	d101      	bne.n	23e6 <__swbuf_r+0x16>
    23e2:	f001 f825 	bl	3430 <__sinit>
    23e6:	4b22      	ldr	r3, [pc, #136]	; (2470 <__swbuf_r+0xa0>)
    23e8:	429c      	cmp	r4, r3
    23ea:	d12d      	bne.n	2448 <__swbuf_r+0x78>
    23ec:	686c      	ldr	r4, [r5, #4]
    23ee:	69a3      	ldr	r3, [r4, #24]
    23f0:	60a3      	str	r3, [r4, #8]
    23f2:	89a3      	ldrh	r3, [r4, #12]
    23f4:	071b      	lsls	r3, r3, #28
    23f6:	d531      	bpl.n	245c <__swbuf_r+0x8c>
    23f8:	6923      	ldr	r3, [r4, #16]
    23fa:	2b00      	cmp	r3, #0
    23fc:	d02e      	beq.n	245c <__swbuf_r+0x8c>
    23fe:	6823      	ldr	r3, [r4, #0]
    2400:	6922      	ldr	r2, [r4, #16]
    2402:	b2f7      	uxtb	r7, r6
    2404:	1a98      	subs	r0, r3, r2
    2406:	6963      	ldr	r3, [r4, #20]
    2408:	b2f6      	uxtb	r6, r6
    240a:	4298      	cmp	r0, r3
    240c:	db05      	blt.n	241a <__swbuf_r+0x4a>
    240e:	0021      	movs	r1, r4
    2410:	0028      	movs	r0, r5
    2412:	f000 ff9f 	bl	3354 <_fflush_r>
    2416:	2800      	cmp	r0, #0
    2418:	d126      	bne.n	2468 <__swbuf_r+0x98>
    241a:	68a3      	ldr	r3, [r4, #8]
    241c:	3001      	adds	r0, #1
    241e:	3b01      	subs	r3, #1
    2420:	60a3      	str	r3, [r4, #8]
    2422:	6823      	ldr	r3, [r4, #0]
    2424:	1c5a      	adds	r2, r3, #1
    2426:	6022      	str	r2, [r4, #0]
    2428:	701f      	strb	r7, [r3, #0]
    242a:	6963      	ldr	r3, [r4, #20]
    242c:	4298      	cmp	r0, r3
    242e:	d004      	beq.n	243a <__swbuf_r+0x6a>
    2430:	89a3      	ldrh	r3, [r4, #12]
    2432:	07db      	lsls	r3, r3, #31
    2434:	d51a      	bpl.n	246c <__swbuf_r+0x9c>
    2436:	2e0a      	cmp	r6, #10
    2438:	d118      	bne.n	246c <__swbuf_r+0x9c>
    243a:	0021      	movs	r1, r4
    243c:	0028      	movs	r0, r5
    243e:	f000 ff89 	bl	3354 <_fflush_r>
    2442:	2800      	cmp	r0, #0
    2444:	d012      	beq.n	246c <__swbuf_r+0x9c>
    2446:	e00f      	b.n	2468 <__swbuf_r+0x98>
    2448:	4b0a      	ldr	r3, [pc, #40]	; (2474 <__swbuf_r+0xa4>)
    244a:	429c      	cmp	r4, r3
    244c:	d101      	bne.n	2452 <__swbuf_r+0x82>
    244e:	68ac      	ldr	r4, [r5, #8]
    2450:	e7cd      	b.n	23ee <__swbuf_r+0x1e>
    2452:	4b09      	ldr	r3, [pc, #36]	; (2478 <__swbuf_r+0xa8>)
    2454:	429c      	cmp	r4, r3
    2456:	d1ca      	bne.n	23ee <__swbuf_r+0x1e>
    2458:	68ec      	ldr	r4, [r5, #12]
    245a:	e7c8      	b.n	23ee <__swbuf_r+0x1e>
    245c:	0021      	movs	r1, r4
    245e:	0028      	movs	r0, r5
    2460:	f000 f80c 	bl	247c <__swsetup_r>
    2464:	2800      	cmp	r0, #0
    2466:	d0ca      	beq.n	23fe <__swbuf_r+0x2e>
    2468:	2601      	movs	r6, #1
    246a:	4276      	negs	r6, r6
    246c:	0030      	movs	r0, r6
    246e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2470:	00006268 	.word	0x00006268
    2474:	00006288 	.word	0x00006288
    2478:	00006248 	.word	0x00006248

0000247c <__swsetup_r>:
    247c:	4b36      	ldr	r3, [pc, #216]	; (2558 <__swsetup_r+0xdc>)
    247e:	b570      	push	{r4, r5, r6, lr}
    2480:	681d      	ldr	r5, [r3, #0]
    2482:	0006      	movs	r6, r0
    2484:	000c      	movs	r4, r1
    2486:	2d00      	cmp	r5, #0
    2488:	d005      	beq.n	2496 <__swsetup_r+0x1a>
    248a:	69ab      	ldr	r3, [r5, #24]
    248c:	2b00      	cmp	r3, #0
    248e:	d102      	bne.n	2496 <__swsetup_r+0x1a>
    2490:	0028      	movs	r0, r5
    2492:	f000 ffcd 	bl	3430 <__sinit>
    2496:	4b31      	ldr	r3, [pc, #196]	; (255c <__swsetup_r+0xe0>)
    2498:	429c      	cmp	r4, r3
    249a:	d10f      	bne.n	24bc <__swsetup_r+0x40>
    249c:	686c      	ldr	r4, [r5, #4]
    249e:	230c      	movs	r3, #12
    24a0:	5ee2      	ldrsh	r2, [r4, r3]
    24a2:	b293      	uxth	r3, r2
    24a4:	0719      	lsls	r1, r3, #28
    24a6:	d42d      	bmi.n	2504 <__swsetup_r+0x88>
    24a8:	06d9      	lsls	r1, r3, #27
    24aa:	d411      	bmi.n	24d0 <__swsetup_r+0x54>
    24ac:	2309      	movs	r3, #9
    24ae:	2001      	movs	r0, #1
    24b0:	6033      	str	r3, [r6, #0]
    24b2:	3337      	adds	r3, #55	; 0x37
    24b4:	4313      	orrs	r3, r2
    24b6:	81a3      	strh	r3, [r4, #12]
    24b8:	4240      	negs	r0, r0
    24ba:	bd70      	pop	{r4, r5, r6, pc}
    24bc:	4b28      	ldr	r3, [pc, #160]	; (2560 <__swsetup_r+0xe4>)
    24be:	429c      	cmp	r4, r3
    24c0:	d101      	bne.n	24c6 <__swsetup_r+0x4a>
    24c2:	68ac      	ldr	r4, [r5, #8]
    24c4:	e7eb      	b.n	249e <__swsetup_r+0x22>
    24c6:	4b27      	ldr	r3, [pc, #156]	; (2564 <__swsetup_r+0xe8>)
    24c8:	429c      	cmp	r4, r3
    24ca:	d1e8      	bne.n	249e <__swsetup_r+0x22>
    24cc:	68ec      	ldr	r4, [r5, #12]
    24ce:	e7e6      	b.n	249e <__swsetup_r+0x22>
    24d0:	075b      	lsls	r3, r3, #29
    24d2:	d513      	bpl.n	24fc <__swsetup_r+0x80>
    24d4:	6b61      	ldr	r1, [r4, #52]	; 0x34
    24d6:	2900      	cmp	r1, #0
    24d8:	d008      	beq.n	24ec <__swsetup_r+0x70>
    24da:	0023      	movs	r3, r4
    24dc:	3344      	adds	r3, #68	; 0x44
    24de:	4299      	cmp	r1, r3
    24e0:	d002      	beq.n	24e8 <__swsetup_r+0x6c>
    24e2:	0030      	movs	r0, r6
    24e4:	f001 fbba 	bl	3c5c <_free_r>
    24e8:	2300      	movs	r3, #0
    24ea:	6363      	str	r3, [r4, #52]	; 0x34
    24ec:	2224      	movs	r2, #36	; 0x24
    24ee:	89a3      	ldrh	r3, [r4, #12]
    24f0:	4393      	bics	r3, r2
    24f2:	81a3      	strh	r3, [r4, #12]
    24f4:	2300      	movs	r3, #0
    24f6:	6063      	str	r3, [r4, #4]
    24f8:	6923      	ldr	r3, [r4, #16]
    24fa:	6023      	str	r3, [r4, #0]
    24fc:	2308      	movs	r3, #8
    24fe:	89a2      	ldrh	r2, [r4, #12]
    2500:	4313      	orrs	r3, r2
    2502:	81a3      	strh	r3, [r4, #12]
    2504:	6923      	ldr	r3, [r4, #16]
    2506:	2b00      	cmp	r3, #0
    2508:	d10b      	bne.n	2522 <__swsetup_r+0xa6>
    250a:	21a0      	movs	r1, #160	; 0xa0
    250c:	2280      	movs	r2, #128	; 0x80
    250e:	89a3      	ldrh	r3, [r4, #12]
    2510:	0089      	lsls	r1, r1, #2
    2512:	0092      	lsls	r2, r2, #2
    2514:	400b      	ands	r3, r1
    2516:	4293      	cmp	r3, r2
    2518:	d003      	beq.n	2522 <__swsetup_r+0xa6>
    251a:	0021      	movs	r1, r4
    251c:	0030      	movs	r0, r6
    251e:	f001 f851 	bl	35c4 <__smakebuf_r>
    2522:	2301      	movs	r3, #1
    2524:	89a2      	ldrh	r2, [r4, #12]
    2526:	4013      	ands	r3, r2
    2528:	d011      	beq.n	254e <__swsetup_r+0xd2>
    252a:	2300      	movs	r3, #0
    252c:	60a3      	str	r3, [r4, #8]
    252e:	6963      	ldr	r3, [r4, #20]
    2530:	425b      	negs	r3, r3
    2532:	61a3      	str	r3, [r4, #24]
    2534:	2000      	movs	r0, #0
    2536:	6923      	ldr	r3, [r4, #16]
    2538:	4283      	cmp	r3, r0
    253a:	d1be      	bne.n	24ba <__swsetup_r+0x3e>
    253c:	230c      	movs	r3, #12
    253e:	5ee2      	ldrsh	r2, [r4, r3]
    2540:	0613      	lsls	r3, r2, #24
    2542:	d5ba      	bpl.n	24ba <__swsetup_r+0x3e>
    2544:	2340      	movs	r3, #64	; 0x40
    2546:	4313      	orrs	r3, r2
    2548:	81a3      	strh	r3, [r4, #12]
    254a:	3801      	subs	r0, #1
    254c:	e7b5      	b.n	24ba <__swsetup_r+0x3e>
    254e:	0792      	lsls	r2, r2, #30
    2550:	d400      	bmi.n	2554 <__swsetup_r+0xd8>
    2552:	6963      	ldr	r3, [r4, #20]
    2554:	60a3      	str	r3, [r4, #8]
    2556:	e7ed      	b.n	2534 <__swsetup_r+0xb8>
    2558:	20000018 	.word	0x20000018
    255c:	00006268 	.word	0x00006268
    2560:	00006288 	.word	0x00006288
    2564:	00006248 	.word	0x00006248

00002568 <quorem>:
    2568:	b5f0      	push	{r4, r5, r6, r7, lr}
    256a:	6903      	ldr	r3, [r0, #16]
    256c:	690c      	ldr	r4, [r1, #16]
    256e:	b089      	sub	sp, #36	; 0x24
    2570:	0007      	movs	r7, r0
    2572:	9105      	str	r1, [sp, #20]
    2574:	2600      	movs	r6, #0
    2576:	429c      	cmp	r4, r3
    2578:	dc6d      	bgt.n	2656 <quorem+0xee>
    257a:	000b      	movs	r3, r1
    257c:	3c01      	subs	r4, #1
    257e:	3314      	adds	r3, #20
    2580:	00a5      	lsls	r5, r4, #2
    2582:	9303      	str	r3, [sp, #12]
    2584:	195b      	adds	r3, r3, r5
    2586:	9304      	str	r3, [sp, #16]
    2588:	0003      	movs	r3, r0
    258a:	3314      	adds	r3, #20
    258c:	9302      	str	r3, [sp, #8]
    258e:	195d      	adds	r5, r3, r5
    2590:	9b04      	ldr	r3, [sp, #16]
    2592:	6828      	ldr	r0, [r5, #0]
    2594:	681b      	ldr	r3, [r3, #0]
    2596:	1c59      	adds	r1, r3, #1
    2598:	9301      	str	r3, [sp, #4]
    259a:	f001 fe45 	bl	4228 <__udivsi3>
    259e:	9001      	str	r0, [sp, #4]
    25a0:	42b0      	cmp	r0, r6
    25a2:	d02d      	beq.n	2600 <quorem+0x98>
    25a4:	9b03      	ldr	r3, [sp, #12]
    25a6:	9802      	ldr	r0, [sp, #8]
    25a8:	469c      	mov	ip, r3
    25aa:	9606      	str	r6, [sp, #24]
    25ac:	4662      	mov	r2, ip
    25ae:	ca08      	ldmia	r2!, {r3}
    25b0:	4694      	mov	ip, r2
    25b2:	9a01      	ldr	r2, [sp, #4]
    25b4:	b299      	uxth	r1, r3
    25b6:	4351      	muls	r1, r2
    25b8:	0c1b      	lsrs	r3, r3, #16
    25ba:	4353      	muls	r3, r2
    25bc:	1989      	adds	r1, r1, r6
    25be:	0c0a      	lsrs	r2, r1, #16
    25c0:	189b      	adds	r3, r3, r2
    25c2:	9307      	str	r3, [sp, #28]
    25c4:	8802      	ldrh	r2, [r0, #0]
    25c6:	0c1e      	lsrs	r6, r3, #16
    25c8:	9b06      	ldr	r3, [sp, #24]
    25ca:	b289      	uxth	r1, r1
    25cc:	18d2      	adds	r2, r2, r3
    25ce:	6803      	ldr	r3, [r0, #0]
    25d0:	1a52      	subs	r2, r2, r1
    25d2:	0c19      	lsrs	r1, r3, #16
    25d4:	466b      	mov	r3, sp
    25d6:	8b9b      	ldrh	r3, [r3, #28]
    25d8:	1acb      	subs	r3, r1, r3
    25da:	1411      	asrs	r1, r2, #16
    25dc:	185b      	adds	r3, r3, r1
    25de:	1419      	asrs	r1, r3, #16
    25e0:	b292      	uxth	r2, r2
    25e2:	041b      	lsls	r3, r3, #16
    25e4:	431a      	orrs	r2, r3
    25e6:	9b04      	ldr	r3, [sp, #16]
    25e8:	9106      	str	r1, [sp, #24]
    25ea:	c004      	stmia	r0!, {r2}
    25ec:	4563      	cmp	r3, ip
    25ee:	d2dd      	bcs.n	25ac <quorem+0x44>
    25f0:	682b      	ldr	r3, [r5, #0]
    25f2:	2b00      	cmp	r3, #0
    25f4:	d104      	bne.n	2600 <quorem+0x98>
    25f6:	9b02      	ldr	r3, [sp, #8]
    25f8:	3d04      	subs	r5, #4
    25fa:	42ab      	cmp	r3, r5
    25fc:	d32e      	bcc.n	265c <quorem+0xf4>
    25fe:	613c      	str	r4, [r7, #16]
    2600:	9905      	ldr	r1, [sp, #20]
    2602:	0038      	movs	r0, r7
    2604:	f001 fa4b 	bl	3a9e <__mcmp>
    2608:	2800      	cmp	r0, #0
    260a:	db23      	blt.n	2654 <quorem+0xec>
    260c:	2500      	movs	r5, #0
    260e:	9b01      	ldr	r3, [sp, #4]
    2610:	9802      	ldr	r0, [sp, #8]
    2612:	3301      	adds	r3, #1
    2614:	9903      	ldr	r1, [sp, #12]
    2616:	9301      	str	r3, [sp, #4]
    2618:	c908      	ldmia	r1!, {r3}
    261a:	8802      	ldrh	r2, [r0, #0]
    261c:	1955      	adds	r5, r2, r5
    261e:	b29a      	uxth	r2, r3
    2620:	1aaa      	subs	r2, r5, r2
    2622:	6805      	ldr	r5, [r0, #0]
    2624:	0c1b      	lsrs	r3, r3, #16
    2626:	0c2d      	lsrs	r5, r5, #16
    2628:	1aeb      	subs	r3, r5, r3
    262a:	1415      	asrs	r5, r2, #16
    262c:	195b      	adds	r3, r3, r5
    262e:	141d      	asrs	r5, r3, #16
    2630:	b292      	uxth	r2, r2
    2632:	041b      	lsls	r3, r3, #16
    2634:	4313      	orrs	r3, r2
    2636:	c008      	stmia	r0!, {r3}
    2638:	9b04      	ldr	r3, [sp, #16]
    263a:	428b      	cmp	r3, r1
    263c:	d2ec      	bcs.n	2618 <quorem+0xb0>
    263e:	9a02      	ldr	r2, [sp, #8]
    2640:	00a3      	lsls	r3, r4, #2
    2642:	18d3      	adds	r3, r2, r3
    2644:	681a      	ldr	r2, [r3, #0]
    2646:	2a00      	cmp	r2, #0
    2648:	d104      	bne.n	2654 <quorem+0xec>
    264a:	9a02      	ldr	r2, [sp, #8]
    264c:	3b04      	subs	r3, #4
    264e:	429a      	cmp	r2, r3
    2650:	d309      	bcc.n	2666 <quorem+0xfe>
    2652:	613c      	str	r4, [r7, #16]
    2654:	9e01      	ldr	r6, [sp, #4]
    2656:	0030      	movs	r0, r6
    2658:	b009      	add	sp, #36	; 0x24
    265a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    265c:	682b      	ldr	r3, [r5, #0]
    265e:	2b00      	cmp	r3, #0
    2660:	d1cd      	bne.n	25fe <quorem+0x96>
    2662:	3c01      	subs	r4, #1
    2664:	e7c7      	b.n	25f6 <quorem+0x8e>
    2666:	681a      	ldr	r2, [r3, #0]
    2668:	2a00      	cmp	r2, #0
    266a:	d1f2      	bne.n	2652 <quorem+0xea>
    266c:	3c01      	subs	r4, #1
    266e:	e7ec      	b.n	264a <quorem+0xe2>

00002670 <_dtoa_r>:
    2670:	b5f0      	push	{r4, r5, r6, r7, lr}
    2672:	0016      	movs	r6, r2
    2674:	001f      	movs	r7, r3
    2676:	6a44      	ldr	r4, [r0, #36]	; 0x24
    2678:	b09d      	sub	sp, #116	; 0x74
    267a:	9004      	str	r0, [sp, #16]
    267c:	9d25      	ldr	r5, [sp, #148]	; 0x94
    267e:	9606      	str	r6, [sp, #24]
    2680:	9707      	str	r7, [sp, #28]
    2682:	2c00      	cmp	r4, #0
    2684:	d108      	bne.n	2698 <_dtoa_r+0x28>
    2686:	2010      	movs	r0, #16
    2688:	f000 ffda 	bl	3640 <malloc>
    268c:	9b04      	ldr	r3, [sp, #16]
    268e:	6258      	str	r0, [r3, #36]	; 0x24
    2690:	6044      	str	r4, [r0, #4]
    2692:	6084      	str	r4, [r0, #8]
    2694:	6004      	str	r4, [r0, #0]
    2696:	60c4      	str	r4, [r0, #12]
    2698:	9b04      	ldr	r3, [sp, #16]
    269a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    269c:	6819      	ldr	r1, [r3, #0]
    269e:	2900      	cmp	r1, #0
    26a0:	d00b      	beq.n	26ba <_dtoa_r+0x4a>
    26a2:	685a      	ldr	r2, [r3, #4]
    26a4:	2301      	movs	r3, #1
    26a6:	4093      	lsls	r3, r2
    26a8:	604a      	str	r2, [r1, #4]
    26aa:	608b      	str	r3, [r1, #8]
    26ac:	9804      	ldr	r0, [sp, #16]
    26ae:	f001 f81d 	bl	36ec <_Bfree>
    26b2:	2200      	movs	r2, #0
    26b4:	9b04      	ldr	r3, [sp, #16]
    26b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    26b8:	601a      	str	r2, [r3, #0]
    26ba:	9b07      	ldr	r3, [sp, #28]
    26bc:	2b00      	cmp	r3, #0
    26be:	da1f      	bge.n	2700 <_dtoa_r+0x90>
    26c0:	2301      	movs	r3, #1
    26c2:	602b      	str	r3, [r5, #0]
    26c4:	007b      	lsls	r3, r7, #1
    26c6:	085b      	lsrs	r3, r3, #1
    26c8:	9307      	str	r3, [sp, #28]
    26ca:	9c07      	ldr	r4, [sp, #28]
    26cc:	4bb7      	ldr	r3, [pc, #732]	; (29ac <_dtoa_r+0x33c>)
    26ce:	0022      	movs	r2, r4
    26d0:	9319      	str	r3, [sp, #100]	; 0x64
    26d2:	401a      	ands	r2, r3
    26d4:	429a      	cmp	r2, r3
    26d6:	d116      	bne.n	2706 <_dtoa_r+0x96>
    26d8:	4bb5      	ldr	r3, [pc, #724]	; (29b0 <_dtoa_r+0x340>)
    26da:	9a24      	ldr	r2, [sp, #144]	; 0x90
    26dc:	6013      	str	r3, [r2, #0]
    26de:	9b06      	ldr	r3, [sp, #24]
    26e0:	2b00      	cmp	r3, #0
    26e2:	d103      	bne.n	26ec <_dtoa_r+0x7c>
    26e4:	0324      	lsls	r4, r4, #12
    26e6:	d101      	bne.n	26ec <_dtoa_r+0x7c>
    26e8:	f000 fd91 	bl	320e <_dtoa_r+0xb9e>
    26ec:	4bb1      	ldr	r3, [pc, #708]	; (29b4 <_dtoa_r+0x344>)
    26ee:	9a26      	ldr	r2, [sp, #152]	; 0x98
    26f0:	930a      	str	r3, [sp, #40]	; 0x28
    26f2:	4bb1      	ldr	r3, [pc, #708]	; (29b8 <_dtoa_r+0x348>)
    26f4:	2a00      	cmp	r2, #0
    26f6:	d001      	beq.n	26fc <_dtoa_r+0x8c>
    26f8:	f000 fd8f 	bl	321a <_dtoa_r+0xbaa>
    26fc:	f000 fd8f 	bl	321e <_dtoa_r+0xbae>
    2700:	2300      	movs	r3, #0
    2702:	602b      	str	r3, [r5, #0]
    2704:	e7e1      	b.n	26ca <_dtoa_r+0x5a>
    2706:	9e06      	ldr	r6, [sp, #24]
    2708:	9f07      	ldr	r7, [sp, #28]
    270a:	2200      	movs	r2, #0
    270c:	2300      	movs	r3, #0
    270e:	0030      	movs	r0, r6
    2710:	0039      	movs	r1, r7
    2712:	f001 ff0f 	bl	4534 <__aeabi_dcmpeq>
    2716:	1e05      	subs	r5, r0, #0
    2718:	d00e      	beq.n	2738 <_dtoa_r+0xc8>
    271a:	2301      	movs	r3, #1
    271c:	9a24      	ldr	r2, [sp, #144]	; 0x90
    271e:	6013      	str	r3, [r2, #0]
    2720:	4ba6      	ldr	r3, [pc, #664]	; (29bc <_dtoa_r+0x34c>)
    2722:	9a26      	ldr	r2, [sp, #152]	; 0x98
    2724:	930a      	str	r3, [sp, #40]	; 0x28
    2726:	2a00      	cmp	r2, #0
    2728:	d101      	bne.n	272e <_dtoa_r+0xbe>
    272a:	f000 fd78 	bl	321e <_dtoa_r+0xbae>
    272e:	4aa4      	ldr	r2, [pc, #656]	; (29c0 <_dtoa_r+0x350>)
    2730:	9926      	ldr	r1, [sp, #152]	; 0x98
    2732:	600a      	str	r2, [r1, #0]
    2734:	f000 fd73 	bl	321e <_dtoa_r+0xbae>
    2738:	ab1a      	add	r3, sp, #104	; 0x68
    273a:	9301      	str	r3, [sp, #4]
    273c:	ab1b      	add	r3, sp, #108	; 0x6c
    273e:	9300      	str	r3, [sp, #0]
    2740:	0032      	movs	r2, r6
    2742:	003b      	movs	r3, r7
    2744:	9804      	ldr	r0, [sp, #16]
    2746:	f001 fa27 	bl	3b98 <__d2b>
    274a:	0063      	lsls	r3, r4, #1
    274c:	9005      	str	r0, [sp, #20]
    274e:	0d5b      	lsrs	r3, r3, #21
    2750:	d100      	bne.n	2754 <_dtoa_r+0xe4>
    2752:	e07f      	b.n	2854 <_dtoa_r+0x1e4>
    2754:	033a      	lsls	r2, r7, #12
    2756:	4c9b      	ldr	r4, [pc, #620]	; (29c4 <_dtoa_r+0x354>)
    2758:	0b12      	lsrs	r2, r2, #12
    275a:	4314      	orrs	r4, r2
    275c:	0021      	movs	r1, r4
    275e:	4a9a      	ldr	r2, [pc, #616]	; (29c8 <_dtoa_r+0x358>)
    2760:	0030      	movs	r0, r6
    2762:	9518      	str	r5, [sp, #96]	; 0x60
    2764:	189e      	adds	r6, r3, r2
    2766:	2200      	movs	r2, #0
    2768:	4b98      	ldr	r3, [pc, #608]	; (29cc <_dtoa_r+0x35c>)
    276a:	f003 f8ff 	bl	596c <__aeabi_dsub>
    276e:	4a98      	ldr	r2, [pc, #608]	; (29d0 <_dtoa_r+0x360>)
    2770:	4b98      	ldr	r3, [pc, #608]	; (29d4 <_dtoa_r+0x364>)
    2772:	f002 fe7b 	bl	546c <__aeabi_dmul>
    2776:	4a98      	ldr	r2, [pc, #608]	; (29d8 <_dtoa_r+0x368>)
    2778:	4b98      	ldr	r3, [pc, #608]	; (29dc <_dtoa_r+0x36c>)
    277a:	f001 ff33 	bl	45e4 <__aeabi_dadd>
    277e:	0004      	movs	r4, r0
    2780:	0030      	movs	r0, r6
    2782:	000d      	movs	r5, r1
    2784:	f003 fc5c 	bl	6040 <__aeabi_i2d>
    2788:	4a95      	ldr	r2, [pc, #596]	; (29e0 <_dtoa_r+0x370>)
    278a:	4b96      	ldr	r3, [pc, #600]	; (29e4 <_dtoa_r+0x374>)
    278c:	f002 fe6e 	bl	546c <__aeabi_dmul>
    2790:	0002      	movs	r2, r0
    2792:	000b      	movs	r3, r1
    2794:	0020      	movs	r0, r4
    2796:	0029      	movs	r1, r5
    2798:	f001 ff24 	bl	45e4 <__aeabi_dadd>
    279c:	0004      	movs	r4, r0
    279e:	000d      	movs	r5, r1
    27a0:	f003 fc1a 	bl	5fd8 <__aeabi_d2iz>
    27a4:	2200      	movs	r2, #0
    27a6:	9003      	str	r0, [sp, #12]
    27a8:	2300      	movs	r3, #0
    27aa:	0020      	movs	r0, r4
    27ac:	0029      	movs	r1, r5
    27ae:	f001 fec7 	bl	4540 <__aeabi_dcmplt>
    27b2:	2800      	cmp	r0, #0
    27b4:	d00e      	beq.n	27d4 <_dtoa_r+0x164>
    27b6:	9803      	ldr	r0, [sp, #12]
    27b8:	f003 fc42 	bl	6040 <__aeabi_i2d>
    27bc:	000b      	movs	r3, r1
    27be:	0002      	movs	r2, r0
    27c0:	0029      	movs	r1, r5
    27c2:	0020      	movs	r0, r4
    27c4:	f001 feb6 	bl	4534 <__aeabi_dcmpeq>
    27c8:	0003      	movs	r3, r0
    27ca:	4258      	negs	r0, r3
    27cc:	4158      	adcs	r0, r3
    27ce:	9b03      	ldr	r3, [sp, #12]
    27d0:	1a1b      	subs	r3, r3, r0
    27d2:	9303      	str	r3, [sp, #12]
    27d4:	2301      	movs	r3, #1
    27d6:	9316      	str	r3, [sp, #88]	; 0x58
    27d8:	9b03      	ldr	r3, [sp, #12]
    27da:	2b16      	cmp	r3, #22
    27dc:	d80f      	bhi.n	27fe <_dtoa_r+0x18e>
    27de:	4982      	ldr	r1, [pc, #520]	; (29e8 <_dtoa_r+0x378>)
    27e0:	00db      	lsls	r3, r3, #3
    27e2:	18c9      	adds	r1, r1, r3
    27e4:	6808      	ldr	r0, [r1, #0]
    27e6:	6849      	ldr	r1, [r1, #4]
    27e8:	9a06      	ldr	r2, [sp, #24]
    27ea:	9b07      	ldr	r3, [sp, #28]
    27ec:	f001 febc 	bl	4568 <__aeabi_dcmpgt>
    27f0:	2800      	cmp	r0, #0
    27f2:	d04b      	beq.n	288c <_dtoa_r+0x21c>
    27f4:	9b03      	ldr	r3, [sp, #12]
    27f6:	3b01      	subs	r3, #1
    27f8:	9303      	str	r3, [sp, #12]
    27fa:	2300      	movs	r3, #0
    27fc:	9316      	str	r3, [sp, #88]	; 0x58
    27fe:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    2800:	1b9e      	subs	r6, r3, r6
    2802:	2300      	movs	r3, #0
    2804:	930b      	str	r3, [sp, #44]	; 0x2c
    2806:	0033      	movs	r3, r6
    2808:	3b01      	subs	r3, #1
    280a:	930c      	str	r3, [sp, #48]	; 0x30
    280c:	d504      	bpl.n	2818 <_dtoa_r+0x1a8>
    280e:	2301      	movs	r3, #1
    2810:	1b9b      	subs	r3, r3, r6
    2812:	930b      	str	r3, [sp, #44]	; 0x2c
    2814:	2300      	movs	r3, #0
    2816:	930c      	str	r3, [sp, #48]	; 0x30
    2818:	9b03      	ldr	r3, [sp, #12]
    281a:	2b00      	cmp	r3, #0
    281c:	db38      	blt.n	2890 <_dtoa_r+0x220>
    281e:	9a03      	ldr	r2, [sp, #12]
    2820:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    2822:	4694      	mov	ip, r2
    2824:	4463      	add	r3, ip
    2826:	930c      	str	r3, [sp, #48]	; 0x30
    2828:	2300      	movs	r3, #0
    282a:	920f      	str	r2, [sp, #60]	; 0x3c
    282c:	9308      	str	r3, [sp, #32]
    282e:	9b22      	ldr	r3, [sp, #136]	; 0x88
    2830:	2501      	movs	r5, #1
    2832:	2b09      	cmp	r3, #9
    2834:	d900      	bls.n	2838 <_dtoa_r+0x1c8>
    2836:	e091      	b.n	295c <_dtoa_r+0x2ec>
    2838:	2b05      	cmp	r3, #5
    283a:	dd02      	ble.n	2842 <_dtoa_r+0x1d2>
    283c:	2500      	movs	r5, #0
    283e:	3b04      	subs	r3, #4
    2840:	9322      	str	r3, [sp, #136]	; 0x88
    2842:	9b22      	ldr	r3, [sp, #136]	; 0x88
    2844:	1e98      	subs	r0, r3, #2
    2846:	2803      	cmp	r0, #3
    2848:	d900      	bls.n	284c <_dtoa_r+0x1dc>
    284a:	e091      	b.n	2970 <_dtoa_r+0x300>
    284c:	f001 fce2 	bl	4214 <__gnu_thumb1_case_uqi>
    2850:	76298482 	.word	0x76298482
    2854:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    2856:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
    2858:	189e      	adds	r6, r3, r2
    285a:	4b64      	ldr	r3, [pc, #400]	; (29ec <_dtoa_r+0x37c>)
    285c:	18f2      	adds	r2, r6, r3
    285e:	2a20      	cmp	r2, #32
    2860:	dd0f      	ble.n	2882 <_dtoa_r+0x212>
    2862:	4b63      	ldr	r3, [pc, #396]	; (29f0 <_dtoa_r+0x380>)
    2864:	9806      	ldr	r0, [sp, #24]
    2866:	18f3      	adds	r3, r6, r3
    2868:	40d8      	lsrs	r0, r3
    286a:	2340      	movs	r3, #64	; 0x40
    286c:	1a9b      	subs	r3, r3, r2
    286e:	409c      	lsls	r4, r3
    2870:	4320      	orrs	r0, r4
    2872:	f003 fc27 	bl	60c4 <__aeabi_ui2d>
    2876:	2301      	movs	r3, #1
    2878:	4c5e      	ldr	r4, [pc, #376]	; (29f4 <_dtoa_r+0x384>)
    287a:	3e01      	subs	r6, #1
    287c:	1909      	adds	r1, r1, r4
    287e:	9318      	str	r3, [sp, #96]	; 0x60
    2880:	e771      	b.n	2766 <_dtoa_r+0xf6>
    2882:	2320      	movs	r3, #32
    2884:	9806      	ldr	r0, [sp, #24]
    2886:	1a9b      	subs	r3, r3, r2
    2888:	4098      	lsls	r0, r3
    288a:	e7f2      	b.n	2872 <_dtoa_r+0x202>
    288c:	9016      	str	r0, [sp, #88]	; 0x58
    288e:	e7b6      	b.n	27fe <_dtoa_r+0x18e>
    2890:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    2892:	9a03      	ldr	r2, [sp, #12]
    2894:	1a9b      	subs	r3, r3, r2
    2896:	930b      	str	r3, [sp, #44]	; 0x2c
    2898:	4253      	negs	r3, r2
    289a:	9308      	str	r3, [sp, #32]
    289c:	2300      	movs	r3, #0
    289e:	930f      	str	r3, [sp, #60]	; 0x3c
    28a0:	e7c5      	b.n	282e <_dtoa_r+0x1be>
    28a2:	2301      	movs	r3, #1
    28a4:	930e      	str	r3, [sp, #56]	; 0x38
    28a6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    28a8:	2b00      	cmp	r3, #0
    28aa:	dd65      	ble.n	2978 <_dtoa_r+0x308>
    28ac:	001f      	movs	r7, r3
    28ae:	930d      	str	r3, [sp, #52]	; 0x34
    28b0:	9a04      	ldr	r2, [sp, #16]
    28b2:	6a54      	ldr	r4, [r2, #36]	; 0x24
    28b4:	2200      	movs	r2, #0
    28b6:	6062      	str	r2, [r4, #4]
    28b8:	3204      	adds	r2, #4
    28ba:	0011      	movs	r1, r2
    28bc:	3114      	adds	r1, #20
    28be:	4299      	cmp	r1, r3
    28c0:	d95f      	bls.n	2982 <_dtoa_r+0x312>
    28c2:	6861      	ldr	r1, [r4, #4]
    28c4:	9804      	ldr	r0, [sp, #16]
    28c6:	f000 fed9 	bl	367c <_Balloc>
    28ca:	9b04      	ldr	r3, [sp, #16]
    28cc:	6020      	str	r0, [r4, #0]
    28ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    28d0:	681b      	ldr	r3, [r3, #0]
    28d2:	930a      	str	r3, [sp, #40]	; 0x28
    28d4:	2f0e      	cmp	r7, #14
    28d6:	d900      	bls.n	28da <_dtoa_r+0x26a>
    28d8:	e105      	b.n	2ae6 <_dtoa_r+0x476>
    28da:	2d00      	cmp	r5, #0
    28dc:	d100      	bne.n	28e0 <_dtoa_r+0x270>
    28de:	e102      	b.n	2ae6 <_dtoa_r+0x476>
    28e0:	9b06      	ldr	r3, [sp, #24]
    28e2:	9c07      	ldr	r4, [sp, #28]
    28e4:	9314      	str	r3, [sp, #80]	; 0x50
    28e6:	9415      	str	r4, [sp, #84]	; 0x54
    28e8:	9b03      	ldr	r3, [sp, #12]
    28ea:	2b00      	cmp	r3, #0
    28ec:	dc00      	bgt.n	28f0 <_dtoa_r+0x280>
    28ee:	e085      	b.n	29fc <_dtoa_r+0x38c>
    28f0:	001a      	movs	r2, r3
    28f2:	210f      	movs	r1, #15
    28f4:	4b3c      	ldr	r3, [pc, #240]	; (29e8 <_dtoa_r+0x378>)
    28f6:	400a      	ands	r2, r1
    28f8:	00d2      	lsls	r2, r2, #3
    28fa:	189b      	adds	r3, r3, r2
    28fc:	685c      	ldr	r4, [r3, #4]
    28fe:	681b      	ldr	r3, [r3, #0]
    2900:	9310      	str	r3, [sp, #64]	; 0x40
    2902:	9411      	str	r4, [sp, #68]	; 0x44
    2904:	9b03      	ldr	r3, [sp, #12]
    2906:	2402      	movs	r4, #2
    2908:	111d      	asrs	r5, r3, #4
    290a:	06eb      	lsls	r3, r5, #27
    290c:	d50a      	bpl.n	2924 <_dtoa_r+0x2b4>
    290e:	4b3a      	ldr	r3, [pc, #232]	; (29f8 <_dtoa_r+0x388>)
    2910:	400d      	ands	r5, r1
    2912:	6a1a      	ldr	r2, [r3, #32]
    2914:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    2916:	9814      	ldr	r0, [sp, #80]	; 0x50
    2918:	9915      	ldr	r1, [sp, #84]	; 0x54
    291a:	f002 f973 	bl	4c04 <__aeabi_ddiv>
    291e:	9006      	str	r0, [sp, #24]
    2920:	9107      	str	r1, [sp, #28]
    2922:	3401      	adds	r4, #1
    2924:	4e34      	ldr	r6, [pc, #208]	; (29f8 <_dtoa_r+0x388>)
    2926:	2d00      	cmp	r5, #0
    2928:	d130      	bne.n	298c <_dtoa_r+0x31c>
    292a:	9a10      	ldr	r2, [sp, #64]	; 0x40
    292c:	9b11      	ldr	r3, [sp, #68]	; 0x44
    292e:	9806      	ldr	r0, [sp, #24]
    2930:	9907      	ldr	r1, [sp, #28]
    2932:	f002 f967 	bl	4c04 <__aeabi_ddiv>
    2936:	9006      	str	r0, [sp, #24]
    2938:	9107      	str	r1, [sp, #28]
    293a:	e07a      	b.n	2a32 <_dtoa_r+0x3c2>
    293c:	2301      	movs	r3, #1
    293e:	9a23      	ldr	r2, [sp, #140]	; 0x8c
    2940:	930e      	str	r3, [sp, #56]	; 0x38
    2942:	4694      	mov	ip, r2
    2944:	9b03      	ldr	r3, [sp, #12]
    2946:	4463      	add	r3, ip
    2948:	1c5f      	adds	r7, r3, #1
    294a:	930d      	str	r3, [sp, #52]	; 0x34
    294c:	1e3b      	subs	r3, r7, #0
    294e:	dcaf      	bgt.n	28b0 <_dtoa_r+0x240>
    2950:	2301      	movs	r3, #1
    2952:	e7ad      	b.n	28b0 <_dtoa_r+0x240>
    2954:	2300      	movs	r3, #0
    2956:	e7a5      	b.n	28a4 <_dtoa_r+0x234>
    2958:	2300      	movs	r3, #0
    295a:	e7f0      	b.n	293e <_dtoa_r+0x2ce>
    295c:	2300      	movs	r3, #0
    295e:	950e      	str	r5, [sp, #56]	; 0x38
    2960:	9322      	str	r3, [sp, #136]	; 0x88
    2962:	3b01      	subs	r3, #1
    2964:	2200      	movs	r2, #0
    2966:	930d      	str	r3, [sp, #52]	; 0x34
    2968:	001f      	movs	r7, r3
    296a:	3313      	adds	r3, #19
    296c:	9223      	str	r2, [sp, #140]	; 0x8c
    296e:	e79f      	b.n	28b0 <_dtoa_r+0x240>
    2970:	2301      	movs	r3, #1
    2972:	930e      	str	r3, [sp, #56]	; 0x38
    2974:	3b02      	subs	r3, #2
    2976:	e7f5      	b.n	2964 <_dtoa_r+0x2f4>
    2978:	2301      	movs	r3, #1
    297a:	930d      	str	r3, [sp, #52]	; 0x34
    297c:	001f      	movs	r7, r3
    297e:	001a      	movs	r2, r3
    2980:	e7f4      	b.n	296c <_dtoa_r+0x2fc>
    2982:	6861      	ldr	r1, [r4, #4]
    2984:	0052      	lsls	r2, r2, #1
    2986:	3101      	adds	r1, #1
    2988:	6061      	str	r1, [r4, #4]
    298a:	e796      	b.n	28ba <_dtoa_r+0x24a>
    298c:	2301      	movs	r3, #1
    298e:	421d      	tst	r5, r3
    2990:	d008      	beq.n	29a4 <_dtoa_r+0x334>
    2992:	9810      	ldr	r0, [sp, #64]	; 0x40
    2994:	9911      	ldr	r1, [sp, #68]	; 0x44
    2996:	18e4      	adds	r4, r4, r3
    2998:	6832      	ldr	r2, [r6, #0]
    299a:	6873      	ldr	r3, [r6, #4]
    299c:	f002 fd66 	bl	546c <__aeabi_dmul>
    29a0:	9010      	str	r0, [sp, #64]	; 0x40
    29a2:	9111      	str	r1, [sp, #68]	; 0x44
    29a4:	106d      	asrs	r5, r5, #1
    29a6:	3608      	adds	r6, #8
    29a8:	e7bd      	b.n	2926 <_dtoa_r+0x2b6>
    29aa:	46c0      	nop			; (mov r8, r8)
    29ac:	7ff00000 	.word	0x7ff00000
    29b0:	0000270f 	.word	0x0000270f
    29b4:	00006241 	.word	0x00006241
    29b8:	00006244 	.word	0x00006244
    29bc:	00006214 	.word	0x00006214
    29c0:	00006215 	.word	0x00006215
    29c4:	3ff00000 	.word	0x3ff00000
    29c8:	fffffc01 	.word	0xfffffc01
    29cc:	3ff80000 	.word	0x3ff80000
    29d0:	636f4361 	.word	0x636f4361
    29d4:	3fd287a7 	.word	0x3fd287a7
    29d8:	8b60c8b3 	.word	0x8b60c8b3
    29dc:	3fc68a28 	.word	0x3fc68a28
    29e0:	509f79fb 	.word	0x509f79fb
    29e4:	3fd34413 	.word	0x3fd34413
    29e8:	000062d0 	.word	0x000062d0
    29ec:	00000432 	.word	0x00000432
    29f0:	00000412 	.word	0x00000412
    29f4:	fe100000 	.word	0xfe100000
    29f8:	000062a8 	.word	0x000062a8
    29fc:	9b03      	ldr	r3, [sp, #12]
    29fe:	2402      	movs	r4, #2
    2a00:	2b00      	cmp	r3, #0
    2a02:	d016      	beq.n	2a32 <_dtoa_r+0x3c2>
    2a04:	9814      	ldr	r0, [sp, #80]	; 0x50
    2a06:	9915      	ldr	r1, [sp, #84]	; 0x54
    2a08:	425d      	negs	r5, r3
    2a0a:	230f      	movs	r3, #15
    2a0c:	4aca      	ldr	r2, [pc, #808]	; (2d38 <_dtoa_r+0x6c8>)
    2a0e:	402b      	ands	r3, r5
    2a10:	00db      	lsls	r3, r3, #3
    2a12:	18d3      	adds	r3, r2, r3
    2a14:	681a      	ldr	r2, [r3, #0]
    2a16:	685b      	ldr	r3, [r3, #4]
    2a18:	f002 fd28 	bl	546c <__aeabi_dmul>
    2a1c:	2300      	movs	r3, #0
    2a1e:	9006      	str	r0, [sp, #24]
    2a20:	9107      	str	r1, [sp, #28]
    2a22:	4ec6      	ldr	r6, [pc, #792]	; (2d3c <_dtoa_r+0x6cc>)
    2a24:	112d      	asrs	r5, r5, #4
    2a26:	2d00      	cmp	r5, #0
    2a28:	d000      	beq.n	2a2c <_dtoa_r+0x3bc>
    2a2a:	e08c      	b.n	2b46 <_dtoa_r+0x4d6>
    2a2c:	2b00      	cmp	r3, #0
    2a2e:	d000      	beq.n	2a32 <_dtoa_r+0x3c2>
    2a30:	e781      	b.n	2936 <_dtoa_r+0x2c6>
    2a32:	9b16      	ldr	r3, [sp, #88]	; 0x58
    2a34:	2b00      	cmp	r3, #0
    2a36:	d100      	bne.n	2a3a <_dtoa_r+0x3ca>
    2a38:	e091      	b.n	2b5e <_dtoa_r+0x4ee>
    2a3a:	9a06      	ldr	r2, [sp, #24]
    2a3c:	9b07      	ldr	r3, [sp, #28]
    2a3e:	9210      	str	r2, [sp, #64]	; 0x40
    2a40:	9311      	str	r3, [sp, #68]	; 0x44
    2a42:	9810      	ldr	r0, [sp, #64]	; 0x40
    2a44:	9911      	ldr	r1, [sp, #68]	; 0x44
    2a46:	2200      	movs	r2, #0
    2a48:	4bbd      	ldr	r3, [pc, #756]	; (2d40 <_dtoa_r+0x6d0>)
    2a4a:	f001 fd79 	bl	4540 <__aeabi_dcmplt>
    2a4e:	2800      	cmp	r0, #0
    2a50:	d100      	bne.n	2a54 <_dtoa_r+0x3e4>
    2a52:	e084      	b.n	2b5e <_dtoa_r+0x4ee>
    2a54:	2f00      	cmp	r7, #0
    2a56:	d100      	bne.n	2a5a <_dtoa_r+0x3ea>
    2a58:	e081      	b.n	2b5e <_dtoa_r+0x4ee>
    2a5a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    2a5c:	2b00      	cmp	r3, #0
    2a5e:	dd3e      	ble.n	2ade <_dtoa_r+0x46e>
    2a60:	9810      	ldr	r0, [sp, #64]	; 0x40
    2a62:	9911      	ldr	r1, [sp, #68]	; 0x44
    2a64:	9b03      	ldr	r3, [sp, #12]
    2a66:	2200      	movs	r2, #0
    2a68:	1e5e      	subs	r6, r3, #1
    2a6a:	4bb6      	ldr	r3, [pc, #728]	; (2d44 <_dtoa_r+0x6d4>)
    2a6c:	f002 fcfe 	bl	546c <__aeabi_dmul>
    2a70:	9006      	str	r0, [sp, #24]
    2a72:	9107      	str	r1, [sp, #28]
    2a74:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    2a76:	3401      	adds	r4, #1
    2a78:	0020      	movs	r0, r4
    2a7a:	f003 fae1 	bl	6040 <__aeabi_i2d>
    2a7e:	9a06      	ldr	r2, [sp, #24]
    2a80:	9b07      	ldr	r3, [sp, #28]
    2a82:	f002 fcf3 	bl	546c <__aeabi_dmul>
    2a86:	2200      	movs	r2, #0
    2a88:	4baf      	ldr	r3, [pc, #700]	; (2d48 <_dtoa_r+0x6d8>)
    2a8a:	f001 fdab 	bl	45e4 <__aeabi_dadd>
    2a8e:	9012      	str	r0, [sp, #72]	; 0x48
    2a90:	9113      	str	r1, [sp, #76]	; 0x4c
    2a92:	9b12      	ldr	r3, [sp, #72]	; 0x48
    2a94:	9c13      	ldr	r4, [sp, #76]	; 0x4c
    2a96:	4aad      	ldr	r2, [pc, #692]	; (2d4c <_dtoa_r+0x6dc>)
    2a98:	9310      	str	r3, [sp, #64]	; 0x40
    2a9a:	9411      	str	r4, [sp, #68]	; 0x44
    2a9c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    2a9e:	189c      	adds	r4, r3, r2
    2aa0:	9411      	str	r4, [sp, #68]	; 0x44
    2aa2:	2d00      	cmp	r5, #0
    2aa4:	d15e      	bne.n	2b64 <_dtoa_r+0x4f4>
    2aa6:	9806      	ldr	r0, [sp, #24]
    2aa8:	9907      	ldr	r1, [sp, #28]
    2aaa:	2200      	movs	r2, #0
    2aac:	4ba8      	ldr	r3, [pc, #672]	; (2d50 <_dtoa_r+0x6e0>)
    2aae:	f002 ff5d 	bl	596c <__aeabi_dsub>
    2ab2:	9a10      	ldr	r2, [sp, #64]	; 0x40
    2ab4:	0023      	movs	r3, r4
    2ab6:	9006      	str	r0, [sp, #24]
    2ab8:	9107      	str	r1, [sp, #28]
    2aba:	f001 fd55 	bl	4568 <__aeabi_dcmpgt>
    2abe:	2800      	cmp	r0, #0
    2ac0:	d000      	beq.n	2ac4 <_dtoa_r+0x454>
    2ac2:	e301      	b.n	30c8 <_dtoa_r+0xa58>
    2ac4:	48a3      	ldr	r0, [pc, #652]	; (2d54 <_dtoa_r+0x6e4>)
    2ac6:	9913      	ldr	r1, [sp, #76]	; 0x4c
    2ac8:	4684      	mov	ip, r0
    2aca:	4461      	add	r1, ip
    2acc:	000b      	movs	r3, r1
    2ace:	9806      	ldr	r0, [sp, #24]
    2ad0:	9907      	ldr	r1, [sp, #28]
    2ad2:	9a10      	ldr	r2, [sp, #64]	; 0x40
    2ad4:	f001 fd34 	bl	4540 <__aeabi_dcmplt>
    2ad8:	2800      	cmp	r0, #0
    2ada:	d000      	beq.n	2ade <_dtoa_r+0x46e>
    2adc:	e2e8      	b.n	30b0 <_dtoa_r+0xa40>
    2ade:	9b14      	ldr	r3, [sp, #80]	; 0x50
    2ae0:	9c15      	ldr	r4, [sp, #84]	; 0x54
    2ae2:	9306      	str	r3, [sp, #24]
    2ae4:	9407      	str	r4, [sp, #28]
    2ae6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    2ae8:	2b00      	cmp	r3, #0
    2aea:	da00      	bge.n	2aee <_dtoa_r+0x47e>
    2aec:	e157      	b.n	2d9e <_dtoa_r+0x72e>
    2aee:	9a03      	ldr	r2, [sp, #12]
    2af0:	2a0e      	cmp	r2, #14
    2af2:	dd00      	ble.n	2af6 <_dtoa_r+0x486>
    2af4:	e153      	b.n	2d9e <_dtoa_r+0x72e>
    2af6:	4b90      	ldr	r3, [pc, #576]	; (2d38 <_dtoa_r+0x6c8>)
    2af8:	00d2      	lsls	r2, r2, #3
    2afa:	189b      	adds	r3, r3, r2
    2afc:	685c      	ldr	r4, [r3, #4]
    2afe:	681b      	ldr	r3, [r3, #0]
    2b00:	9308      	str	r3, [sp, #32]
    2b02:	9409      	str	r4, [sp, #36]	; 0x24
    2b04:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    2b06:	2b00      	cmp	r3, #0
    2b08:	db00      	blt.n	2b0c <_dtoa_r+0x49c>
    2b0a:	e0ce      	b.n	2caa <_dtoa_r+0x63a>
    2b0c:	2f00      	cmp	r7, #0
    2b0e:	dd00      	ble.n	2b12 <_dtoa_r+0x4a2>
    2b10:	e0cb      	b.n	2caa <_dtoa_r+0x63a>
    2b12:	d000      	beq.n	2b16 <_dtoa_r+0x4a6>
    2b14:	e2cf      	b.n	30b6 <_dtoa_r+0xa46>
    2b16:	9808      	ldr	r0, [sp, #32]
    2b18:	9909      	ldr	r1, [sp, #36]	; 0x24
    2b1a:	2200      	movs	r2, #0
    2b1c:	4b8c      	ldr	r3, [pc, #560]	; (2d50 <_dtoa_r+0x6e0>)
    2b1e:	f002 fca5 	bl	546c <__aeabi_dmul>
    2b22:	9a06      	ldr	r2, [sp, #24]
    2b24:	9b07      	ldr	r3, [sp, #28]
    2b26:	f001 fd29 	bl	457c <__aeabi_dcmpge>
    2b2a:	003e      	movs	r6, r7
    2b2c:	9708      	str	r7, [sp, #32]
    2b2e:	2800      	cmp	r0, #0
    2b30:	d000      	beq.n	2b34 <_dtoa_r+0x4c4>
    2b32:	e2a4      	b.n	307e <_dtoa_r+0xa0e>
    2b34:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    2b36:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    2b38:	1c5d      	adds	r5, r3, #1
    2b3a:	2331      	movs	r3, #49	; 0x31
    2b3c:	7013      	strb	r3, [r2, #0]
    2b3e:	9b03      	ldr	r3, [sp, #12]
    2b40:	3301      	adds	r3, #1
    2b42:	9303      	str	r3, [sp, #12]
    2b44:	e29f      	b.n	3086 <_dtoa_r+0xa16>
    2b46:	2201      	movs	r2, #1
    2b48:	4215      	tst	r5, r2
    2b4a:	d005      	beq.n	2b58 <_dtoa_r+0x4e8>
    2b4c:	18a4      	adds	r4, r4, r2
    2b4e:	6832      	ldr	r2, [r6, #0]
    2b50:	6873      	ldr	r3, [r6, #4]
    2b52:	f002 fc8b 	bl	546c <__aeabi_dmul>
    2b56:	2301      	movs	r3, #1
    2b58:	106d      	asrs	r5, r5, #1
    2b5a:	3608      	adds	r6, #8
    2b5c:	e763      	b.n	2a26 <_dtoa_r+0x3b6>
    2b5e:	9e03      	ldr	r6, [sp, #12]
    2b60:	003d      	movs	r5, r7
    2b62:	e789      	b.n	2a78 <_dtoa_r+0x408>
    2b64:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    2b66:	1e69      	subs	r1, r5, #1
    2b68:	1952      	adds	r2, r2, r5
    2b6a:	9217      	str	r2, [sp, #92]	; 0x5c
    2b6c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    2b6e:	4b72      	ldr	r3, [pc, #456]	; (2d38 <_dtoa_r+0x6c8>)
    2b70:	00c9      	lsls	r1, r1, #3
    2b72:	2a00      	cmp	r2, #0
    2b74:	d04a      	beq.n	2c0c <_dtoa_r+0x59c>
    2b76:	185b      	adds	r3, r3, r1
    2b78:	681a      	ldr	r2, [r3, #0]
    2b7a:	685b      	ldr	r3, [r3, #4]
    2b7c:	2000      	movs	r0, #0
    2b7e:	4976      	ldr	r1, [pc, #472]	; (2d58 <_dtoa_r+0x6e8>)
    2b80:	f002 f840 	bl	4c04 <__aeabi_ddiv>
    2b84:	9a10      	ldr	r2, [sp, #64]	; 0x40
    2b86:	9b11      	ldr	r3, [sp, #68]	; 0x44
    2b88:	f002 fef0 	bl	596c <__aeabi_dsub>
    2b8c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    2b8e:	9010      	str	r0, [sp, #64]	; 0x40
    2b90:	9111      	str	r1, [sp, #68]	; 0x44
    2b92:	9312      	str	r3, [sp, #72]	; 0x48
    2b94:	9806      	ldr	r0, [sp, #24]
    2b96:	9907      	ldr	r1, [sp, #28]
    2b98:	f003 fa1e 	bl	5fd8 <__aeabi_d2iz>
    2b9c:	0004      	movs	r4, r0
    2b9e:	f003 fa4f 	bl	6040 <__aeabi_i2d>
    2ba2:	0002      	movs	r2, r0
    2ba4:	000b      	movs	r3, r1
    2ba6:	9806      	ldr	r0, [sp, #24]
    2ba8:	9907      	ldr	r1, [sp, #28]
    2baa:	f002 fedf 	bl	596c <__aeabi_dsub>
    2bae:	9b12      	ldr	r3, [sp, #72]	; 0x48
    2bb0:	3430      	adds	r4, #48	; 0x30
    2bb2:	1c5d      	adds	r5, r3, #1
    2bb4:	701c      	strb	r4, [r3, #0]
    2bb6:	9a10      	ldr	r2, [sp, #64]	; 0x40
    2bb8:	9b11      	ldr	r3, [sp, #68]	; 0x44
    2bba:	9006      	str	r0, [sp, #24]
    2bbc:	9107      	str	r1, [sp, #28]
    2bbe:	f001 fcbf 	bl	4540 <__aeabi_dcmplt>
    2bc2:	2800      	cmp	r0, #0
    2bc4:	d165      	bne.n	2c92 <_dtoa_r+0x622>
    2bc6:	9a06      	ldr	r2, [sp, #24]
    2bc8:	9b07      	ldr	r3, [sp, #28]
    2bca:	2000      	movs	r0, #0
    2bcc:	495c      	ldr	r1, [pc, #368]	; (2d40 <_dtoa_r+0x6d0>)
    2bce:	f002 fecd 	bl	596c <__aeabi_dsub>
    2bd2:	9a10      	ldr	r2, [sp, #64]	; 0x40
    2bd4:	9b11      	ldr	r3, [sp, #68]	; 0x44
    2bd6:	f001 fcb3 	bl	4540 <__aeabi_dcmplt>
    2bda:	2800      	cmp	r0, #0
    2bdc:	d000      	beq.n	2be0 <_dtoa_r+0x570>
    2bde:	e0be      	b.n	2d5e <_dtoa_r+0x6ee>
    2be0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    2be2:	429d      	cmp	r5, r3
    2be4:	d100      	bne.n	2be8 <_dtoa_r+0x578>
    2be6:	e77a      	b.n	2ade <_dtoa_r+0x46e>
    2be8:	9810      	ldr	r0, [sp, #64]	; 0x40
    2bea:	9911      	ldr	r1, [sp, #68]	; 0x44
    2bec:	2200      	movs	r2, #0
    2bee:	4b55      	ldr	r3, [pc, #340]	; (2d44 <_dtoa_r+0x6d4>)
    2bf0:	f002 fc3c 	bl	546c <__aeabi_dmul>
    2bf4:	2200      	movs	r2, #0
    2bf6:	9010      	str	r0, [sp, #64]	; 0x40
    2bf8:	9111      	str	r1, [sp, #68]	; 0x44
    2bfa:	9806      	ldr	r0, [sp, #24]
    2bfc:	9907      	ldr	r1, [sp, #28]
    2bfe:	4b51      	ldr	r3, [pc, #324]	; (2d44 <_dtoa_r+0x6d4>)
    2c00:	f002 fc34 	bl	546c <__aeabi_dmul>
    2c04:	9512      	str	r5, [sp, #72]	; 0x48
    2c06:	9006      	str	r0, [sp, #24]
    2c08:	9107      	str	r1, [sp, #28]
    2c0a:	e7c3      	b.n	2b94 <_dtoa_r+0x524>
    2c0c:	1859      	adds	r1, r3, r1
    2c0e:	6808      	ldr	r0, [r1, #0]
    2c10:	6849      	ldr	r1, [r1, #4]
    2c12:	9a10      	ldr	r2, [sp, #64]	; 0x40
    2c14:	9b11      	ldr	r3, [sp, #68]	; 0x44
    2c16:	f002 fc29 	bl	546c <__aeabi_dmul>
    2c1a:	9010      	str	r0, [sp, #64]	; 0x40
    2c1c:	9111      	str	r1, [sp, #68]	; 0x44
    2c1e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    2c20:	9d17      	ldr	r5, [sp, #92]	; 0x5c
    2c22:	9806      	ldr	r0, [sp, #24]
    2c24:	9907      	ldr	r1, [sp, #28]
    2c26:	f003 f9d7 	bl	5fd8 <__aeabi_d2iz>
    2c2a:	9012      	str	r0, [sp, #72]	; 0x48
    2c2c:	f003 fa08 	bl	6040 <__aeabi_i2d>
    2c30:	0002      	movs	r2, r0
    2c32:	000b      	movs	r3, r1
    2c34:	9806      	ldr	r0, [sp, #24]
    2c36:	9907      	ldr	r1, [sp, #28]
    2c38:	f002 fe98 	bl	596c <__aeabi_dsub>
    2c3c:	9b12      	ldr	r3, [sp, #72]	; 0x48
    2c3e:	9006      	str	r0, [sp, #24]
    2c40:	9107      	str	r1, [sp, #28]
    2c42:	3330      	adds	r3, #48	; 0x30
    2c44:	7023      	strb	r3, [r4, #0]
    2c46:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    2c48:	3401      	adds	r4, #1
    2c4a:	2200      	movs	r2, #0
    2c4c:	42a3      	cmp	r3, r4
    2c4e:	d124      	bne.n	2c9a <_dtoa_r+0x62a>
    2c50:	4b41      	ldr	r3, [pc, #260]	; (2d58 <_dtoa_r+0x6e8>)
    2c52:	9810      	ldr	r0, [sp, #64]	; 0x40
    2c54:	9911      	ldr	r1, [sp, #68]	; 0x44
    2c56:	f001 fcc5 	bl	45e4 <__aeabi_dadd>
    2c5a:	0002      	movs	r2, r0
    2c5c:	000b      	movs	r3, r1
    2c5e:	9806      	ldr	r0, [sp, #24]
    2c60:	9907      	ldr	r1, [sp, #28]
    2c62:	f001 fc81 	bl	4568 <__aeabi_dcmpgt>
    2c66:	2800      	cmp	r0, #0
    2c68:	d000      	beq.n	2c6c <_dtoa_r+0x5fc>
    2c6a:	e078      	b.n	2d5e <_dtoa_r+0x6ee>
    2c6c:	9a10      	ldr	r2, [sp, #64]	; 0x40
    2c6e:	9b11      	ldr	r3, [sp, #68]	; 0x44
    2c70:	2000      	movs	r0, #0
    2c72:	4939      	ldr	r1, [pc, #228]	; (2d58 <_dtoa_r+0x6e8>)
    2c74:	f002 fe7a 	bl	596c <__aeabi_dsub>
    2c78:	0002      	movs	r2, r0
    2c7a:	000b      	movs	r3, r1
    2c7c:	9806      	ldr	r0, [sp, #24]
    2c7e:	9907      	ldr	r1, [sp, #28]
    2c80:	f001 fc5e 	bl	4540 <__aeabi_dcmplt>
    2c84:	2800      	cmp	r0, #0
    2c86:	d100      	bne.n	2c8a <_dtoa_r+0x61a>
    2c88:	e729      	b.n	2ade <_dtoa_r+0x46e>
    2c8a:	1e6b      	subs	r3, r5, #1
    2c8c:	781a      	ldrb	r2, [r3, #0]
    2c8e:	2a30      	cmp	r2, #48	; 0x30
    2c90:	d001      	beq.n	2c96 <_dtoa_r+0x626>
    2c92:	9603      	str	r6, [sp, #12]
    2c94:	e03f      	b.n	2d16 <_dtoa_r+0x6a6>
    2c96:	001d      	movs	r5, r3
    2c98:	e7f7      	b.n	2c8a <_dtoa_r+0x61a>
    2c9a:	9806      	ldr	r0, [sp, #24]
    2c9c:	9907      	ldr	r1, [sp, #28]
    2c9e:	4b29      	ldr	r3, [pc, #164]	; (2d44 <_dtoa_r+0x6d4>)
    2ca0:	f002 fbe4 	bl	546c <__aeabi_dmul>
    2ca4:	9006      	str	r0, [sp, #24]
    2ca6:	9107      	str	r1, [sp, #28]
    2ca8:	e7bb      	b.n	2c22 <_dtoa_r+0x5b2>
    2caa:	9e0a      	ldr	r6, [sp, #40]	; 0x28
    2cac:	9a08      	ldr	r2, [sp, #32]
    2cae:	9b09      	ldr	r3, [sp, #36]	; 0x24
    2cb0:	9806      	ldr	r0, [sp, #24]
    2cb2:	9907      	ldr	r1, [sp, #28]
    2cb4:	f001 ffa6 	bl	4c04 <__aeabi_ddiv>
    2cb8:	f003 f98e 	bl	5fd8 <__aeabi_d2iz>
    2cbc:	0004      	movs	r4, r0
    2cbe:	f003 f9bf 	bl	6040 <__aeabi_i2d>
    2cc2:	9a08      	ldr	r2, [sp, #32]
    2cc4:	9b09      	ldr	r3, [sp, #36]	; 0x24
    2cc6:	f002 fbd1 	bl	546c <__aeabi_dmul>
    2cca:	000b      	movs	r3, r1
    2ccc:	0002      	movs	r2, r0
    2cce:	9806      	ldr	r0, [sp, #24]
    2cd0:	9907      	ldr	r1, [sp, #28]
    2cd2:	f002 fe4b 	bl	596c <__aeabi_dsub>
    2cd6:	0023      	movs	r3, r4
    2cd8:	3330      	adds	r3, #48	; 0x30
    2cda:	7033      	strb	r3, [r6, #0]
    2cdc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    2cde:	1c75      	adds	r5, r6, #1
    2ce0:	1aeb      	subs	r3, r5, r3
    2ce2:	429f      	cmp	r7, r3
    2ce4:	d14c      	bne.n	2d80 <_dtoa_r+0x710>
    2ce6:	0002      	movs	r2, r0
    2ce8:	000b      	movs	r3, r1
    2cea:	f001 fc7b 	bl	45e4 <__aeabi_dadd>
    2cee:	0006      	movs	r6, r0
    2cf0:	000f      	movs	r7, r1
    2cf2:	0002      	movs	r2, r0
    2cf4:	000b      	movs	r3, r1
    2cf6:	9808      	ldr	r0, [sp, #32]
    2cf8:	9909      	ldr	r1, [sp, #36]	; 0x24
    2cfa:	f001 fc21 	bl	4540 <__aeabi_dcmplt>
    2cfe:	2800      	cmp	r0, #0
    2d00:	d12c      	bne.n	2d5c <_dtoa_r+0x6ec>
    2d02:	9808      	ldr	r0, [sp, #32]
    2d04:	9909      	ldr	r1, [sp, #36]	; 0x24
    2d06:	0032      	movs	r2, r6
    2d08:	003b      	movs	r3, r7
    2d0a:	f001 fc13 	bl	4534 <__aeabi_dcmpeq>
    2d0e:	2800      	cmp	r0, #0
    2d10:	d001      	beq.n	2d16 <_dtoa_r+0x6a6>
    2d12:	07e3      	lsls	r3, r4, #31
    2d14:	d422      	bmi.n	2d5c <_dtoa_r+0x6ec>
    2d16:	9905      	ldr	r1, [sp, #20]
    2d18:	9804      	ldr	r0, [sp, #16]
    2d1a:	f000 fce7 	bl	36ec <_Bfree>
    2d1e:	2300      	movs	r3, #0
    2d20:	702b      	strb	r3, [r5, #0]
    2d22:	9b03      	ldr	r3, [sp, #12]
    2d24:	9a24      	ldr	r2, [sp, #144]	; 0x90
    2d26:	3301      	adds	r3, #1
    2d28:	6013      	str	r3, [r2, #0]
    2d2a:	9b26      	ldr	r3, [sp, #152]	; 0x98
    2d2c:	2b00      	cmp	r3, #0
    2d2e:	d100      	bne.n	2d32 <_dtoa_r+0x6c2>
    2d30:	e275      	b.n	321e <_dtoa_r+0xbae>
    2d32:	601d      	str	r5, [r3, #0]
    2d34:	e273      	b.n	321e <_dtoa_r+0xbae>
    2d36:	46c0      	nop			; (mov r8, r8)
    2d38:	000062d0 	.word	0x000062d0
    2d3c:	000062a8 	.word	0x000062a8
    2d40:	3ff00000 	.word	0x3ff00000
    2d44:	40240000 	.word	0x40240000
    2d48:	401c0000 	.word	0x401c0000
    2d4c:	fcc00000 	.word	0xfcc00000
    2d50:	40140000 	.word	0x40140000
    2d54:	7cc00000 	.word	0x7cc00000
    2d58:	3fe00000 	.word	0x3fe00000
    2d5c:	9e03      	ldr	r6, [sp, #12]
    2d5e:	1e6b      	subs	r3, r5, #1
    2d60:	781a      	ldrb	r2, [r3, #0]
    2d62:	2a39      	cmp	r2, #57	; 0x39
    2d64:	d106      	bne.n	2d74 <_dtoa_r+0x704>
    2d66:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    2d68:	429a      	cmp	r2, r3
    2d6a:	d107      	bne.n	2d7c <_dtoa_r+0x70c>
    2d6c:	2330      	movs	r3, #48	; 0x30
    2d6e:	7013      	strb	r3, [r2, #0]
    2d70:	0013      	movs	r3, r2
    2d72:	3601      	adds	r6, #1
    2d74:	781a      	ldrb	r2, [r3, #0]
    2d76:	3201      	adds	r2, #1
    2d78:	701a      	strb	r2, [r3, #0]
    2d7a:	e78a      	b.n	2c92 <_dtoa_r+0x622>
    2d7c:	001d      	movs	r5, r3
    2d7e:	e7ee      	b.n	2d5e <_dtoa_r+0x6ee>
    2d80:	2200      	movs	r2, #0
    2d82:	4bcf      	ldr	r3, [pc, #828]	; (30c0 <_dtoa_r+0xa50>)
    2d84:	f002 fb72 	bl	546c <__aeabi_dmul>
    2d88:	2200      	movs	r2, #0
    2d8a:	2300      	movs	r3, #0
    2d8c:	9006      	str	r0, [sp, #24]
    2d8e:	9107      	str	r1, [sp, #28]
    2d90:	002e      	movs	r6, r5
    2d92:	f001 fbcf 	bl	4534 <__aeabi_dcmpeq>
    2d96:	2800      	cmp	r0, #0
    2d98:	d100      	bne.n	2d9c <_dtoa_r+0x72c>
    2d9a:	e787      	b.n	2cac <_dtoa_r+0x63c>
    2d9c:	e7bb      	b.n	2d16 <_dtoa_r+0x6a6>
    2d9e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    2da0:	2a00      	cmp	r2, #0
    2da2:	d100      	bne.n	2da6 <_dtoa_r+0x736>
    2da4:	e087      	b.n	2eb6 <_dtoa_r+0x846>
    2da6:	9a22      	ldr	r2, [sp, #136]	; 0x88
    2da8:	2a01      	cmp	r2, #1
    2daa:	dc6e      	bgt.n	2e8a <_dtoa_r+0x81a>
    2dac:	9a18      	ldr	r2, [sp, #96]	; 0x60
    2dae:	2a00      	cmp	r2, #0
    2db0:	d067      	beq.n	2e82 <_dtoa_r+0x812>
    2db2:	4ac4      	ldr	r2, [pc, #784]	; (30c4 <_dtoa_r+0xa54>)
    2db4:	189b      	adds	r3, r3, r2
    2db6:	9d08      	ldr	r5, [sp, #32]
    2db8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
    2dba:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    2dbc:	2101      	movs	r1, #1
    2dbe:	18d2      	adds	r2, r2, r3
    2dc0:	920b      	str	r2, [sp, #44]	; 0x2c
    2dc2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    2dc4:	9804      	ldr	r0, [sp, #16]
    2dc6:	18d3      	adds	r3, r2, r3
    2dc8:	930c      	str	r3, [sp, #48]	; 0x30
    2dca:	f000 fd2d 	bl	3828 <__i2b>
    2dce:	0006      	movs	r6, r0
    2dd0:	2c00      	cmp	r4, #0
    2dd2:	dd0e      	ble.n	2df2 <_dtoa_r+0x782>
    2dd4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    2dd6:	2b00      	cmp	r3, #0
    2dd8:	dd0b      	ble.n	2df2 <_dtoa_r+0x782>
    2dda:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    2ddc:	0023      	movs	r3, r4
    2dde:	4294      	cmp	r4, r2
    2de0:	dd00      	ble.n	2de4 <_dtoa_r+0x774>
    2de2:	0013      	movs	r3, r2
    2de4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    2de6:	1ae4      	subs	r4, r4, r3
    2de8:	1ad2      	subs	r2, r2, r3
    2dea:	920b      	str	r2, [sp, #44]	; 0x2c
    2dec:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    2dee:	1ad3      	subs	r3, r2, r3
    2df0:	930c      	str	r3, [sp, #48]	; 0x30
    2df2:	9b08      	ldr	r3, [sp, #32]
    2df4:	2b00      	cmp	r3, #0
    2df6:	d01e      	beq.n	2e36 <_dtoa_r+0x7c6>
    2df8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    2dfa:	2b00      	cmp	r3, #0
    2dfc:	d05f      	beq.n	2ebe <_dtoa_r+0x84e>
    2dfe:	2d00      	cmp	r5, #0
    2e00:	dd11      	ble.n	2e26 <_dtoa_r+0x7b6>
    2e02:	0031      	movs	r1, r6
    2e04:	002a      	movs	r2, r5
    2e06:	9804      	ldr	r0, [sp, #16]
    2e08:	f000 fda6 	bl	3958 <__pow5mult>
    2e0c:	9a05      	ldr	r2, [sp, #20]
    2e0e:	0001      	movs	r1, r0
    2e10:	0006      	movs	r6, r0
    2e12:	9804      	ldr	r0, [sp, #16]
    2e14:	f000 fd11 	bl	383a <__multiply>
    2e18:	9905      	ldr	r1, [sp, #20]
    2e1a:	9010      	str	r0, [sp, #64]	; 0x40
    2e1c:	9804      	ldr	r0, [sp, #16]
    2e1e:	f000 fc65 	bl	36ec <_Bfree>
    2e22:	9b10      	ldr	r3, [sp, #64]	; 0x40
    2e24:	9305      	str	r3, [sp, #20]
    2e26:	9b08      	ldr	r3, [sp, #32]
    2e28:	1b5a      	subs	r2, r3, r5
    2e2a:	d004      	beq.n	2e36 <_dtoa_r+0x7c6>
    2e2c:	9905      	ldr	r1, [sp, #20]
    2e2e:	9804      	ldr	r0, [sp, #16]
    2e30:	f000 fd92 	bl	3958 <__pow5mult>
    2e34:	9005      	str	r0, [sp, #20]
    2e36:	2101      	movs	r1, #1
    2e38:	9804      	ldr	r0, [sp, #16]
    2e3a:	f000 fcf5 	bl	3828 <__i2b>
    2e3e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    2e40:	9008      	str	r0, [sp, #32]
    2e42:	2b00      	cmp	r3, #0
    2e44:	dd3d      	ble.n	2ec2 <_dtoa_r+0x852>
    2e46:	001a      	movs	r2, r3
    2e48:	0001      	movs	r1, r0
    2e4a:	9804      	ldr	r0, [sp, #16]
    2e4c:	f000 fd84 	bl	3958 <__pow5mult>
    2e50:	9b22      	ldr	r3, [sp, #136]	; 0x88
    2e52:	9008      	str	r0, [sp, #32]
    2e54:	2500      	movs	r5, #0
    2e56:	2b01      	cmp	r3, #1
    2e58:	dc3b      	bgt.n	2ed2 <_dtoa_r+0x862>
    2e5a:	2500      	movs	r5, #0
    2e5c:	9b06      	ldr	r3, [sp, #24]
    2e5e:	42ab      	cmp	r3, r5
    2e60:	d133      	bne.n	2eca <_dtoa_r+0x85a>
    2e62:	9b07      	ldr	r3, [sp, #28]
    2e64:	031b      	lsls	r3, r3, #12
    2e66:	42ab      	cmp	r3, r5
    2e68:	d12f      	bne.n	2eca <_dtoa_r+0x85a>
    2e6a:	9b19      	ldr	r3, [sp, #100]	; 0x64
    2e6c:	9a07      	ldr	r2, [sp, #28]
    2e6e:	4213      	tst	r3, r2
    2e70:	d02b      	beq.n	2eca <_dtoa_r+0x85a>
    2e72:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    2e74:	3501      	adds	r5, #1
    2e76:	3301      	adds	r3, #1
    2e78:	930b      	str	r3, [sp, #44]	; 0x2c
    2e7a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    2e7c:	3301      	adds	r3, #1
    2e7e:	930c      	str	r3, [sp, #48]	; 0x30
    2e80:	e023      	b.n	2eca <_dtoa_r+0x85a>
    2e82:	2336      	movs	r3, #54	; 0x36
    2e84:	9a1a      	ldr	r2, [sp, #104]	; 0x68
    2e86:	1a9b      	subs	r3, r3, r2
    2e88:	e795      	b.n	2db6 <_dtoa_r+0x746>
    2e8a:	9b08      	ldr	r3, [sp, #32]
    2e8c:	1e7d      	subs	r5, r7, #1
    2e8e:	42ab      	cmp	r3, r5
    2e90:	db06      	blt.n	2ea0 <_dtoa_r+0x830>
    2e92:	1b5d      	subs	r5, r3, r5
    2e94:	2f00      	cmp	r7, #0
    2e96:	da0b      	bge.n	2eb0 <_dtoa_r+0x840>
    2e98:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    2e9a:	1bdc      	subs	r4, r3, r7
    2e9c:	2300      	movs	r3, #0
    2e9e:	e78c      	b.n	2dba <_dtoa_r+0x74a>
    2ea0:	9b08      	ldr	r3, [sp, #32]
    2ea2:	9508      	str	r5, [sp, #32]
    2ea4:	1aea      	subs	r2, r5, r3
    2ea6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    2ea8:	2500      	movs	r5, #0
    2eaa:	189b      	adds	r3, r3, r2
    2eac:	930f      	str	r3, [sp, #60]	; 0x3c
    2eae:	e7f1      	b.n	2e94 <_dtoa_r+0x824>
    2eb0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
    2eb2:	003b      	movs	r3, r7
    2eb4:	e781      	b.n	2dba <_dtoa_r+0x74a>
    2eb6:	9d08      	ldr	r5, [sp, #32]
    2eb8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
    2eba:	9e0e      	ldr	r6, [sp, #56]	; 0x38
    2ebc:	e788      	b.n	2dd0 <_dtoa_r+0x760>
    2ebe:	9a08      	ldr	r2, [sp, #32]
    2ec0:	e7b4      	b.n	2e2c <_dtoa_r+0x7bc>
    2ec2:	9b22      	ldr	r3, [sp, #136]	; 0x88
    2ec4:	2500      	movs	r5, #0
    2ec6:	2b01      	cmp	r3, #1
    2ec8:	ddc7      	ble.n	2e5a <_dtoa_r+0x7ea>
    2eca:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    2ecc:	2001      	movs	r0, #1
    2ece:	2b00      	cmp	r3, #0
    2ed0:	d00b      	beq.n	2eea <_dtoa_r+0x87a>
    2ed2:	9b08      	ldr	r3, [sp, #32]
    2ed4:	9a08      	ldr	r2, [sp, #32]
    2ed6:	691b      	ldr	r3, [r3, #16]
    2ed8:	930f      	str	r3, [sp, #60]	; 0x3c
    2eda:	3303      	adds	r3, #3
    2edc:	009b      	lsls	r3, r3, #2
    2ede:	18d3      	adds	r3, r2, r3
    2ee0:	6858      	ldr	r0, [r3, #4]
    2ee2:	f000 fc58 	bl	3796 <__hi0bits>
    2ee6:	2320      	movs	r3, #32
    2ee8:	1a18      	subs	r0, r3, r0
    2eea:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    2eec:	18c0      	adds	r0, r0, r3
    2eee:	231f      	movs	r3, #31
    2ef0:	4018      	ands	r0, r3
    2ef2:	d100      	bne.n	2ef6 <_dtoa_r+0x886>
    2ef4:	e0ab      	b.n	304e <_dtoa_r+0x9de>
    2ef6:	3301      	adds	r3, #1
    2ef8:	1a1b      	subs	r3, r3, r0
    2efa:	2b04      	cmp	r3, #4
    2efc:	dc00      	bgt.n	2f00 <_dtoa_r+0x890>
    2efe:	e09b      	b.n	3038 <_dtoa_r+0x9c8>
    2f00:	231c      	movs	r3, #28
    2f02:	1a18      	subs	r0, r3, r0
    2f04:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    2f06:	1824      	adds	r4, r4, r0
    2f08:	181b      	adds	r3, r3, r0
    2f0a:	930b      	str	r3, [sp, #44]	; 0x2c
    2f0c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    2f0e:	181b      	adds	r3, r3, r0
    2f10:	930c      	str	r3, [sp, #48]	; 0x30
    2f12:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    2f14:	2b00      	cmp	r3, #0
    2f16:	dd05      	ble.n	2f24 <_dtoa_r+0x8b4>
    2f18:	001a      	movs	r2, r3
    2f1a:	9905      	ldr	r1, [sp, #20]
    2f1c:	9804      	ldr	r0, [sp, #16]
    2f1e:	f000 fd6d 	bl	39fc <__lshift>
    2f22:	9005      	str	r0, [sp, #20]
    2f24:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    2f26:	2b00      	cmp	r3, #0
    2f28:	dd05      	ble.n	2f36 <_dtoa_r+0x8c6>
    2f2a:	001a      	movs	r2, r3
    2f2c:	9908      	ldr	r1, [sp, #32]
    2f2e:	9804      	ldr	r0, [sp, #16]
    2f30:	f000 fd64 	bl	39fc <__lshift>
    2f34:	9008      	str	r0, [sp, #32]
    2f36:	9b16      	ldr	r3, [sp, #88]	; 0x58
    2f38:	2b00      	cmp	r3, #0
    2f3a:	d100      	bne.n	2f3e <_dtoa_r+0x8ce>
    2f3c:	e089      	b.n	3052 <_dtoa_r+0x9e2>
    2f3e:	9908      	ldr	r1, [sp, #32]
    2f40:	9805      	ldr	r0, [sp, #20]
    2f42:	f000 fdac 	bl	3a9e <__mcmp>
    2f46:	2800      	cmp	r0, #0
    2f48:	db00      	blt.n	2f4c <_dtoa_r+0x8dc>
    2f4a:	e082      	b.n	3052 <_dtoa_r+0x9e2>
    2f4c:	9b03      	ldr	r3, [sp, #12]
    2f4e:	220a      	movs	r2, #10
    2f50:	3b01      	subs	r3, #1
    2f52:	9303      	str	r3, [sp, #12]
    2f54:	9905      	ldr	r1, [sp, #20]
    2f56:	2300      	movs	r3, #0
    2f58:	9804      	ldr	r0, [sp, #16]
    2f5a:	f000 fbe0 	bl	371e <__multadd>
    2f5e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    2f60:	9005      	str	r0, [sp, #20]
    2f62:	2b00      	cmp	r3, #0
    2f64:	d100      	bne.n	2f68 <_dtoa_r+0x8f8>
    2f66:	e15d      	b.n	3224 <_dtoa_r+0xbb4>
    2f68:	2300      	movs	r3, #0
    2f6a:	0031      	movs	r1, r6
    2f6c:	220a      	movs	r2, #10
    2f6e:	9804      	ldr	r0, [sp, #16]
    2f70:	f000 fbd5 	bl	371e <__multadd>
    2f74:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    2f76:	0006      	movs	r6, r0
    2f78:	2b00      	cmp	r3, #0
    2f7a:	dc02      	bgt.n	2f82 <_dtoa_r+0x912>
    2f7c:	9b22      	ldr	r3, [sp, #136]	; 0x88
    2f7e:	2b02      	cmp	r3, #2
    2f80:	dc6d      	bgt.n	305e <_dtoa_r+0x9ee>
    2f82:	2c00      	cmp	r4, #0
    2f84:	dd05      	ble.n	2f92 <_dtoa_r+0x922>
    2f86:	0031      	movs	r1, r6
    2f88:	0022      	movs	r2, r4
    2f8a:	9804      	ldr	r0, [sp, #16]
    2f8c:	f000 fd36 	bl	39fc <__lshift>
    2f90:	0006      	movs	r6, r0
    2f92:	0030      	movs	r0, r6
    2f94:	2d00      	cmp	r5, #0
    2f96:	d011      	beq.n	2fbc <_dtoa_r+0x94c>
    2f98:	6871      	ldr	r1, [r6, #4]
    2f9a:	9804      	ldr	r0, [sp, #16]
    2f9c:	f000 fb6e 	bl	367c <_Balloc>
    2fa0:	0031      	movs	r1, r6
    2fa2:	0004      	movs	r4, r0
    2fa4:	6933      	ldr	r3, [r6, #16]
    2fa6:	310c      	adds	r1, #12
    2fa8:	1c9a      	adds	r2, r3, #2
    2faa:	0092      	lsls	r2, r2, #2
    2fac:	300c      	adds	r0, #12
    2fae:	f000 fb5c 	bl	366a <memcpy>
    2fb2:	2201      	movs	r2, #1
    2fb4:	0021      	movs	r1, r4
    2fb6:	9804      	ldr	r0, [sp, #16]
    2fb8:	f000 fd20 	bl	39fc <__lshift>
    2fbc:	9f0d      	ldr	r7, [sp, #52]	; 0x34
    2fbe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    2fc0:	3f01      	subs	r7, #1
    2fc2:	930b      	str	r3, [sp, #44]	; 0x2c
    2fc4:	19db      	adds	r3, r3, r7
    2fc6:	0037      	movs	r7, r6
    2fc8:	0006      	movs	r6, r0
    2fca:	930f      	str	r3, [sp, #60]	; 0x3c
    2fcc:	9908      	ldr	r1, [sp, #32]
    2fce:	9805      	ldr	r0, [sp, #20]
    2fd0:	f7ff faca 	bl	2568 <quorem>
    2fd4:	0039      	movs	r1, r7
    2fd6:	900d      	str	r0, [sp, #52]	; 0x34
    2fd8:	0004      	movs	r4, r0
    2fda:	9805      	ldr	r0, [sp, #20]
    2fdc:	f000 fd5f 	bl	3a9e <__mcmp>
    2fe0:	0032      	movs	r2, r6
    2fe2:	900e      	str	r0, [sp, #56]	; 0x38
    2fe4:	9908      	ldr	r1, [sp, #32]
    2fe6:	9804      	ldr	r0, [sp, #16]
    2fe8:	f000 fd72 	bl	3ad0 <__mdiff>
    2fec:	2301      	movs	r3, #1
    2fee:	930c      	str	r3, [sp, #48]	; 0x30
    2ff0:	68c3      	ldr	r3, [r0, #12]
    2ff2:	3430      	adds	r4, #48	; 0x30
    2ff4:	0005      	movs	r5, r0
    2ff6:	2b00      	cmp	r3, #0
    2ff8:	d104      	bne.n	3004 <_dtoa_r+0x994>
    2ffa:	0001      	movs	r1, r0
    2ffc:	9805      	ldr	r0, [sp, #20]
    2ffe:	f000 fd4e 	bl	3a9e <__mcmp>
    3002:	900c      	str	r0, [sp, #48]	; 0x30
    3004:	0029      	movs	r1, r5
    3006:	9804      	ldr	r0, [sp, #16]
    3008:	f000 fb70 	bl	36ec <_Bfree>
    300c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    300e:	9a22      	ldr	r2, [sp, #136]	; 0x88
    3010:	4313      	orrs	r3, r2
    3012:	d000      	beq.n	3016 <_dtoa_r+0x9a6>
    3014:	e089      	b.n	312a <_dtoa_r+0xaba>
    3016:	9a06      	ldr	r2, [sp, #24]
    3018:	3301      	adds	r3, #1
    301a:	4213      	tst	r3, r2
    301c:	d000      	beq.n	3020 <_dtoa_r+0x9b0>
    301e:	e084      	b.n	312a <_dtoa_r+0xaba>
    3020:	2c39      	cmp	r4, #57	; 0x39
    3022:	d100      	bne.n	3026 <_dtoa_r+0x9b6>
    3024:	e0a3      	b.n	316e <_dtoa_r+0xafe>
    3026:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    3028:	2b00      	cmp	r3, #0
    302a:	dd01      	ble.n	3030 <_dtoa_r+0x9c0>
    302c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
    302e:	3431      	adds	r4, #49	; 0x31
    3030:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    3032:	1c5d      	adds	r5, r3, #1
    3034:	701c      	strb	r4, [r3, #0]
    3036:	e027      	b.n	3088 <_dtoa_r+0xa18>
    3038:	2b04      	cmp	r3, #4
    303a:	d100      	bne.n	303e <_dtoa_r+0x9ce>
    303c:	e769      	b.n	2f12 <_dtoa_r+0x8a2>
    303e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    3040:	331c      	adds	r3, #28
    3042:	18d2      	adds	r2, r2, r3
    3044:	920b      	str	r2, [sp, #44]	; 0x2c
    3046:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    3048:	18e4      	adds	r4, r4, r3
    304a:	18d3      	adds	r3, r2, r3
    304c:	e760      	b.n	2f10 <_dtoa_r+0x8a0>
    304e:	0003      	movs	r3, r0
    3050:	e7f5      	b.n	303e <_dtoa_r+0x9ce>
    3052:	2f00      	cmp	r7, #0
    3054:	dc3c      	bgt.n	30d0 <_dtoa_r+0xa60>
    3056:	9b22      	ldr	r3, [sp, #136]	; 0x88
    3058:	2b02      	cmp	r3, #2
    305a:	dd39      	ble.n	30d0 <_dtoa_r+0xa60>
    305c:	970d      	str	r7, [sp, #52]	; 0x34
    305e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    3060:	2b00      	cmp	r3, #0
    3062:	d10c      	bne.n	307e <_dtoa_r+0xa0e>
    3064:	9908      	ldr	r1, [sp, #32]
    3066:	2205      	movs	r2, #5
    3068:	9804      	ldr	r0, [sp, #16]
    306a:	f000 fb58 	bl	371e <__multadd>
    306e:	9008      	str	r0, [sp, #32]
    3070:	0001      	movs	r1, r0
    3072:	9805      	ldr	r0, [sp, #20]
    3074:	f000 fd13 	bl	3a9e <__mcmp>
    3078:	2800      	cmp	r0, #0
    307a:	dd00      	ble.n	307e <_dtoa_r+0xa0e>
    307c:	e55a      	b.n	2b34 <_dtoa_r+0x4c4>
    307e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    3080:	9d0a      	ldr	r5, [sp, #40]	; 0x28
    3082:	43db      	mvns	r3, r3
    3084:	9303      	str	r3, [sp, #12]
    3086:	2700      	movs	r7, #0
    3088:	9908      	ldr	r1, [sp, #32]
    308a:	9804      	ldr	r0, [sp, #16]
    308c:	f000 fb2e 	bl	36ec <_Bfree>
    3090:	2e00      	cmp	r6, #0
    3092:	d100      	bne.n	3096 <_dtoa_r+0xa26>
    3094:	e63f      	b.n	2d16 <_dtoa_r+0x6a6>
    3096:	2f00      	cmp	r7, #0
    3098:	d005      	beq.n	30a6 <_dtoa_r+0xa36>
    309a:	42b7      	cmp	r7, r6
    309c:	d003      	beq.n	30a6 <_dtoa_r+0xa36>
    309e:	0039      	movs	r1, r7
    30a0:	9804      	ldr	r0, [sp, #16]
    30a2:	f000 fb23 	bl	36ec <_Bfree>
    30a6:	0031      	movs	r1, r6
    30a8:	9804      	ldr	r0, [sp, #16]
    30aa:	f000 fb1f 	bl	36ec <_Bfree>
    30ae:	e632      	b.n	2d16 <_dtoa_r+0x6a6>
    30b0:	9508      	str	r5, [sp, #32]
    30b2:	002e      	movs	r6, r5
    30b4:	e7e3      	b.n	307e <_dtoa_r+0xa0e>
    30b6:	2300      	movs	r3, #0
    30b8:	9308      	str	r3, [sp, #32]
    30ba:	001e      	movs	r6, r3
    30bc:	e7df      	b.n	307e <_dtoa_r+0xa0e>
    30be:	46c0      	nop			; (mov r8, r8)
    30c0:	40240000 	.word	0x40240000
    30c4:	00000433 	.word	0x00000433
    30c8:	9603      	str	r6, [sp, #12]
    30ca:	9508      	str	r5, [sp, #32]
    30cc:	002e      	movs	r6, r5
    30ce:	e531      	b.n	2b34 <_dtoa_r+0x4c4>
    30d0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    30d2:	970d      	str	r7, [sp, #52]	; 0x34
    30d4:	2b00      	cmp	r3, #0
    30d6:	d000      	beq.n	30da <_dtoa_r+0xa6a>
    30d8:	e753      	b.n	2f82 <_dtoa_r+0x912>
    30da:	9d0a      	ldr	r5, [sp, #40]	; 0x28
    30dc:	9908      	ldr	r1, [sp, #32]
    30de:	9805      	ldr	r0, [sp, #20]
    30e0:	f7ff fa42 	bl	2568 <quorem>
    30e4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    30e6:	3030      	adds	r0, #48	; 0x30
    30e8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    30ea:	7028      	strb	r0, [r5, #0]
    30ec:	3501      	adds	r5, #1
    30ee:	0004      	movs	r4, r0
    30f0:	1aeb      	subs	r3, r5, r3
    30f2:	429a      	cmp	r2, r3
    30f4:	dc78      	bgt.n	31e8 <_dtoa_r+0xb78>
    30f6:	1e15      	subs	r5, r2, #0
    30f8:	dc00      	bgt.n	30fc <_dtoa_r+0xa8c>
    30fa:	2501      	movs	r5, #1
    30fc:	2700      	movs	r7, #0
    30fe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    3100:	195d      	adds	r5, r3, r5
    3102:	9905      	ldr	r1, [sp, #20]
    3104:	2201      	movs	r2, #1
    3106:	9804      	ldr	r0, [sp, #16]
    3108:	f000 fc78 	bl	39fc <__lshift>
    310c:	9908      	ldr	r1, [sp, #32]
    310e:	9005      	str	r0, [sp, #20]
    3110:	f000 fcc5 	bl	3a9e <__mcmp>
    3114:	2800      	cmp	r0, #0
    3116:	dc2f      	bgt.n	3178 <_dtoa_r+0xb08>
    3118:	d101      	bne.n	311e <_dtoa_r+0xaae>
    311a:	07e3      	lsls	r3, r4, #31
    311c:	d42c      	bmi.n	3178 <_dtoa_r+0xb08>
    311e:	1e6b      	subs	r3, r5, #1
    3120:	781a      	ldrb	r2, [r3, #0]
    3122:	2a30      	cmp	r2, #48	; 0x30
    3124:	d1b0      	bne.n	3088 <_dtoa_r+0xa18>
    3126:	001d      	movs	r5, r3
    3128:	e7f9      	b.n	311e <_dtoa_r+0xaae>
    312a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    312c:	2b00      	cmp	r3, #0
    312e:	db07      	blt.n	3140 <_dtoa_r+0xad0>
    3130:	001d      	movs	r5, r3
    3132:	9b22      	ldr	r3, [sp, #136]	; 0x88
    3134:	431d      	orrs	r5, r3
    3136:	d126      	bne.n	3186 <_dtoa_r+0xb16>
    3138:	2301      	movs	r3, #1
    313a:	9a06      	ldr	r2, [sp, #24]
    313c:	4213      	tst	r3, r2
    313e:	d122      	bne.n	3186 <_dtoa_r+0xb16>
    3140:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    3142:	2b00      	cmp	r3, #0
    3144:	dc00      	bgt.n	3148 <_dtoa_r+0xad8>
    3146:	e773      	b.n	3030 <_dtoa_r+0x9c0>
    3148:	9905      	ldr	r1, [sp, #20]
    314a:	2201      	movs	r2, #1
    314c:	9804      	ldr	r0, [sp, #16]
    314e:	f000 fc55 	bl	39fc <__lshift>
    3152:	9908      	ldr	r1, [sp, #32]
    3154:	9005      	str	r0, [sp, #20]
    3156:	f000 fca2 	bl	3a9e <__mcmp>
    315a:	2800      	cmp	r0, #0
    315c:	dc04      	bgt.n	3168 <_dtoa_r+0xaf8>
    315e:	d000      	beq.n	3162 <_dtoa_r+0xaf2>
    3160:	e766      	b.n	3030 <_dtoa_r+0x9c0>
    3162:	07e3      	lsls	r3, r4, #31
    3164:	d400      	bmi.n	3168 <_dtoa_r+0xaf8>
    3166:	e763      	b.n	3030 <_dtoa_r+0x9c0>
    3168:	2c39      	cmp	r4, #57	; 0x39
    316a:	d000      	beq.n	316e <_dtoa_r+0xafe>
    316c:	e75e      	b.n	302c <_dtoa_r+0x9bc>
    316e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    3170:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    3172:	1c5d      	adds	r5, r3, #1
    3174:	2339      	movs	r3, #57	; 0x39
    3176:	7013      	strb	r3, [r2, #0]
    3178:	1e6b      	subs	r3, r5, #1
    317a:	781a      	ldrb	r2, [r3, #0]
    317c:	2a39      	cmp	r2, #57	; 0x39
    317e:	d03b      	beq.n	31f8 <_dtoa_r+0xb88>
    3180:	3201      	adds	r2, #1
    3182:	701a      	strb	r2, [r3, #0]
    3184:	e780      	b.n	3088 <_dtoa_r+0xa18>
    3186:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    3188:	3301      	adds	r3, #1
    318a:	930d      	str	r3, [sp, #52]	; 0x34
    318c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    318e:	2b00      	cmp	r3, #0
    3190:	dd05      	ble.n	319e <_dtoa_r+0xb2e>
    3192:	2c39      	cmp	r4, #57	; 0x39
    3194:	d0eb      	beq.n	316e <_dtoa_r+0xafe>
    3196:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    3198:	3401      	adds	r4, #1
    319a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    319c:	e74a      	b.n	3034 <_dtoa_r+0x9c4>
    319e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    31a0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    31a2:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    31a4:	701c      	strb	r4, [r3, #0]
    31a6:	4293      	cmp	r3, r2
    31a8:	d0ab      	beq.n	3102 <_dtoa_r+0xa92>
    31aa:	2300      	movs	r3, #0
    31ac:	220a      	movs	r2, #10
    31ae:	9905      	ldr	r1, [sp, #20]
    31b0:	9804      	ldr	r0, [sp, #16]
    31b2:	f000 fab4 	bl	371e <__multadd>
    31b6:	2300      	movs	r3, #0
    31b8:	9005      	str	r0, [sp, #20]
    31ba:	220a      	movs	r2, #10
    31bc:	0039      	movs	r1, r7
    31be:	9804      	ldr	r0, [sp, #16]
    31c0:	42b7      	cmp	r7, r6
    31c2:	d106      	bne.n	31d2 <_dtoa_r+0xb62>
    31c4:	f000 faab 	bl	371e <__multadd>
    31c8:	0007      	movs	r7, r0
    31ca:	0006      	movs	r6, r0
    31cc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    31ce:	930b      	str	r3, [sp, #44]	; 0x2c
    31d0:	e6fc      	b.n	2fcc <_dtoa_r+0x95c>
    31d2:	f000 faa4 	bl	371e <__multadd>
    31d6:	0031      	movs	r1, r6
    31d8:	0007      	movs	r7, r0
    31da:	2300      	movs	r3, #0
    31dc:	220a      	movs	r2, #10
    31de:	9804      	ldr	r0, [sp, #16]
    31e0:	f000 fa9d 	bl	371e <__multadd>
    31e4:	0006      	movs	r6, r0
    31e6:	e7f1      	b.n	31cc <_dtoa_r+0xb5c>
    31e8:	2300      	movs	r3, #0
    31ea:	220a      	movs	r2, #10
    31ec:	9905      	ldr	r1, [sp, #20]
    31ee:	9804      	ldr	r0, [sp, #16]
    31f0:	f000 fa95 	bl	371e <__multadd>
    31f4:	9005      	str	r0, [sp, #20]
    31f6:	e771      	b.n	30dc <_dtoa_r+0xa6c>
    31f8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    31fa:	429a      	cmp	r2, r3
    31fc:	d105      	bne.n	320a <_dtoa_r+0xb9a>
    31fe:	9b03      	ldr	r3, [sp, #12]
    3200:	3301      	adds	r3, #1
    3202:	9303      	str	r3, [sp, #12]
    3204:	2331      	movs	r3, #49	; 0x31
    3206:	7013      	strb	r3, [r2, #0]
    3208:	e73e      	b.n	3088 <_dtoa_r+0xa18>
    320a:	001d      	movs	r5, r3
    320c:	e7b4      	b.n	3178 <_dtoa_r+0xb08>
    320e:	4b0a      	ldr	r3, [pc, #40]	; (3238 <_dtoa_r+0xbc8>)
    3210:	9a26      	ldr	r2, [sp, #152]	; 0x98
    3212:	930a      	str	r3, [sp, #40]	; 0x28
    3214:	4b09      	ldr	r3, [pc, #36]	; (323c <_dtoa_r+0xbcc>)
    3216:	2a00      	cmp	r2, #0
    3218:	d001      	beq.n	321e <_dtoa_r+0xbae>
    321a:	9a26      	ldr	r2, [sp, #152]	; 0x98
    321c:	6013      	str	r3, [r2, #0]
    321e:	980a      	ldr	r0, [sp, #40]	; 0x28
    3220:	b01d      	add	sp, #116	; 0x74
    3222:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3224:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    3226:	2b00      	cmp	r3, #0
    3228:	dd00      	ble.n	322c <_dtoa_r+0xbbc>
    322a:	e756      	b.n	30da <_dtoa_r+0xa6a>
    322c:	9b22      	ldr	r3, [sp, #136]	; 0x88
    322e:	2b02      	cmp	r3, #2
    3230:	dc00      	bgt.n	3234 <_dtoa_r+0xbc4>
    3232:	e752      	b.n	30da <_dtoa_r+0xa6a>
    3234:	e713      	b.n	305e <_dtoa_r+0x9ee>
    3236:	46c0      	nop			; (mov r8, r8)
    3238:	00006238 	.word	0x00006238
    323c:	00006240 	.word	0x00006240

00003240 <__sflush_r>:
    3240:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    3242:	898a      	ldrh	r2, [r1, #12]
    3244:	0005      	movs	r5, r0
    3246:	000c      	movs	r4, r1
    3248:	0713      	lsls	r3, r2, #28
    324a:	d460      	bmi.n	330e <__sflush_r+0xce>
    324c:	684b      	ldr	r3, [r1, #4]
    324e:	2b00      	cmp	r3, #0
    3250:	dc04      	bgt.n	325c <__sflush_r+0x1c>
    3252:	6c0b      	ldr	r3, [r1, #64]	; 0x40
    3254:	2b00      	cmp	r3, #0
    3256:	dc01      	bgt.n	325c <__sflush_r+0x1c>
    3258:	2000      	movs	r0, #0
    325a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    325c:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
    325e:	2f00      	cmp	r7, #0
    3260:	d0fa      	beq.n	3258 <__sflush_r+0x18>
    3262:	2300      	movs	r3, #0
    3264:	682e      	ldr	r6, [r5, #0]
    3266:	602b      	str	r3, [r5, #0]
    3268:	2380      	movs	r3, #128	; 0x80
    326a:	015b      	lsls	r3, r3, #5
    326c:	401a      	ands	r2, r3
    326e:	d034      	beq.n	32da <__sflush_r+0x9a>
    3270:	6d60      	ldr	r0, [r4, #84]	; 0x54
    3272:	89a3      	ldrh	r3, [r4, #12]
    3274:	075b      	lsls	r3, r3, #29
    3276:	d506      	bpl.n	3286 <__sflush_r+0x46>
    3278:	6863      	ldr	r3, [r4, #4]
    327a:	1ac0      	subs	r0, r0, r3
    327c:	6b63      	ldr	r3, [r4, #52]	; 0x34
    327e:	2b00      	cmp	r3, #0
    3280:	d001      	beq.n	3286 <__sflush_r+0x46>
    3282:	6c23      	ldr	r3, [r4, #64]	; 0x40
    3284:	1ac0      	subs	r0, r0, r3
    3286:	0002      	movs	r2, r0
    3288:	6a21      	ldr	r1, [r4, #32]
    328a:	2300      	movs	r3, #0
    328c:	0028      	movs	r0, r5
    328e:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
    3290:	47b8      	blx	r7
    3292:	89a1      	ldrh	r1, [r4, #12]
    3294:	1c43      	adds	r3, r0, #1
    3296:	d106      	bne.n	32a6 <__sflush_r+0x66>
    3298:	682b      	ldr	r3, [r5, #0]
    329a:	2b1d      	cmp	r3, #29
    329c:	d831      	bhi.n	3302 <__sflush_r+0xc2>
    329e:	4a2c      	ldr	r2, [pc, #176]	; (3350 <__sflush_r+0x110>)
    32a0:	40da      	lsrs	r2, r3
    32a2:	07d3      	lsls	r3, r2, #31
    32a4:	d52d      	bpl.n	3302 <__sflush_r+0xc2>
    32a6:	2300      	movs	r3, #0
    32a8:	6063      	str	r3, [r4, #4]
    32aa:	6923      	ldr	r3, [r4, #16]
    32ac:	6023      	str	r3, [r4, #0]
    32ae:	04cb      	lsls	r3, r1, #19
    32b0:	d505      	bpl.n	32be <__sflush_r+0x7e>
    32b2:	1c43      	adds	r3, r0, #1
    32b4:	d102      	bne.n	32bc <__sflush_r+0x7c>
    32b6:	682b      	ldr	r3, [r5, #0]
    32b8:	2b00      	cmp	r3, #0
    32ba:	d100      	bne.n	32be <__sflush_r+0x7e>
    32bc:	6560      	str	r0, [r4, #84]	; 0x54
    32be:	6b61      	ldr	r1, [r4, #52]	; 0x34
    32c0:	602e      	str	r6, [r5, #0]
    32c2:	2900      	cmp	r1, #0
    32c4:	d0c8      	beq.n	3258 <__sflush_r+0x18>
    32c6:	0023      	movs	r3, r4
    32c8:	3344      	adds	r3, #68	; 0x44
    32ca:	4299      	cmp	r1, r3
    32cc:	d002      	beq.n	32d4 <__sflush_r+0x94>
    32ce:	0028      	movs	r0, r5
    32d0:	f000 fcc4 	bl	3c5c <_free_r>
    32d4:	2000      	movs	r0, #0
    32d6:	6360      	str	r0, [r4, #52]	; 0x34
    32d8:	e7bf      	b.n	325a <__sflush_r+0x1a>
    32da:	2301      	movs	r3, #1
    32dc:	6a21      	ldr	r1, [r4, #32]
    32de:	0028      	movs	r0, r5
    32e0:	47b8      	blx	r7
    32e2:	1c43      	adds	r3, r0, #1
    32e4:	d1c5      	bne.n	3272 <__sflush_r+0x32>
    32e6:	682b      	ldr	r3, [r5, #0]
    32e8:	2b00      	cmp	r3, #0
    32ea:	d0c2      	beq.n	3272 <__sflush_r+0x32>
    32ec:	2b1d      	cmp	r3, #29
    32ee:	d001      	beq.n	32f4 <__sflush_r+0xb4>
    32f0:	2b16      	cmp	r3, #22
    32f2:	d101      	bne.n	32f8 <__sflush_r+0xb8>
    32f4:	602e      	str	r6, [r5, #0]
    32f6:	e7af      	b.n	3258 <__sflush_r+0x18>
    32f8:	2340      	movs	r3, #64	; 0x40
    32fa:	89a2      	ldrh	r2, [r4, #12]
    32fc:	4313      	orrs	r3, r2
    32fe:	81a3      	strh	r3, [r4, #12]
    3300:	e7ab      	b.n	325a <__sflush_r+0x1a>
    3302:	2340      	movs	r3, #64	; 0x40
    3304:	430b      	orrs	r3, r1
    3306:	2001      	movs	r0, #1
    3308:	81a3      	strh	r3, [r4, #12]
    330a:	4240      	negs	r0, r0
    330c:	e7a5      	b.n	325a <__sflush_r+0x1a>
    330e:	690f      	ldr	r7, [r1, #16]
    3310:	2f00      	cmp	r7, #0
    3312:	d0a1      	beq.n	3258 <__sflush_r+0x18>
    3314:	680b      	ldr	r3, [r1, #0]
    3316:	600f      	str	r7, [r1, #0]
    3318:	1bdb      	subs	r3, r3, r7
    331a:	9301      	str	r3, [sp, #4]
    331c:	2300      	movs	r3, #0
    331e:	0792      	lsls	r2, r2, #30
    3320:	d100      	bne.n	3324 <__sflush_r+0xe4>
    3322:	694b      	ldr	r3, [r1, #20]
    3324:	60a3      	str	r3, [r4, #8]
    3326:	9b01      	ldr	r3, [sp, #4]
    3328:	2b00      	cmp	r3, #0
    332a:	dc00      	bgt.n	332e <__sflush_r+0xee>
    332c:	e794      	b.n	3258 <__sflush_r+0x18>
    332e:	9b01      	ldr	r3, [sp, #4]
    3330:	003a      	movs	r2, r7
    3332:	6a21      	ldr	r1, [r4, #32]
    3334:	0028      	movs	r0, r5
    3336:	6aa6      	ldr	r6, [r4, #40]	; 0x28
    3338:	47b0      	blx	r6
    333a:	2800      	cmp	r0, #0
    333c:	dc03      	bgt.n	3346 <__sflush_r+0x106>
    333e:	2340      	movs	r3, #64	; 0x40
    3340:	89a2      	ldrh	r2, [r4, #12]
    3342:	4313      	orrs	r3, r2
    3344:	e7df      	b.n	3306 <__sflush_r+0xc6>
    3346:	9b01      	ldr	r3, [sp, #4]
    3348:	183f      	adds	r7, r7, r0
    334a:	1a1b      	subs	r3, r3, r0
    334c:	9301      	str	r3, [sp, #4]
    334e:	e7ea      	b.n	3326 <__sflush_r+0xe6>
    3350:	20400001 	.word	0x20400001

00003354 <_fflush_r>:
    3354:	690b      	ldr	r3, [r1, #16]
    3356:	b570      	push	{r4, r5, r6, lr}
    3358:	0005      	movs	r5, r0
    335a:	000c      	movs	r4, r1
    335c:	2b00      	cmp	r3, #0
    335e:	d101      	bne.n	3364 <_fflush_r+0x10>
    3360:	2000      	movs	r0, #0
    3362:	bd70      	pop	{r4, r5, r6, pc}
    3364:	2800      	cmp	r0, #0
    3366:	d004      	beq.n	3372 <_fflush_r+0x1e>
    3368:	6983      	ldr	r3, [r0, #24]
    336a:	2b00      	cmp	r3, #0
    336c:	d101      	bne.n	3372 <_fflush_r+0x1e>
    336e:	f000 f85f 	bl	3430 <__sinit>
    3372:	4b0b      	ldr	r3, [pc, #44]	; (33a0 <_fflush_r+0x4c>)
    3374:	429c      	cmp	r4, r3
    3376:	d109      	bne.n	338c <_fflush_r+0x38>
    3378:	686c      	ldr	r4, [r5, #4]
    337a:	220c      	movs	r2, #12
    337c:	5ea3      	ldrsh	r3, [r4, r2]
    337e:	2b00      	cmp	r3, #0
    3380:	d0ee      	beq.n	3360 <_fflush_r+0xc>
    3382:	0021      	movs	r1, r4
    3384:	0028      	movs	r0, r5
    3386:	f7ff ff5b 	bl	3240 <__sflush_r>
    338a:	e7ea      	b.n	3362 <_fflush_r+0xe>
    338c:	4b05      	ldr	r3, [pc, #20]	; (33a4 <_fflush_r+0x50>)
    338e:	429c      	cmp	r4, r3
    3390:	d101      	bne.n	3396 <_fflush_r+0x42>
    3392:	68ac      	ldr	r4, [r5, #8]
    3394:	e7f1      	b.n	337a <_fflush_r+0x26>
    3396:	4b04      	ldr	r3, [pc, #16]	; (33a8 <_fflush_r+0x54>)
    3398:	429c      	cmp	r4, r3
    339a:	d1ee      	bne.n	337a <_fflush_r+0x26>
    339c:	68ec      	ldr	r4, [r5, #12]
    339e:	e7ec      	b.n	337a <_fflush_r+0x26>
    33a0:	00006268 	.word	0x00006268
    33a4:	00006288 	.word	0x00006288
    33a8:	00006248 	.word	0x00006248

000033ac <_cleanup_r>:
    33ac:	b510      	push	{r4, lr}
    33ae:	4902      	ldr	r1, [pc, #8]	; (33b8 <_cleanup_r+0xc>)
    33b0:	f000 f8b2 	bl	3518 <_fwalk_reent>
    33b4:	bd10      	pop	{r4, pc}
    33b6:	46c0      	nop			; (mov r8, r8)
    33b8:	00003355 	.word	0x00003355

000033bc <std.isra.0>:
    33bc:	2300      	movs	r3, #0
    33be:	b510      	push	{r4, lr}
    33c0:	0004      	movs	r4, r0
    33c2:	6003      	str	r3, [r0, #0]
    33c4:	6043      	str	r3, [r0, #4]
    33c6:	6083      	str	r3, [r0, #8]
    33c8:	8181      	strh	r1, [r0, #12]
    33ca:	6643      	str	r3, [r0, #100]	; 0x64
    33cc:	81c2      	strh	r2, [r0, #14]
    33ce:	6103      	str	r3, [r0, #16]
    33d0:	6143      	str	r3, [r0, #20]
    33d2:	6183      	str	r3, [r0, #24]
    33d4:	0019      	movs	r1, r3
    33d6:	2208      	movs	r2, #8
    33d8:	305c      	adds	r0, #92	; 0x5c
    33da:	f7fe fa3f 	bl	185c <memset>
    33de:	4b05      	ldr	r3, [pc, #20]	; (33f4 <std.isra.0+0x38>)
    33e0:	6224      	str	r4, [r4, #32]
    33e2:	6263      	str	r3, [r4, #36]	; 0x24
    33e4:	4b04      	ldr	r3, [pc, #16]	; (33f8 <std.isra.0+0x3c>)
    33e6:	62a3      	str	r3, [r4, #40]	; 0x28
    33e8:	4b04      	ldr	r3, [pc, #16]	; (33fc <std.isra.0+0x40>)
    33ea:	62e3      	str	r3, [r4, #44]	; 0x2c
    33ec:	4b04      	ldr	r3, [pc, #16]	; (3400 <std.isra.0+0x44>)
    33ee:	6323      	str	r3, [r4, #48]	; 0x30
    33f0:	bd10      	pop	{r4, pc}
    33f2:	46c0      	nop			; (mov r8, r8)
    33f4:	00004059 	.word	0x00004059
    33f8:	00004081 	.word	0x00004081
    33fc:	000040b9 	.word	0x000040b9
    3400:	000040e5 	.word	0x000040e5

00003404 <__sfmoreglue>:
    3404:	b570      	push	{r4, r5, r6, lr}
    3406:	2568      	movs	r5, #104	; 0x68
    3408:	1e4a      	subs	r2, r1, #1
    340a:	4355      	muls	r5, r2
    340c:	000e      	movs	r6, r1
    340e:	0029      	movs	r1, r5
    3410:	3174      	adds	r1, #116	; 0x74
    3412:	f000 fc6d 	bl	3cf0 <_malloc_r>
    3416:	1e04      	subs	r4, r0, #0
    3418:	d008      	beq.n	342c <__sfmoreglue+0x28>
    341a:	2100      	movs	r1, #0
    341c:	002a      	movs	r2, r5
    341e:	6001      	str	r1, [r0, #0]
    3420:	6046      	str	r6, [r0, #4]
    3422:	300c      	adds	r0, #12
    3424:	60a0      	str	r0, [r4, #8]
    3426:	3268      	adds	r2, #104	; 0x68
    3428:	f7fe fa18 	bl	185c <memset>
    342c:	0020      	movs	r0, r4
    342e:	bd70      	pop	{r4, r5, r6, pc}

00003430 <__sinit>:
    3430:	6983      	ldr	r3, [r0, #24]
    3432:	b513      	push	{r0, r1, r4, lr}
    3434:	0004      	movs	r4, r0
    3436:	2b00      	cmp	r3, #0
    3438:	d128      	bne.n	348c <__sinit+0x5c>
    343a:	6483      	str	r3, [r0, #72]	; 0x48
    343c:	64c3      	str	r3, [r0, #76]	; 0x4c
    343e:	6503      	str	r3, [r0, #80]	; 0x50
    3440:	4b13      	ldr	r3, [pc, #76]	; (3490 <__sinit+0x60>)
    3442:	4a14      	ldr	r2, [pc, #80]	; (3494 <__sinit+0x64>)
    3444:	681b      	ldr	r3, [r3, #0]
    3446:	6282      	str	r2, [r0, #40]	; 0x28
    3448:	9301      	str	r3, [sp, #4]
    344a:	4298      	cmp	r0, r3
    344c:	d101      	bne.n	3452 <__sinit+0x22>
    344e:	2301      	movs	r3, #1
    3450:	6183      	str	r3, [r0, #24]
    3452:	0020      	movs	r0, r4
    3454:	f000 f820 	bl	3498 <__sfp>
    3458:	6060      	str	r0, [r4, #4]
    345a:	0020      	movs	r0, r4
    345c:	f000 f81c 	bl	3498 <__sfp>
    3460:	60a0      	str	r0, [r4, #8]
    3462:	0020      	movs	r0, r4
    3464:	f000 f818 	bl	3498 <__sfp>
    3468:	2200      	movs	r2, #0
    346a:	60e0      	str	r0, [r4, #12]
    346c:	2104      	movs	r1, #4
    346e:	6860      	ldr	r0, [r4, #4]
    3470:	f7ff ffa4 	bl	33bc <std.isra.0>
    3474:	2201      	movs	r2, #1
    3476:	2109      	movs	r1, #9
    3478:	68a0      	ldr	r0, [r4, #8]
    347a:	f7ff ff9f 	bl	33bc <std.isra.0>
    347e:	2202      	movs	r2, #2
    3480:	2112      	movs	r1, #18
    3482:	68e0      	ldr	r0, [r4, #12]
    3484:	f7ff ff9a 	bl	33bc <std.isra.0>
    3488:	2301      	movs	r3, #1
    348a:	61a3      	str	r3, [r4, #24]
    348c:	bd13      	pop	{r0, r1, r4, pc}
    348e:	46c0      	nop			; (mov r8, r8)
    3490:	00006200 	.word	0x00006200
    3494:	000033ad 	.word	0x000033ad

00003498 <__sfp>:
    3498:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    349a:	4b1e      	ldr	r3, [pc, #120]	; (3514 <__sfp+0x7c>)
    349c:	0007      	movs	r7, r0
    349e:	681e      	ldr	r6, [r3, #0]
    34a0:	69b3      	ldr	r3, [r6, #24]
    34a2:	2b00      	cmp	r3, #0
    34a4:	d102      	bne.n	34ac <__sfp+0x14>
    34a6:	0030      	movs	r0, r6
    34a8:	f7ff ffc2 	bl	3430 <__sinit>
    34ac:	3648      	adds	r6, #72	; 0x48
    34ae:	68b4      	ldr	r4, [r6, #8]
    34b0:	6873      	ldr	r3, [r6, #4]
    34b2:	3b01      	subs	r3, #1
    34b4:	d504      	bpl.n	34c0 <__sfp+0x28>
    34b6:	6833      	ldr	r3, [r6, #0]
    34b8:	2b00      	cmp	r3, #0
    34ba:	d007      	beq.n	34cc <__sfp+0x34>
    34bc:	6836      	ldr	r6, [r6, #0]
    34be:	e7f6      	b.n	34ae <__sfp+0x16>
    34c0:	220c      	movs	r2, #12
    34c2:	5ea5      	ldrsh	r5, [r4, r2]
    34c4:	2d00      	cmp	r5, #0
    34c6:	d00d      	beq.n	34e4 <__sfp+0x4c>
    34c8:	3468      	adds	r4, #104	; 0x68
    34ca:	e7f2      	b.n	34b2 <__sfp+0x1a>
    34cc:	2104      	movs	r1, #4
    34ce:	0038      	movs	r0, r7
    34d0:	f7ff ff98 	bl	3404 <__sfmoreglue>
    34d4:	6030      	str	r0, [r6, #0]
    34d6:	2800      	cmp	r0, #0
    34d8:	d1f0      	bne.n	34bc <__sfp+0x24>
    34da:	230c      	movs	r3, #12
    34dc:	0004      	movs	r4, r0
    34de:	603b      	str	r3, [r7, #0]
    34e0:	0020      	movs	r0, r4
    34e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    34e4:	2301      	movs	r3, #1
    34e6:	0020      	movs	r0, r4
    34e8:	425b      	negs	r3, r3
    34ea:	81e3      	strh	r3, [r4, #14]
    34ec:	3302      	adds	r3, #2
    34ee:	81a3      	strh	r3, [r4, #12]
    34f0:	6665      	str	r5, [r4, #100]	; 0x64
    34f2:	6025      	str	r5, [r4, #0]
    34f4:	60a5      	str	r5, [r4, #8]
    34f6:	6065      	str	r5, [r4, #4]
    34f8:	6125      	str	r5, [r4, #16]
    34fa:	6165      	str	r5, [r4, #20]
    34fc:	61a5      	str	r5, [r4, #24]
    34fe:	2208      	movs	r2, #8
    3500:	0029      	movs	r1, r5
    3502:	305c      	adds	r0, #92	; 0x5c
    3504:	f7fe f9aa 	bl	185c <memset>
    3508:	6365      	str	r5, [r4, #52]	; 0x34
    350a:	63a5      	str	r5, [r4, #56]	; 0x38
    350c:	64a5      	str	r5, [r4, #72]	; 0x48
    350e:	64e5      	str	r5, [r4, #76]	; 0x4c
    3510:	e7e6      	b.n	34e0 <__sfp+0x48>
    3512:	46c0      	nop			; (mov r8, r8)
    3514:	00006200 	.word	0x00006200

00003518 <_fwalk_reent>:
    3518:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    351a:	0004      	movs	r4, r0
    351c:	0007      	movs	r7, r0
    351e:	2600      	movs	r6, #0
    3520:	9101      	str	r1, [sp, #4]
    3522:	3448      	adds	r4, #72	; 0x48
    3524:	2c00      	cmp	r4, #0
    3526:	d101      	bne.n	352c <_fwalk_reent+0x14>
    3528:	0030      	movs	r0, r6
    352a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    352c:	6863      	ldr	r3, [r4, #4]
    352e:	68a5      	ldr	r5, [r4, #8]
    3530:	9300      	str	r3, [sp, #0]
    3532:	9b00      	ldr	r3, [sp, #0]
    3534:	3b01      	subs	r3, #1
    3536:	9300      	str	r3, [sp, #0]
    3538:	d501      	bpl.n	353e <_fwalk_reent+0x26>
    353a:	6824      	ldr	r4, [r4, #0]
    353c:	e7f2      	b.n	3524 <_fwalk_reent+0xc>
    353e:	89ab      	ldrh	r3, [r5, #12]
    3540:	2b01      	cmp	r3, #1
    3542:	d908      	bls.n	3556 <_fwalk_reent+0x3e>
    3544:	220e      	movs	r2, #14
    3546:	5eab      	ldrsh	r3, [r5, r2]
    3548:	3301      	adds	r3, #1
    354a:	d004      	beq.n	3556 <_fwalk_reent+0x3e>
    354c:	0029      	movs	r1, r5
    354e:	0038      	movs	r0, r7
    3550:	9b01      	ldr	r3, [sp, #4]
    3552:	4798      	blx	r3
    3554:	4306      	orrs	r6, r0
    3556:	3568      	adds	r5, #104	; 0x68
    3558:	e7eb      	b.n	3532 <_fwalk_reent+0x1a>
	...

0000355c <_localeconv_r>:
    355c:	4b03      	ldr	r3, [pc, #12]	; (356c <_localeconv_r+0x10>)
    355e:	681b      	ldr	r3, [r3, #0]
    3560:	6a18      	ldr	r0, [r3, #32]
    3562:	2800      	cmp	r0, #0
    3564:	d100      	bne.n	3568 <_localeconv_r+0xc>
    3566:	4802      	ldr	r0, [pc, #8]	; (3570 <_localeconv_r+0x14>)
    3568:	30f0      	adds	r0, #240	; 0xf0
    356a:	4770      	bx	lr
    356c:	20000018 	.word	0x20000018
    3570:	2000007c 	.word	0x2000007c

00003574 <__swhatbuf_r>:
    3574:	b570      	push	{r4, r5, r6, lr}
    3576:	000e      	movs	r6, r1
    3578:	001d      	movs	r5, r3
    357a:	230e      	movs	r3, #14
    357c:	5ec9      	ldrsh	r1, [r1, r3]
    357e:	b090      	sub	sp, #64	; 0x40
    3580:	0014      	movs	r4, r2
    3582:	2900      	cmp	r1, #0
    3584:	da07      	bge.n	3596 <__swhatbuf_r+0x22>
    3586:	2300      	movs	r3, #0
    3588:	602b      	str	r3, [r5, #0]
    358a:	89b3      	ldrh	r3, [r6, #12]
    358c:	061b      	lsls	r3, r3, #24
    358e:	d411      	bmi.n	35b4 <__swhatbuf_r+0x40>
    3590:	2380      	movs	r3, #128	; 0x80
    3592:	00db      	lsls	r3, r3, #3
    3594:	e00f      	b.n	35b6 <__swhatbuf_r+0x42>
    3596:	aa01      	add	r2, sp, #4
    3598:	f000 fdd0 	bl	413c <_fstat_r>
    359c:	2800      	cmp	r0, #0
    359e:	dbf2      	blt.n	3586 <__swhatbuf_r+0x12>
    35a0:	22f0      	movs	r2, #240	; 0xf0
    35a2:	9b02      	ldr	r3, [sp, #8]
    35a4:	0212      	lsls	r2, r2, #8
    35a6:	4013      	ands	r3, r2
    35a8:	4a05      	ldr	r2, [pc, #20]	; (35c0 <__swhatbuf_r+0x4c>)
    35aa:	189b      	adds	r3, r3, r2
    35ac:	425a      	negs	r2, r3
    35ae:	4153      	adcs	r3, r2
    35b0:	602b      	str	r3, [r5, #0]
    35b2:	e7ed      	b.n	3590 <__swhatbuf_r+0x1c>
    35b4:	2340      	movs	r3, #64	; 0x40
    35b6:	2000      	movs	r0, #0
    35b8:	6023      	str	r3, [r4, #0]
    35ba:	b010      	add	sp, #64	; 0x40
    35bc:	bd70      	pop	{r4, r5, r6, pc}
    35be:	46c0      	nop			; (mov r8, r8)
    35c0:	ffffe000 	.word	0xffffe000

000035c4 <__smakebuf_r>:
    35c4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    35c6:	2602      	movs	r6, #2
    35c8:	898b      	ldrh	r3, [r1, #12]
    35ca:	0005      	movs	r5, r0
    35cc:	000c      	movs	r4, r1
    35ce:	4233      	tst	r3, r6
    35d0:	d006      	beq.n	35e0 <__smakebuf_r+0x1c>
    35d2:	0023      	movs	r3, r4
    35d4:	3347      	adds	r3, #71	; 0x47
    35d6:	6023      	str	r3, [r4, #0]
    35d8:	6123      	str	r3, [r4, #16]
    35da:	2301      	movs	r3, #1
    35dc:	6163      	str	r3, [r4, #20]
    35de:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
    35e0:	ab01      	add	r3, sp, #4
    35e2:	466a      	mov	r2, sp
    35e4:	f7ff ffc6 	bl	3574 <__swhatbuf_r>
    35e8:	9900      	ldr	r1, [sp, #0]
    35ea:	0007      	movs	r7, r0
    35ec:	0028      	movs	r0, r5
    35ee:	f000 fb7f 	bl	3cf0 <_malloc_r>
    35f2:	2800      	cmp	r0, #0
    35f4:	d106      	bne.n	3604 <__smakebuf_r+0x40>
    35f6:	220c      	movs	r2, #12
    35f8:	5ea3      	ldrsh	r3, [r4, r2]
    35fa:	059a      	lsls	r2, r3, #22
    35fc:	d4ef      	bmi.n	35de <__smakebuf_r+0x1a>
    35fe:	431e      	orrs	r6, r3
    3600:	81a6      	strh	r6, [r4, #12]
    3602:	e7e6      	b.n	35d2 <__smakebuf_r+0xe>
    3604:	4b0d      	ldr	r3, [pc, #52]	; (363c <__smakebuf_r+0x78>)
    3606:	62ab      	str	r3, [r5, #40]	; 0x28
    3608:	2380      	movs	r3, #128	; 0x80
    360a:	89a2      	ldrh	r2, [r4, #12]
    360c:	6020      	str	r0, [r4, #0]
    360e:	4313      	orrs	r3, r2
    3610:	81a3      	strh	r3, [r4, #12]
    3612:	9b00      	ldr	r3, [sp, #0]
    3614:	6120      	str	r0, [r4, #16]
    3616:	6163      	str	r3, [r4, #20]
    3618:	9b01      	ldr	r3, [sp, #4]
    361a:	2b00      	cmp	r3, #0
    361c:	d00a      	beq.n	3634 <__smakebuf_r+0x70>
    361e:	230e      	movs	r3, #14
    3620:	5ee1      	ldrsh	r1, [r4, r3]
    3622:	0028      	movs	r0, r5
    3624:	f000 fd9c 	bl	4160 <_isatty_r>
    3628:	2800      	cmp	r0, #0
    362a:	d003      	beq.n	3634 <__smakebuf_r+0x70>
    362c:	2301      	movs	r3, #1
    362e:	89a2      	ldrh	r2, [r4, #12]
    3630:	4313      	orrs	r3, r2
    3632:	81a3      	strh	r3, [r4, #12]
    3634:	89a0      	ldrh	r0, [r4, #12]
    3636:	4338      	orrs	r0, r7
    3638:	81a0      	strh	r0, [r4, #12]
    363a:	e7d0      	b.n	35de <__smakebuf_r+0x1a>
    363c:	000033ad 	.word	0x000033ad

00003640 <malloc>:
    3640:	b510      	push	{r4, lr}
    3642:	4b03      	ldr	r3, [pc, #12]	; (3650 <malloc+0x10>)
    3644:	0001      	movs	r1, r0
    3646:	6818      	ldr	r0, [r3, #0]
    3648:	f000 fb52 	bl	3cf0 <_malloc_r>
    364c:	bd10      	pop	{r4, pc}
    364e:	46c0      	nop			; (mov r8, r8)
    3650:	20000018 	.word	0x20000018

00003654 <memchr>:
    3654:	b2c9      	uxtb	r1, r1
    3656:	1882      	adds	r2, r0, r2
    3658:	4290      	cmp	r0, r2
    365a:	d101      	bne.n	3660 <memchr+0xc>
    365c:	2000      	movs	r0, #0
    365e:	4770      	bx	lr
    3660:	7803      	ldrb	r3, [r0, #0]
    3662:	428b      	cmp	r3, r1
    3664:	d0fb      	beq.n	365e <memchr+0xa>
    3666:	3001      	adds	r0, #1
    3668:	e7f6      	b.n	3658 <memchr+0x4>

0000366a <memcpy>:
    366a:	2300      	movs	r3, #0
    366c:	b510      	push	{r4, lr}
    366e:	429a      	cmp	r2, r3
    3670:	d100      	bne.n	3674 <memcpy+0xa>
    3672:	bd10      	pop	{r4, pc}
    3674:	5ccc      	ldrb	r4, [r1, r3]
    3676:	54c4      	strb	r4, [r0, r3]
    3678:	3301      	adds	r3, #1
    367a:	e7f8      	b.n	366e <memcpy+0x4>

0000367c <_Balloc>:
    367c:	b570      	push	{r4, r5, r6, lr}
    367e:	6a46      	ldr	r6, [r0, #36]	; 0x24
    3680:	0004      	movs	r4, r0
    3682:	000d      	movs	r5, r1
    3684:	2e00      	cmp	r6, #0
    3686:	d107      	bne.n	3698 <_Balloc+0x1c>
    3688:	2010      	movs	r0, #16
    368a:	f7ff ffd9 	bl	3640 <malloc>
    368e:	6260      	str	r0, [r4, #36]	; 0x24
    3690:	6046      	str	r6, [r0, #4]
    3692:	6086      	str	r6, [r0, #8]
    3694:	6006      	str	r6, [r0, #0]
    3696:	60c6      	str	r6, [r0, #12]
    3698:	6a66      	ldr	r6, [r4, #36]	; 0x24
    369a:	68f3      	ldr	r3, [r6, #12]
    369c:	2b00      	cmp	r3, #0
    369e:	d013      	beq.n	36c8 <_Balloc+0x4c>
    36a0:	6a63      	ldr	r3, [r4, #36]	; 0x24
    36a2:	00aa      	lsls	r2, r5, #2
    36a4:	68db      	ldr	r3, [r3, #12]
    36a6:	189b      	adds	r3, r3, r2
    36a8:	6818      	ldr	r0, [r3, #0]
    36aa:	2800      	cmp	r0, #0
    36ac:	d118      	bne.n	36e0 <_Balloc+0x64>
    36ae:	2101      	movs	r1, #1
    36b0:	000e      	movs	r6, r1
    36b2:	40ae      	lsls	r6, r5
    36b4:	1d72      	adds	r2, r6, #5
    36b6:	0092      	lsls	r2, r2, #2
    36b8:	0020      	movs	r0, r4
    36ba:	f000 fac1 	bl	3c40 <_calloc_r>
    36be:	2800      	cmp	r0, #0
    36c0:	d00c      	beq.n	36dc <_Balloc+0x60>
    36c2:	6045      	str	r5, [r0, #4]
    36c4:	6086      	str	r6, [r0, #8]
    36c6:	e00d      	b.n	36e4 <_Balloc+0x68>
    36c8:	2221      	movs	r2, #33	; 0x21
    36ca:	2104      	movs	r1, #4
    36cc:	0020      	movs	r0, r4
    36ce:	f000 fab7 	bl	3c40 <_calloc_r>
    36d2:	6a63      	ldr	r3, [r4, #36]	; 0x24
    36d4:	60f0      	str	r0, [r6, #12]
    36d6:	68db      	ldr	r3, [r3, #12]
    36d8:	2b00      	cmp	r3, #0
    36da:	d1e1      	bne.n	36a0 <_Balloc+0x24>
    36dc:	2000      	movs	r0, #0
    36de:	bd70      	pop	{r4, r5, r6, pc}
    36e0:	6802      	ldr	r2, [r0, #0]
    36e2:	601a      	str	r2, [r3, #0]
    36e4:	2300      	movs	r3, #0
    36e6:	6103      	str	r3, [r0, #16]
    36e8:	60c3      	str	r3, [r0, #12]
    36ea:	e7f8      	b.n	36de <_Balloc+0x62>

000036ec <_Bfree>:
    36ec:	b570      	push	{r4, r5, r6, lr}
    36ee:	6a44      	ldr	r4, [r0, #36]	; 0x24
    36f0:	0006      	movs	r6, r0
    36f2:	000d      	movs	r5, r1
    36f4:	2c00      	cmp	r4, #0
    36f6:	d107      	bne.n	3708 <_Bfree+0x1c>
    36f8:	2010      	movs	r0, #16
    36fa:	f7ff ffa1 	bl	3640 <malloc>
    36fe:	6270      	str	r0, [r6, #36]	; 0x24
    3700:	6044      	str	r4, [r0, #4]
    3702:	6084      	str	r4, [r0, #8]
    3704:	6004      	str	r4, [r0, #0]
    3706:	60c4      	str	r4, [r0, #12]
    3708:	2d00      	cmp	r5, #0
    370a:	d007      	beq.n	371c <_Bfree+0x30>
    370c:	6a73      	ldr	r3, [r6, #36]	; 0x24
    370e:	686a      	ldr	r2, [r5, #4]
    3710:	68db      	ldr	r3, [r3, #12]
    3712:	0092      	lsls	r2, r2, #2
    3714:	189b      	adds	r3, r3, r2
    3716:	681a      	ldr	r2, [r3, #0]
    3718:	602a      	str	r2, [r5, #0]
    371a:	601d      	str	r5, [r3, #0]
    371c:	bd70      	pop	{r4, r5, r6, pc}

0000371e <__multadd>:
    371e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    3720:	001e      	movs	r6, r3
    3722:	2314      	movs	r3, #20
    3724:	469c      	mov	ip, r3
    3726:	0007      	movs	r7, r0
    3728:	000c      	movs	r4, r1
    372a:	2000      	movs	r0, #0
    372c:	690d      	ldr	r5, [r1, #16]
    372e:	448c      	add	ip, r1
    3730:	4663      	mov	r3, ip
    3732:	8819      	ldrh	r1, [r3, #0]
    3734:	681b      	ldr	r3, [r3, #0]
    3736:	4351      	muls	r1, r2
    3738:	0c1b      	lsrs	r3, r3, #16
    373a:	4353      	muls	r3, r2
    373c:	1989      	adds	r1, r1, r6
    373e:	0c0e      	lsrs	r6, r1, #16
    3740:	199b      	adds	r3, r3, r6
    3742:	b289      	uxth	r1, r1
    3744:	0c1e      	lsrs	r6, r3, #16
    3746:	041b      	lsls	r3, r3, #16
    3748:	185b      	adds	r3, r3, r1
    374a:	4661      	mov	r1, ip
    374c:	3001      	adds	r0, #1
    374e:	c108      	stmia	r1!, {r3}
    3750:	468c      	mov	ip, r1
    3752:	4285      	cmp	r5, r0
    3754:	dcec      	bgt.n	3730 <__multadd+0x12>
    3756:	2e00      	cmp	r6, #0
    3758:	d01b      	beq.n	3792 <__multadd+0x74>
    375a:	68a3      	ldr	r3, [r4, #8]
    375c:	429d      	cmp	r5, r3
    375e:	db12      	blt.n	3786 <__multadd+0x68>
    3760:	6863      	ldr	r3, [r4, #4]
    3762:	0038      	movs	r0, r7
    3764:	1c59      	adds	r1, r3, #1
    3766:	f7ff ff89 	bl	367c <_Balloc>
    376a:	0021      	movs	r1, r4
    376c:	6923      	ldr	r3, [r4, #16]
    376e:	9001      	str	r0, [sp, #4]
    3770:	1c9a      	adds	r2, r3, #2
    3772:	0092      	lsls	r2, r2, #2
    3774:	310c      	adds	r1, #12
    3776:	300c      	adds	r0, #12
    3778:	f7ff ff77 	bl	366a <memcpy>
    377c:	0021      	movs	r1, r4
    377e:	0038      	movs	r0, r7
    3780:	f7ff ffb4 	bl	36ec <_Bfree>
    3784:	9c01      	ldr	r4, [sp, #4]
    3786:	1d2b      	adds	r3, r5, #4
    3788:	009b      	lsls	r3, r3, #2
    378a:	18e3      	adds	r3, r4, r3
    378c:	3501      	adds	r5, #1
    378e:	605e      	str	r6, [r3, #4]
    3790:	6125      	str	r5, [r4, #16]
    3792:	0020      	movs	r0, r4
    3794:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

00003796 <__hi0bits>:
    3796:	0003      	movs	r3, r0
    3798:	0c02      	lsrs	r2, r0, #16
    379a:	2000      	movs	r0, #0
    379c:	4282      	cmp	r2, r0
    379e:	d101      	bne.n	37a4 <__hi0bits+0xe>
    37a0:	041b      	lsls	r3, r3, #16
    37a2:	3010      	adds	r0, #16
    37a4:	0e1a      	lsrs	r2, r3, #24
    37a6:	d101      	bne.n	37ac <__hi0bits+0x16>
    37a8:	3008      	adds	r0, #8
    37aa:	021b      	lsls	r3, r3, #8
    37ac:	0f1a      	lsrs	r2, r3, #28
    37ae:	d101      	bne.n	37b4 <__hi0bits+0x1e>
    37b0:	3004      	adds	r0, #4
    37b2:	011b      	lsls	r3, r3, #4
    37b4:	0f9a      	lsrs	r2, r3, #30
    37b6:	d101      	bne.n	37bc <__hi0bits+0x26>
    37b8:	3002      	adds	r0, #2
    37ba:	009b      	lsls	r3, r3, #2
    37bc:	2b00      	cmp	r3, #0
    37be:	db03      	blt.n	37c8 <__hi0bits+0x32>
    37c0:	3001      	adds	r0, #1
    37c2:	005b      	lsls	r3, r3, #1
    37c4:	d400      	bmi.n	37c8 <__hi0bits+0x32>
    37c6:	2020      	movs	r0, #32
    37c8:	4770      	bx	lr

000037ca <__lo0bits>:
    37ca:	2207      	movs	r2, #7
    37cc:	6803      	ldr	r3, [r0, #0]
    37ce:	b510      	push	{r4, lr}
    37d0:	0001      	movs	r1, r0
    37d2:	401a      	ands	r2, r3
    37d4:	d00d      	beq.n	37f2 <__lo0bits+0x28>
    37d6:	2401      	movs	r4, #1
    37d8:	2000      	movs	r0, #0
    37da:	4223      	tst	r3, r4
    37dc:	d105      	bne.n	37ea <__lo0bits+0x20>
    37de:	3002      	adds	r0, #2
    37e0:	4203      	tst	r3, r0
    37e2:	d003      	beq.n	37ec <__lo0bits+0x22>
    37e4:	40e3      	lsrs	r3, r4
    37e6:	0020      	movs	r0, r4
    37e8:	600b      	str	r3, [r1, #0]
    37ea:	bd10      	pop	{r4, pc}
    37ec:	089b      	lsrs	r3, r3, #2
    37ee:	600b      	str	r3, [r1, #0]
    37f0:	e7fb      	b.n	37ea <__lo0bits+0x20>
    37f2:	b29c      	uxth	r4, r3
    37f4:	0010      	movs	r0, r2
    37f6:	2c00      	cmp	r4, #0
    37f8:	d101      	bne.n	37fe <__lo0bits+0x34>
    37fa:	2010      	movs	r0, #16
    37fc:	0c1b      	lsrs	r3, r3, #16
    37fe:	b2da      	uxtb	r2, r3
    3800:	2a00      	cmp	r2, #0
    3802:	d101      	bne.n	3808 <__lo0bits+0x3e>
    3804:	3008      	adds	r0, #8
    3806:	0a1b      	lsrs	r3, r3, #8
    3808:	071a      	lsls	r2, r3, #28
    380a:	d101      	bne.n	3810 <__lo0bits+0x46>
    380c:	3004      	adds	r0, #4
    380e:	091b      	lsrs	r3, r3, #4
    3810:	079a      	lsls	r2, r3, #30
    3812:	d101      	bne.n	3818 <__lo0bits+0x4e>
    3814:	3002      	adds	r0, #2
    3816:	089b      	lsrs	r3, r3, #2
    3818:	07da      	lsls	r2, r3, #31
    381a:	d4e8      	bmi.n	37ee <__lo0bits+0x24>
    381c:	085b      	lsrs	r3, r3, #1
    381e:	d001      	beq.n	3824 <__lo0bits+0x5a>
    3820:	3001      	adds	r0, #1
    3822:	e7e4      	b.n	37ee <__lo0bits+0x24>
    3824:	2020      	movs	r0, #32
    3826:	e7e0      	b.n	37ea <__lo0bits+0x20>

00003828 <__i2b>:
    3828:	b510      	push	{r4, lr}
    382a:	000c      	movs	r4, r1
    382c:	2101      	movs	r1, #1
    382e:	f7ff ff25 	bl	367c <_Balloc>
    3832:	2301      	movs	r3, #1
    3834:	6144      	str	r4, [r0, #20]
    3836:	6103      	str	r3, [r0, #16]
    3838:	bd10      	pop	{r4, pc}

0000383a <__multiply>:
    383a:	b5f0      	push	{r4, r5, r6, r7, lr}
    383c:	690b      	ldr	r3, [r1, #16]
    383e:	0015      	movs	r5, r2
    3840:	6912      	ldr	r2, [r2, #16]
    3842:	b089      	sub	sp, #36	; 0x24
    3844:	000c      	movs	r4, r1
    3846:	4293      	cmp	r3, r2
    3848:	da01      	bge.n	384e <__multiply+0x14>
    384a:	002c      	movs	r4, r5
    384c:	000d      	movs	r5, r1
    384e:	6927      	ldr	r7, [r4, #16]
    3850:	692e      	ldr	r6, [r5, #16]
    3852:	68a2      	ldr	r2, [r4, #8]
    3854:	19bb      	adds	r3, r7, r6
    3856:	6861      	ldr	r1, [r4, #4]
    3858:	9301      	str	r3, [sp, #4]
    385a:	4293      	cmp	r3, r2
    385c:	dd00      	ble.n	3860 <__multiply+0x26>
    385e:	3101      	adds	r1, #1
    3860:	f7ff ff0c 	bl	367c <_Balloc>
    3864:	0003      	movs	r3, r0
    3866:	3314      	adds	r3, #20
    3868:	9300      	str	r3, [sp, #0]
    386a:	9a00      	ldr	r2, [sp, #0]
    386c:	19bb      	adds	r3, r7, r6
    386e:	4694      	mov	ip, r2
    3870:	009b      	lsls	r3, r3, #2
    3872:	449c      	add	ip, r3
    3874:	0013      	movs	r3, r2
    3876:	2200      	movs	r2, #0
    3878:	9004      	str	r0, [sp, #16]
    387a:	4563      	cmp	r3, ip
    387c:	d31c      	bcc.n	38b8 <__multiply+0x7e>
    387e:	002a      	movs	r2, r5
    3880:	3414      	adds	r4, #20
    3882:	00bf      	lsls	r7, r7, #2
    3884:	19e3      	adds	r3, r4, r7
    3886:	3214      	adds	r2, #20
    3888:	00b6      	lsls	r6, r6, #2
    388a:	9305      	str	r3, [sp, #20]
    388c:	1993      	adds	r3, r2, r6
    388e:	9402      	str	r4, [sp, #8]
    3890:	9306      	str	r3, [sp, #24]
    3892:	9b06      	ldr	r3, [sp, #24]
    3894:	429a      	cmp	r2, r3
    3896:	d311      	bcc.n	38bc <__multiply+0x82>
    3898:	9b01      	ldr	r3, [sp, #4]
    389a:	2b00      	cmp	r3, #0
    389c:	dd06      	ble.n	38ac <__multiply+0x72>
    389e:	2304      	movs	r3, #4
    38a0:	425b      	negs	r3, r3
    38a2:	449c      	add	ip, r3
    38a4:	4663      	mov	r3, ip
    38a6:	681b      	ldr	r3, [r3, #0]
    38a8:	2b00      	cmp	r3, #0
    38aa:	d051      	beq.n	3950 <__multiply+0x116>
    38ac:	9b04      	ldr	r3, [sp, #16]
    38ae:	9a01      	ldr	r2, [sp, #4]
    38b0:	0018      	movs	r0, r3
    38b2:	611a      	str	r2, [r3, #16]
    38b4:	b009      	add	sp, #36	; 0x24
    38b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    38b8:	c304      	stmia	r3!, {r2}
    38ba:	e7de      	b.n	387a <__multiply+0x40>
    38bc:	8814      	ldrh	r4, [r2, #0]
    38be:	2c00      	cmp	r4, #0
    38c0:	d01e      	beq.n	3900 <__multiply+0xc6>
    38c2:	2600      	movs	r6, #0
    38c4:	9d00      	ldr	r5, [sp, #0]
    38c6:	9f02      	ldr	r7, [sp, #8]
    38c8:	cf01      	ldmia	r7!, {r0}
    38ca:	9507      	str	r5, [sp, #28]
    38cc:	cd08      	ldmia	r5!, {r3}
    38ce:	9303      	str	r3, [sp, #12]
    38d0:	b283      	uxth	r3, r0
    38d2:	4363      	muls	r3, r4
    38d4:	0019      	movs	r1, r3
    38d6:	466b      	mov	r3, sp
    38d8:	0c00      	lsrs	r0, r0, #16
    38da:	899b      	ldrh	r3, [r3, #12]
    38dc:	4360      	muls	r0, r4
    38de:	18cb      	adds	r3, r1, r3
    38e0:	9903      	ldr	r1, [sp, #12]
    38e2:	199b      	adds	r3, r3, r6
    38e4:	0c09      	lsrs	r1, r1, #16
    38e6:	1841      	adds	r1, r0, r1
    38e8:	0c18      	lsrs	r0, r3, #16
    38ea:	1809      	adds	r1, r1, r0
    38ec:	0c0e      	lsrs	r6, r1, #16
    38ee:	b29b      	uxth	r3, r3
    38f0:	0409      	lsls	r1, r1, #16
    38f2:	430b      	orrs	r3, r1
    38f4:	9907      	ldr	r1, [sp, #28]
    38f6:	600b      	str	r3, [r1, #0]
    38f8:	9b05      	ldr	r3, [sp, #20]
    38fa:	42bb      	cmp	r3, r7
    38fc:	d8e4      	bhi.n	38c8 <__multiply+0x8e>
    38fe:	602e      	str	r6, [r5, #0]
    3900:	6813      	ldr	r3, [r2, #0]
    3902:	0c1b      	lsrs	r3, r3, #16
    3904:	9303      	str	r3, [sp, #12]
    3906:	d01e      	beq.n	3946 <__multiply+0x10c>
    3908:	2600      	movs	r6, #0
    390a:	9b00      	ldr	r3, [sp, #0]
    390c:	9c02      	ldr	r4, [sp, #8]
    390e:	681b      	ldr	r3, [r3, #0]
    3910:	9800      	ldr	r0, [sp, #0]
    3912:	0007      	movs	r7, r0
    3914:	8821      	ldrh	r1, [r4, #0]
    3916:	9d03      	ldr	r5, [sp, #12]
    3918:	b29b      	uxth	r3, r3
    391a:	4369      	muls	r1, r5
    391c:	c820      	ldmia	r0!, {r5}
    391e:	0c2d      	lsrs	r5, r5, #16
    3920:	1949      	adds	r1, r1, r5
    3922:	198e      	adds	r6, r1, r6
    3924:	0431      	lsls	r1, r6, #16
    3926:	430b      	orrs	r3, r1
    3928:	603b      	str	r3, [r7, #0]
    392a:	cc08      	ldmia	r4!, {r3}
    392c:	9903      	ldr	r1, [sp, #12]
    392e:	0c1b      	lsrs	r3, r3, #16
    3930:	434b      	muls	r3, r1
    3932:	6879      	ldr	r1, [r7, #4]
    3934:	0c36      	lsrs	r6, r6, #16
    3936:	b289      	uxth	r1, r1
    3938:	185b      	adds	r3, r3, r1
    393a:	9905      	ldr	r1, [sp, #20]
    393c:	199b      	adds	r3, r3, r6
    393e:	0c1e      	lsrs	r6, r3, #16
    3940:	42a1      	cmp	r1, r4
    3942:	d8e6      	bhi.n	3912 <__multiply+0xd8>
    3944:	6003      	str	r3, [r0, #0]
    3946:	9b00      	ldr	r3, [sp, #0]
    3948:	3204      	adds	r2, #4
    394a:	3304      	adds	r3, #4
    394c:	9300      	str	r3, [sp, #0]
    394e:	e7a0      	b.n	3892 <__multiply+0x58>
    3950:	9b01      	ldr	r3, [sp, #4]
    3952:	3b01      	subs	r3, #1
    3954:	9301      	str	r3, [sp, #4]
    3956:	e79f      	b.n	3898 <__multiply+0x5e>

00003958 <__pow5mult>:
    3958:	2303      	movs	r3, #3
    395a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    395c:	4013      	ands	r3, r2
    395e:	0005      	movs	r5, r0
    3960:	000e      	movs	r6, r1
    3962:	0014      	movs	r4, r2
    3964:	2b00      	cmp	r3, #0
    3966:	d008      	beq.n	397a <__pow5mult+0x22>
    3968:	4922      	ldr	r1, [pc, #136]	; (39f4 <__pow5mult+0x9c>)
    396a:	3b01      	subs	r3, #1
    396c:	009a      	lsls	r2, r3, #2
    396e:	5852      	ldr	r2, [r2, r1]
    3970:	2300      	movs	r3, #0
    3972:	0031      	movs	r1, r6
    3974:	f7ff fed3 	bl	371e <__multadd>
    3978:	0006      	movs	r6, r0
    397a:	10a3      	asrs	r3, r4, #2
    397c:	9301      	str	r3, [sp, #4]
    397e:	d036      	beq.n	39ee <__pow5mult+0x96>
    3980:	6a6c      	ldr	r4, [r5, #36]	; 0x24
    3982:	2c00      	cmp	r4, #0
    3984:	d107      	bne.n	3996 <__pow5mult+0x3e>
    3986:	2010      	movs	r0, #16
    3988:	f7ff fe5a 	bl	3640 <malloc>
    398c:	6268      	str	r0, [r5, #36]	; 0x24
    398e:	6044      	str	r4, [r0, #4]
    3990:	6084      	str	r4, [r0, #8]
    3992:	6004      	str	r4, [r0, #0]
    3994:	60c4      	str	r4, [r0, #12]
    3996:	6a6f      	ldr	r7, [r5, #36]	; 0x24
    3998:	68bc      	ldr	r4, [r7, #8]
    399a:	2c00      	cmp	r4, #0
    399c:	d107      	bne.n	39ae <__pow5mult+0x56>
    399e:	4916      	ldr	r1, [pc, #88]	; (39f8 <__pow5mult+0xa0>)
    39a0:	0028      	movs	r0, r5
    39a2:	f7ff ff41 	bl	3828 <__i2b>
    39a6:	2300      	movs	r3, #0
    39a8:	0004      	movs	r4, r0
    39aa:	60b8      	str	r0, [r7, #8]
    39ac:	6003      	str	r3, [r0, #0]
    39ae:	2201      	movs	r2, #1
    39b0:	9b01      	ldr	r3, [sp, #4]
    39b2:	4213      	tst	r3, r2
    39b4:	d00a      	beq.n	39cc <__pow5mult+0x74>
    39b6:	0031      	movs	r1, r6
    39b8:	0022      	movs	r2, r4
    39ba:	0028      	movs	r0, r5
    39bc:	f7ff ff3d 	bl	383a <__multiply>
    39c0:	0007      	movs	r7, r0
    39c2:	0031      	movs	r1, r6
    39c4:	0028      	movs	r0, r5
    39c6:	f7ff fe91 	bl	36ec <_Bfree>
    39ca:	003e      	movs	r6, r7
    39cc:	9b01      	ldr	r3, [sp, #4]
    39ce:	105b      	asrs	r3, r3, #1
    39d0:	9301      	str	r3, [sp, #4]
    39d2:	d00c      	beq.n	39ee <__pow5mult+0x96>
    39d4:	6820      	ldr	r0, [r4, #0]
    39d6:	2800      	cmp	r0, #0
    39d8:	d107      	bne.n	39ea <__pow5mult+0x92>
    39da:	0022      	movs	r2, r4
    39dc:	0021      	movs	r1, r4
    39de:	0028      	movs	r0, r5
    39e0:	f7ff ff2b 	bl	383a <__multiply>
    39e4:	2300      	movs	r3, #0
    39e6:	6020      	str	r0, [r4, #0]
    39e8:	6003      	str	r3, [r0, #0]
    39ea:	0004      	movs	r4, r0
    39ec:	e7df      	b.n	39ae <__pow5mult+0x56>
    39ee:	0030      	movs	r0, r6
    39f0:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    39f2:	46c0      	nop			; (mov r8, r8)
    39f4:	00006398 	.word	0x00006398
    39f8:	00000271 	.word	0x00000271

000039fc <__lshift>:
    39fc:	b5f0      	push	{r4, r5, r6, r7, lr}
    39fe:	000d      	movs	r5, r1
    3a00:	0017      	movs	r7, r2
    3a02:	692b      	ldr	r3, [r5, #16]
    3a04:	1154      	asrs	r4, r2, #5
    3a06:	b085      	sub	sp, #20
    3a08:	18e3      	adds	r3, r4, r3
    3a0a:	9302      	str	r3, [sp, #8]
    3a0c:	3301      	adds	r3, #1
    3a0e:	9301      	str	r3, [sp, #4]
    3a10:	6849      	ldr	r1, [r1, #4]
    3a12:	68ab      	ldr	r3, [r5, #8]
    3a14:	9003      	str	r0, [sp, #12]
    3a16:	9a01      	ldr	r2, [sp, #4]
    3a18:	4293      	cmp	r3, r2
    3a1a:	db34      	blt.n	3a86 <__lshift+0x8a>
    3a1c:	9803      	ldr	r0, [sp, #12]
    3a1e:	f7ff fe2d 	bl	367c <_Balloc>
    3a22:	2300      	movs	r3, #0
    3a24:	0002      	movs	r2, r0
    3a26:	0006      	movs	r6, r0
    3a28:	0019      	movs	r1, r3
    3a2a:	3214      	adds	r2, #20
    3a2c:	42a3      	cmp	r3, r4
    3a2e:	db2d      	blt.n	3a8c <__lshift+0x90>
    3a30:	43e3      	mvns	r3, r4
    3a32:	17db      	asrs	r3, r3, #31
    3a34:	401c      	ands	r4, r3
    3a36:	002b      	movs	r3, r5
    3a38:	211f      	movs	r1, #31
    3a3a:	00a4      	lsls	r4, r4, #2
    3a3c:	1914      	adds	r4, r2, r4
    3a3e:	692a      	ldr	r2, [r5, #16]
    3a40:	3314      	adds	r3, #20
    3a42:	0092      	lsls	r2, r2, #2
    3a44:	189a      	adds	r2, r3, r2
    3a46:	400f      	ands	r7, r1
    3a48:	d024      	beq.n	3a94 <__lshift+0x98>
    3a4a:	3101      	adds	r1, #1
    3a4c:	1bc9      	subs	r1, r1, r7
    3a4e:	468c      	mov	ip, r1
    3a50:	2100      	movs	r1, #0
    3a52:	6818      	ldr	r0, [r3, #0]
    3a54:	40b8      	lsls	r0, r7
    3a56:	4301      	orrs	r1, r0
    3a58:	4660      	mov	r0, ip
    3a5a:	6021      	str	r1, [r4, #0]
    3a5c:	cb02      	ldmia	r3!, {r1}
    3a5e:	3404      	adds	r4, #4
    3a60:	40c1      	lsrs	r1, r0
    3a62:	429a      	cmp	r2, r3
    3a64:	d8f5      	bhi.n	3a52 <__lshift+0x56>
    3a66:	6021      	str	r1, [r4, #0]
    3a68:	2900      	cmp	r1, #0
    3a6a:	d002      	beq.n	3a72 <__lshift+0x76>
    3a6c:	9b02      	ldr	r3, [sp, #8]
    3a6e:	3302      	adds	r3, #2
    3a70:	9301      	str	r3, [sp, #4]
    3a72:	9b01      	ldr	r3, [sp, #4]
    3a74:	9803      	ldr	r0, [sp, #12]
    3a76:	3b01      	subs	r3, #1
    3a78:	6133      	str	r3, [r6, #16]
    3a7a:	0029      	movs	r1, r5
    3a7c:	f7ff fe36 	bl	36ec <_Bfree>
    3a80:	0030      	movs	r0, r6
    3a82:	b005      	add	sp, #20
    3a84:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3a86:	3101      	adds	r1, #1
    3a88:	005b      	lsls	r3, r3, #1
    3a8a:	e7c4      	b.n	3a16 <__lshift+0x1a>
    3a8c:	0098      	lsls	r0, r3, #2
    3a8e:	5011      	str	r1, [r2, r0]
    3a90:	3301      	adds	r3, #1
    3a92:	e7cb      	b.n	3a2c <__lshift+0x30>
    3a94:	cb02      	ldmia	r3!, {r1}
    3a96:	c402      	stmia	r4!, {r1}
    3a98:	429a      	cmp	r2, r3
    3a9a:	d8fb      	bhi.n	3a94 <__lshift+0x98>
    3a9c:	e7e9      	b.n	3a72 <__lshift+0x76>

00003a9e <__mcmp>:
    3a9e:	690a      	ldr	r2, [r1, #16]
    3aa0:	6903      	ldr	r3, [r0, #16]
    3aa2:	b530      	push	{r4, r5, lr}
    3aa4:	1a9b      	subs	r3, r3, r2
    3aa6:	d10e      	bne.n	3ac6 <__mcmp+0x28>
    3aa8:	0092      	lsls	r2, r2, #2
    3aaa:	3014      	adds	r0, #20
    3aac:	3114      	adds	r1, #20
    3aae:	1884      	adds	r4, r0, r2
    3ab0:	1889      	adds	r1, r1, r2
    3ab2:	3c04      	subs	r4, #4
    3ab4:	3904      	subs	r1, #4
    3ab6:	6822      	ldr	r2, [r4, #0]
    3ab8:	680d      	ldr	r5, [r1, #0]
    3aba:	42aa      	cmp	r2, r5
    3abc:	d005      	beq.n	3aca <__mcmp+0x2c>
    3abe:	42aa      	cmp	r2, r5
    3ac0:	4192      	sbcs	r2, r2
    3ac2:	2301      	movs	r3, #1
    3ac4:	4313      	orrs	r3, r2
    3ac6:	0018      	movs	r0, r3
    3ac8:	bd30      	pop	{r4, r5, pc}
    3aca:	42a0      	cmp	r0, r4
    3acc:	d3f1      	bcc.n	3ab2 <__mcmp+0x14>
    3ace:	e7fa      	b.n	3ac6 <__mcmp+0x28>

00003ad0 <__mdiff>:
    3ad0:	b5f0      	push	{r4, r5, r6, r7, lr}
    3ad2:	000d      	movs	r5, r1
    3ad4:	b085      	sub	sp, #20
    3ad6:	0007      	movs	r7, r0
    3ad8:	0011      	movs	r1, r2
    3ada:	0028      	movs	r0, r5
    3adc:	0014      	movs	r4, r2
    3ade:	f7ff ffde 	bl	3a9e <__mcmp>
    3ae2:	1e06      	subs	r6, r0, #0
    3ae4:	d108      	bne.n	3af8 <__mdiff+0x28>
    3ae6:	0001      	movs	r1, r0
    3ae8:	0038      	movs	r0, r7
    3aea:	f7ff fdc7 	bl	367c <_Balloc>
    3aee:	2301      	movs	r3, #1
    3af0:	6146      	str	r6, [r0, #20]
    3af2:	6103      	str	r3, [r0, #16]
    3af4:	b005      	add	sp, #20
    3af6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3af8:	2301      	movs	r3, #1
    3afa:	9301      	str	r3, [sp, #4]
    3afc:	2800      	cmp	r0, #0
    3afe:	db04      	blt.n	3b0a <__mdiff+0x3a>
    3b00:	0023      	movs	r3, r4
    3b02:	002c      	movs	r4, r5
    3b04:	001d      	movs	r5, r3
    3b06:	2300      	movs	r3, #0
    3b08:	9301      	str	r3, [sp, #4]
    3b0a:	6861      	ldr	r1, [r4, #4]
    3b0c:	0038      	movs	r0, r7
    3b0e:	f7ff fdb5 	bl	367c <_Balloc>
    3b12:	002f      	movs	r7, r5
    3b14:	2200      	movs	r2, #0
    3b16:	9b01      	ldr	r3, [sp, #4]
    3b18:	6926      	ldr	r6, [r4, #16]
    3b1a:	60c3      	str	r3, [r0, #12]
    3b1c:	3414      	adds	r4, #20
    3b1e:	00b3      	lsls	r3, r6, #2
    3b20:	18e3      	adds	r3, r4, r3
    3b22:	9302      	str	r3, [sp, #8]
    3b24:	692b      	ldr	r3, [r5, #16]
    3b26:	3714      	adds	r7, #20
    3b28:	009b      	lsls	r3, r3, #2
    3b2a:	18fb      	adds	r3, r7, r3
    3b2c:	9303      	str	r3, [sp, #12]
    3b2e:	0003      	movs	r3, r0
    3b30:	4694      	mov	ip, r2
    3b32:	3314      	adds	r3, #20
    3b34:	cc20      	ldmia	r4!, {r5}
    3b36:	cf04      	ldmia	r7!, {r2}
    3b38:	9201      	str	r2, [sp, #4]
    3b3a:	b2aa      	uxth	r2, r5
    3b3c:	4494      	add	ip, r2
    3b3e:	466a      	mov	r2, sp
    3b40:	4661      	mov	r1, ip
    3b42:	8892      	ldrh	r2, [r2, #4]
    3b44:	0c2d      	lsrs	r5, r5, #16
    3b46:	1a8a      	subs	r2, r1, r2
    3b48:	9901      	ldr	r1, [sp, #4]
    3b4a:	0c09      	lsrs	r1, r1, #16
    3b4c:	1a69      	subs	r1, r5, r1
    3b4e:	1415      	asrs	r5, r2, #16
    3b50:	1949      	adds	r1, r1, r5
    3b52:	140d      	asrs	r5, r1, #16
    3b54:	b292      	uxth	r2, r2
    3b56:	0409      	lsls	r1, r1, #16
    3b58:	430a      	orrs	r2, r1
    3b5a:	601a      	str	r2, [r3, #0]
    3b5c:	9a03      	ldr	r2, [sp, #12]
    3b5e:	46ac      	mov	ip, r5
    3b60:	3304      	adds	r3, #4
    3b62:	42ba      	cmp	r2, r7
    3b64:	d8e6      	bhi.n	3b34 <__mdiff+0x64>
    3b66:	9902      	ldr	r1, [sp, #8]
    3b68:	001a      	movs	r2, r3
    3b6a:	428c      	cmp	r4, r1
    3b6c:	d305      	bcc.n	3b7a <__mdiff+0xaa>
    3b6e:	3a04      	subs	r2, #4
    3b70:	6813      	ldr	r3, [r2, #0]
    3b72:	2b00      	cmp	r3, #0
    3b74:	d00e      	beq.n	3b94 <__mdiff+0xc4>
    3b76:	6106      	str	r6, [r0, #16]
    3b78:	e7bc      	b.n	3af4 <__mdiff+0x24>
    3b7a:	cc04      	ldmia	r4!, {r2}
    3b7c:	b291      	uxth	r1, r2
    3b7e:	4461      	add	r1, ip
    3b80:	140d      	asrs	r5, r1, #16
    3b82:	0c12      	lsrs	r2, r2, #16
    3b84:	1952      	adds	r2, r2, r5
    3b86:	1415      	asrs	r5, r2, #16
    3b88:	b289      	uxth	r1, r1
    3b8a:	0412      	lsls	r2, r2, #16
    3b8c:	430a      	orrs	r2, r1
    3b8e:	46ac      	mov	ip, r5
    3b90:	c304      	stmia	r3!, {r2}
    3b92:	e7e8      	b.n	3b66 <__mdiff+0x96>
    3b94:	3e01      	subs	r6, #1
    3b96:	e7ea      	b.n	3b6e <__mdiff+0x9e>

00003b98 <__d2b>:
    3b98:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    3b9a:	001d      	movs	r5, r3
    3b9c:	2101      	movs	r1, #1
    3b9e:	9f08      	ldr	r7, [sp, #32]
    3ba0:	0014      	movs	r4, r2
    3ba2:	f7ff fd6b 	bl	367c <_Balloc>
    3ba6:	032b      	lsls	r3, r5, #12
    3ba8:	006d      	lsls	r5, r5, #1
    3baa:	0006      	movs	r6, r0
    3bac:	0b1b      	lsrs	r3, r3, #12
    3bae:	0d6d      	lsrs	r5, r5, #21
    3bb0:	d124      	bne.n	3bfc <__d2b+0x64>
    3bb2:	9301      	str	r3, [sp, #4]
    3bb4:	2c00      	cmp	r4, #0
    3bb6:	d027      	beq.n	3c08 <__d2b+0x70>
    3bb8:	4668      	mov	r0, sp
    3bba:	9400      	str	r4, [sp, #0]
    3bbc:	f7ff fe05 	bl	37ca <__lo0bits>
    3bc0:	9c00      	ldr	r4, [sp, #0]
    3bc2:	2800      	cmp	r0, #0
    3bc4:	d01e      	beq.n	3c04 <__d2b+0x6c>
    3bc6:	9b01      	ldr	r3, [sp, #4]
    3bc8:	2120      	movs	r1, #32
    3bca:	001a      	movs	r2, r3
    3bcc:	1a09      	subs	r1, r1, r0
    3bce:	408a      	lsls	r2, r1
    3bd0:	40c3      	lsrs	r3, r0
    3bd2:	4322      	orrs	r2, r4
    3bd4:	6172      	str	r2, [r6, #20]
    3bd6:	9301      	str	r3, [sp, #4]
    3bd8:	9c01      	ldr	r4, [sp, #4]
    3bda:	61b4      	str	r4, [r6, #24]
    3bdc:	1e63      	subs	r3, r4, #1
    3bde:	419c      	sbcs	r4, r3
    3be0:	3401      	adds	r4, #1
    3be2:	6134      	str	r4, [r6, #16]
    3be4:	2d00      	cmp	r5, #0
    3be6:	d018      	beq.n	3c1a <__d2b+0x82>
    3be8:	4b12      	ldr	r3, [pc, #72]	; (3c34 <__d2b+0x9c>)
    3bea:	18ed      	adds	r5, r5, r3
    3bec:	2335      	movs	r3, #53	; 0x35
    3bee:	182d      	adds	r5, r5, r0
    3bf0:	603d      	str	r5, [r7, #0]
    3bf2:	1a18      	subs	r0, r3, r0
    3bf4:	9b09      	ldr	r3, [sp, #36]	; 0x24
    3bf6:	6018      	str	r0, [r3, #0]
    3bf8:	0030      	movs	r0, r6
    3bfa:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    3bfc:	2280      	movs	r2, #128	; 0x80
    3bfe:	0352      	lsls	r2, r2, #13
    3c00:	4313      	orrs	r3, r2
    3c02:	e7d6      	b.n	3bb2 <__d2b+0x1a>
    3c04:	6174      	str	r4, [r6, #20]
    3c06:	e7e7      	b.n	3bd8 <__d2b+0x40>
    3c08:	a801      	add	r0, sp, #4
    3c0a:	f7ff fdde 	bl	37ca <__lo0bits>
    3c0e:	2401      	movs	r4, #1
    3c10:	9b01      	ldr	r3, [sp, #4]
    3c12:	6134      	str	r4, [r6, #16]
    3c14:	6173      	str	r3, [r6, #20]
    3c16:	3020      	adds	r0, #32
    3c18:	e7e4      	b.n	3be4 <__d2b+0x4c>
    3c1a:	4b07      	ldr	r3, [pc, #28]	; (3c38 <__d2b+0xa0>)
    3c1c:	18c0      	adds	r0, r0, r3
    3c1e:	4b07      	ldr	r3, [pc, #28]	; (3c3c <__d2b+0xa4>)
    3c20:	6038      	str	r0, [r7, #0]
    3c22:	18e3      	adds	r3, r4, r3
    3c24:	009b      	lsls	r3, r3, #2
    3c26:	18f3      	adds	r3, r6, r3
    3c28:	6958      	ldr	r0, [r3, #20]
    3c2a:	f7ff fdb4 	bl	3796 <__hi0bits>
    3c2e:	0164      	lsls	r4, r4, #5
    3c30:	1a20      	subs	r0, r4, r0
    3c32:	e7df      	b.n	3bf4 <__d2b+0x5c>
    3c34:	fffffbcd 	.word	0xfffffbcd
    3c38:	fffffbce 	.word	0xfffffbce
    3c3c:	3fffffff 	.word	0x3fffffff

00003c40 <_calloc_r>:
    3c40:	434a      	muls	r2, r1
    3c42:	b570      	push	{r4, r5, r6, lr}
    3c44:	0011      	movs	r1, r2
    3c46:	0014      	movs	r4, r2
    3c48:	f000 f852 	bl	3cf0 <_malloc_r>
    3c4c:	1e05      	subs	r5, r0, #0
    3c4e:	d003      	beq.n	3c58 <_calloc_r+0x18>
    3c50:	0022      	movs	r2, r4
    3c52:	2100      	movs	r1, #0
    3c54:	f7fd fe02 	bl	185c <memset>
    3c58:	0028      	movs	r0, r5
    3c5a:	bd70      	pop	{r4, r5, r6, pc}

00003c5c <_free_r>:
    3c5c:	b570      	push	{r4, r5, r6, lr}
    3c5e:	0005      	movs	r5, r0
    3c60:	2900      	cmp	r1, #0
    3c62:	d010      	beq.n	3c86 <_free_r+0x2a>
    3c64:	1f0c      	subs	r4, r1, #4
    3c66:	6823      	ldr	r3, [r4, #0]
    3c68:	2b00      	cmp	r3, #0
    3c6a:	da00      	bge.n	3c6e <_free_r+0x12>
    3c6c:	18e4      	adds	r4, r4, r3
    3c6e:	0028      	movs	r0, r5
    3c70:	f000 faae 	bl	41d0 <__malloc_lock>
    3c74:	4a1d      	ldr	r2, [pc, #116]	; (3cec <_free_r+0x90>)
    3c76:	6813      	ldr	r3, [r2, #0]
    3c78:	2b00      	cmp	r3, #0
    3c7a:	d105      	bne.n	3c88 <_free_r+0x2c>
    3c7c:	6063      	str	r3, [r4, #4]
    3c7e:	6014      	str	r4, [r2, #0]
    3c80:	0028      	movs	r0, r5
    3c82:	f000 faa6 	bl	41d2 <__malloc_unlock>
    3c86:	bd70      	pop	{r4, r5, r6, pc}
    3c88:	42a3      	cmp	r3, r4
    3c8a:	d909      	bls.n	3ca0 <_free_r+0x44>
    3c8c:	6821      	ldr	r1, [r4, #0]
    3c8e:	1860      	adds	r0, r4, r1
    3c90:	4283      	cmp	r3, r0
    3c92:	d1f3      	bne.n	3c7c <_free_r+0x20>
    3c94:	6818      	ldr	r0, [r3, #0]
    3c96:	685b      	ldr	r3, [r3, #4]
    3c98:	1841      	adds	r1, r0, r1
    3c9a:	6021      	str	r1, [r4, #0]
    3c9c:	e7ee      	b.n	3c7c <_free_r+0x20>
    3c9e:	0013      	movs	r3, r2
    3ca0:	685a      	ldr	r2, [r3, #4]
    3ca2:	2a00      	cmp	r2, #0
    3ca4:	d001      	beq.n	3caa <_free_r+0x4e>
    3ca6:	42a2      	cmp	r2, r4
    3ca8:	d9f9      	bls.n	3c9e <_free_r+0x42>
    3caa:	6819      	ldr	r1, [r3, #0]
    3cac:	1858      	adds	r0, r3, r1
    3cae:	42a0      	cmp	r0, r4
    3cb0:	d10b      	bne.n	3cca <_free_r+0x6e>
    3cb2:	6820      	ldr	r0, [r4, #0]
    3cb4:	1809      	adds	r1, r1, r0
    3cb6:	1858      	adds	r0, r3, r1
    3cb8:	6019      	str	r1, [r3, #0]
    3cba:	4282      	cmp	r2, r0
    3cbc:	d1e0      	bne.n	3c80 <_free_r+0x24>
    3cbe:	6810      	ldr	r0, [r2, #0]
    3cc0:	6852      	ldr	r2, [r2, #4]
    3cc2:	1841      	adds	r1, r0, r1
    3cc4:	6019      	str	r1, [r3, #0]
    3cc6:	605a      	str	r2, [r3, #4]
    3cc8:	e7da      	b.n	3c80 <_free_r+0x24>
    3cca:	42a0      	cmp	r0, r4
    3ccc:	d902      	bls.n	3cd4 <_free_r+0x78>
    3cce:	230c      	movs	r3, #12
    3cd0:	602b      	str	r3, [r5, #0]
    3cd2:	e7d5      	b.n	3c80 <_free_r+0x24>
    3cd4:	6821      	ldr	r1, [r4, #0]
    3cd6:	1860      	adds	r0, r4, r1
    3cd8:	4282      	cmp	r2, r0
    3cda:	d103      	bne.n	3ce4 <_free_r+0x88>
    3cdc:	6810      	ldr	r0, [r2, #0]
    3cde:	6852      	ldr	r2, [r2, #4]
    3ce0:	1841      	adds	r1, r0, r1
    3ce2:	6021      	str	r1, [r4, #0]
    3ce4:	6062      	str	r2, [r4, #4]
    3ce6:	605c      	str	r4, [r3, #4]
    3ce8:	e7ca      	b.n	3c80 <_free_r+0x24>
    3cea:	46c0      	nop			; (mov r8, r8)
    3cec:	20000294 	.word	0x20000294

00003cf0 <_malloc_r>:
    3cf0:	2303      	movs	r3, #3
    3cf2:	b570      	push	{r4, r5, r6, lr}
    3cf4:	1ccd      	adds	r5, r1, #3
    3cf6:	439d      	bics	r5, r3
    3cf8:	3508      	adds	r5, #8
    3cfa:	0006      	movs	r6, r0
    3cfc:	2d0c      	cmp	r5, #12
    3cfe:	d21e      	bcs.n	3d3e <_malloc_r+0x4e>
    3d00:	250c      	movs	r5, #12
    3d02:	42a9      	cmp	r1, r5
    3d04:	d81d      	bhi.n	3d42 <_malloc_r+0x52>
    3d06:	0030      	movs	r0, r6
    3d08:	f000 fa62 	bl	41d0 <__malloc_lock>
    3d0c:	4a25      	ldr	r2, [pc, #148]	; (3da4 <_malloc_r+0xb4>)
    3d0e:	6814      	ldr	r4, [r2, #0]
    3d10:	0021      	movs	r1, r4
    3d12:	2900      	cmp	r1, #0
    3d14:	d119      	bne.n	3d4a <_malloc_r+0x5a>
    3d16:	4c24      	ldr	r4, [pc, #144]	; (3da8 <_malloc_r+0xb8>)
    3d18:	6823      	ldr	r3, [r4, #0]
    3d1a:	2b00      	cmp	r3, #0
    3d1c:	d103      	bne.n	3d26 <_malloc_r+0x36>
    3d1e:	0030      	movs	r0, r6
    3d20:	f000 f988 	bl	4034 <_sbrk_r>
    3d24:	6020      	str	r0, [r4, #0]
    3d26:	0029      	movs	r1, r5
    3d28:	0030      	movs	r0, r6
    3d2a:	f000 f983 	bl	4034 <_sbrk_r>
    3d2e:	1c43      	adds	r3, r0, #1
    3d30:	d12c      	bne.n	3d8c <_malloc_r+0x9c>
    3d32:	230c      	movs	r3, #12
    3d34:	0030      	movs	r0, r6
    3d36:	6033      	str	r3, [r6, #0]
    3d38:	f000 fa4b 	bl	41d2 <__malloc_unlock>
    3d3c:	e003      	b.n	3d46 <_malloc_r+0x56>
    3d3e:	2d00      	cmp	r5, #0
    3d40:	dadf      	bge.n	3d02 <_malloc_r+0x12>
    3d42:	230c      	movs	r3, #12
    3d44:	6033      	str	r3, [r6, #0]
    3d46:	2000      	movs	r0, #0
    3d48:	bd70      	pop	{r4, r5, r6, pc}
    3d4a:	680b      	ldr	r3, [r1, #0]
    3d4c:	1b5b      	subs	r3, r3, r5
    3d4e:	d41a      	bmi.n	3d86 <_malloc_r+0x96>
    3d50:	2b0b      	cmp	r3, #11
    3d52:	d903      	bls.n	3d5c <_malloc_r+0x6c>
    3d54:	600b      	str	r3, [r1, #0]
    3d56:	18cc      	adds	r4, r1, r3
    3d58:	6025      	str	r5, [r4, #0]
    3d5a:	e003      	b.n	3d64 <_malloc_r+0x74>
    3d5c:	428c      	cmp	r4, r1
    3d5e:	d10e      	bne.n	3d7e <_malloc_r+0x8e>
    3d60:	6863      	ldr	r3, [r4, #4]
    3d62:	6013      	str	r3, [r2, #0]
    3d64:	0030      	movs	r0, r6
    3d66:	f000 fa34 	bl	41d2 <__malloc_unlock>
    3d6a:	0020      	movs	r0, r4
    3d6c:	2207      	movs	r2, #7
    3d6e:	300b      	adds	r0, #11
    3d70:	1d23      	adds	r3, r4, #4
    3d72:	4390      	bics	r0, r2
    3d74:	1ac3      	subs	r3, r0, r3
    3d76:	d0e7      	beq.n	3d48 <_malloc_r+0x58>
    3d78:	425a      	negs	r2, r3
    3d7a:	50e2      	str	r2, [r4, r3]
    3d7c:	e7e4      	b.n	3d48 <_malloc_r+0x58>
    3d7e:	684b      	ldr	r3, [r1, #4]
    3d80:	6063      	str	r3, [r4, #4]
    3d82:	000c      	movs	r4, r1
    3d84:	e7ee      	b.n	3d64 <_malloc_r+0x74>
    3d86:	000c      	movs	r4, r1
    3d88:	6849      	ldr	r1, [r1, #4]
    3d8a:	e7c2      	b.n	3d12 <_malloc_r+0x22>
    3d8c:	2303      	movs	r3, #3
    3d8e:	1cc4      	adds	r4, r0, #3
    3d90:	439c      	bics	r4, r3
    3d92:	42a0      	cmp	r0, r4
    3d94:	d0e0      	beq.n	3d58 <_malloc_r+0x68>
    3d96:	1a21      	subs	r1, r4, r0
    3d98:	0030      	movs	r0, r6
    3d9a:	f000 f94b 	bl	4034 <_sbrk_r>
    3d9e:	1c43      	adds	r3, r0, #1
    3da0:	d1da      	bne.n	3d58 <_malloc_r+0x68>
    3da2:	e7c6      	b.n	3d32 <_malloc_r+0x42>
    3da4:	20000294 	.word	0x20000294
    3da8:	20000298 	.word	0x20000298

00003dac <__sfputc_r>:
    3dac:	6893      	ldr	r3, [r2, #8]
    3dae:	b510      	push	{r4, lr}
    3db0:	3b01      	subs	r3, #1
    3db2:	6093      	str	r3, [r2, #8]
    3db4:	2b00      	cmp	r3, #0
    3db6:	da05      	bge.n	3dc4 <__sfputc_r+0x18>
    3db8:	6994      	ldr	r4, [r2, #24]
    3dba:	42a3      	cmp	r3, r4
    3dbc:	db08      	blt.n	3dd0 <__sfputc_r+0x24>
    3dbe:	b2cb      	uxtb	r3, r1
    3dc0:	2b0a      	cmp	r3, #10
    3dc2:	d005      	beq.n	3dd0 <__sfputc_r+0x24>
    3dc4:	6813      	ldr	r3, [r2, #0]
    3dc6:	1c58      	adds	r0, r3, #1
    3dc8:	6010      	str	r0, [r2, #0]
    3dca:	7019      	strb	r1, [r3, #0]
    3dcc:	b2c8      	uxtb	r0, r1
    3dce:	bd10      	pop	{r4, pc}
    3dd0:	f7fe fafe 	bl	23d0 <__swbuf_r>
    3dd4:	e7fb      	b.n	3dce <__sfputc_r+0x22>

00003dd6 <__sfputs_r>:
    3dd6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    3dd8:	0006      	movs	r6, r0
    3dda:	000f      	movs	r7, r1
    3ddc:	0014      	movs	r4, r2
    3dde:	18d5      	adds	r5, r2, r3
    3de0:	42ac      	cmp	r4, r5
    3de2:	d101      	bne.n	3de8 <__sfputs_r+0x12>
    3de4:	2000      	movs	r0, #0
    3de6:	e007      	b.n	3df8 <__sfputs_r+0x22>
    3de8:	7821      	ldrb	r1, [r4, #0]
    3dea:	003a      	movs	r2, r7
    3dec:	0030      	movs	r0, r6
    3dee:	f7ff ffdd 	bl	3dac <__sfputc_r>
    3df2:	3401      	adds	r4, #1
    3df4:	1c43      	adds	r3, r0, #1
    3df6:	d1f3      	bne.n	3de0 <__sfputs_r+0xa>
    3df8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

00003dfc <_vfiprintf_r>:
    3dfc:	b5f0      	push	{r4, r5, r6, r7, lr}
    3dfe:	b09f      	sub	sp, #124	; 0x7c
    3e00:	0006      	movs	r6, r0
    3e02:	000f      	movs	r7, r1
    3e04:	0014      	movs	r4, r2
    3e06:	9305      	str	r3, [sp, #20]
    3e08:	2800      	cmp	r0, #0
    3e0a:	d004      	beq.n	3e16 <_vfiprintf_r+0x1a>
    3e0c:	6983      	ldr	r3, [r0, #24]
    3e0e:	2b00      	cmp	r3, #0
    3e10:	d101      	bne.n	3e16 <_vfiprintf_r+0x1a>
    3e12:	f7ff fb0d 	bl	3430 <__sinit>
    3e16:	4b7f      	ldr	r3, [pc, #508]	; (4014 <_vfiprintf_r+0x218>)
    3e18:	429f      	cmp	r7, r3
    3e1a:	d15c      	bne.n	3ed6 <_vfiprintf_r+0xda>
    3e1c:	6877      	ldr	r7, [r6, #4]
    3e1e:	89bb      	ldrh	r3, [r7, #12]
    3e20:	071b      	lsls	r3, r3, #28
    3e22:	d562      	bpl.n	3eea <_vfiprintf_r+0xee>
    3e24:	693b      	ldr	r3, [r7, #16]
    3e26:	2b00      	cmp	r3, #0
    3e28:	d05f      	beq.n	3eea <_vfiprintf_r+0xee>
    3e2a:	2300      	movs	r3, #0
    3e2c:	ad06      	add	r5, sp, #24
    3e2e:	616b      	str	r3, [r5, #20]
    3e30:	3320      	adds	r3, #32
    3e32:	766b      	strb	r3, [r5, #25]
    3e34:	3310      	adds	r3, #16
    3e36:	76ab      	strb	r3, [r5, #26]
    3e38:	9402      	str	r4, [sp, #8]
    3e3a:	9c02      	ldr	r4, [sp, #8]
    3e3c:	7823      	ldrb	r3, [r4, #0]
    3e3e:	2b00      	cmp	r3, #0
    3e40:	d15d      	bne.n	3efe <_vfiprintf_r+0x102>
    3e42:	9b02      	ldr	r3, [sp, #8]
    3e44:	1ae3      	subs	r3, r4, r3
    3e46:	9304      	str	r3, [sp, #16]
    3e48:	d00d      	beq.n	3e66 <_vfiprintf_r+0x6a>
    3e4a:	9b04      	ldr	r3, [sp, #16]
    3e4c:	9a02      	ldr	r2, [sp, #8]
    3e4e:	0039      	movs	r1, r7
    3e50:	0030      	movs	r0, r6
    3e52:	f7ff ffc0 	bl	3dd6 <__sfputs_r>
    3e56:	1c43      	adds	r3, r0, #1
    3e58:	d100      	bne.n	3e5c <_vfiprintf_r+0x60>
    3e5a:	e0cc      	b.n	3ff6 <_vfiprintf_r+0x1fa>
    3e5c:	696a      	ldr	r2, [r5, #20]
    3e5e:	9b04      	ldr	r3, [sp, #16]
    3e60:	4694      	mov	ip, r2
    3e62:	4463      	add	r3, ip
    3e64:	616b      	str	r3, [r5, #20]
    3e66:	7823      	ldrb	r3, [r4, #0]
    3e68:	2b00      	cmp	r3, #0
    3e6a:	d100      	bne.n	3e6e <_vfiprintf_r+0x72>
    3e6c:	e0c3      	b.n	3ff6 <_vfiprintf_r+0x1fa>
    3e6e:	2201      	movs	r2, #1
    3e70:	2300      	movs	r3, #0
    3e72:	4252      	negs	r2, r2
    3e74:	606a      	str	r2, [r5, #4]
    3e76:	a902      	add	r1, sp, #8
    3e78:	3254      	adds	r2, #84	; 0x54
    3e7a:	1852      	adds	r2, r2, r1
    3e7c:	3401      	adds	r4, #1
    3e7e:	602b      	str	r3, [r5, #0]
    3e80:	60eb      	str	r3, [r5, #12]
    3e82:	60ab      	str	r3, [r5, #8]
    3e84:	7013      	strb	r3, [r2, #0]
    3e86:	65ab      	str	r3, [r5, #88]	; 0x58
    3e88:	7821      	ldrb	r1, [r4, #0]
    3e8a:	2205      	movs	r2, #5
    3e8c:	4862      	ldr	r0, [pc, #392]	; (4018 <_vfiprintf_r+0x21c>)
    3e8e:	f7ff fbe1 	bl	3654 <memchr>
    3e92:	1c63      	adds	r3, r4, #1
    3e94:	469c      	mov	ip, r3
    3e96:	2800      	cmp	r0, #0
    3e98:	d135      	bne.n	3f06 <_vfiprintf_r+0x10a>
    3e9a:	6829      	ldr	r1, [r5, #0]
    3e9c:	06cb      	lsls	r3, r1, #27
    3e9e:	d504      	bpl.n	3eaa <_vfiprintf_r+0xae>
    3ea0:	2353      	movs	r3, #83	; 0x53
    3ea2:	aa02      	add	r2, sp, #8
    3ea4:	3020      	adds	r0, #32
    3ea6:	189b      	adds	r3, r3, r2
    3ea8:	7018      	strb	r0, [r3, #0]
    3eaa:	070b      	lsls	r3, r1, #28
    3eac:	d504      	bpl.n	3eb8 <_vfiprintf_r+0xbc>
    3eae:	2353      	movs	r3, #83	; 0x53
    3eb0:	202b      	movs	r0, #43	; 0x2b
    3eb2:	aa02      	add	r2, sp, #8
    3eb4:	189b      	adds	r3, r3, r2
    3eb6:	7018      	strb	r0, [r3, #0]
    3eb8:	7823      	ldrb	r3, [r4, #0]
    3eba:	2b2a      	cmp	r3, #42	; 0x2a
    3ebc:	d02c      	beq.n	3f18 <_vfiprintf_r+0x11c>
    3ebe:	2000      	movs	r0, #0
    3ec0:	210a      	movs	r1, #10
    3ec2:	9b09      	ldr	r3, [sp, #36]	; 0x24
    3ec4:	7822      	ldrb	r2, [r4, #0]
    3ec6:	3a30      	subs	r2, #48	; 0x30
    3ec8:	2a09      	cmp	r2, #9
    3eca:	d800      	bhi.n	3ece <_vfiprintf_r+0xd2>
    3ecc:	e06b      	b.n	3fa6 <_vfiprintf_r+0x1aa>
    3ece:	2800      	cmp	r0, #0
    3ed0:	d02a      	beq.n	3f28 <_vfiprintf_r+0x12c>
    3ed2:	9309      	str	r3, [sp, #36]	; 0x24
    3ed4:	e028      	b.n	3f28 <_vfiprintf_r+0x12c>
    3ed6:	4b51      	ldr	r3, [pc, #324]	; (401c <_vfiprintf_r+0x220>)
    3ed8:	429f      	cmp	r7, r3
    3eda:	d101      	bne.n	3ee0 <_vfiprintf_r+0xe4>
    3edc:	68b7      	ldr	r7, [r6, #8]
    3ede:	e79e      	b.n	3e1e <_vfiprintf_r+0x22>
    3ee0:	4b4f      	ldr	r3, [pc, #316]	; (4020 <_vfiprintf_r+0x224>)
    3ee2:	429f      	cmp	r7, r3
    3ee4:	d19b      	bne.n	3e1e <_vfiprintf_r+0x22>
    3ee6:	68f7      	ldr	r7, [r6, #12]
    3ee8:	e799      	b.n	3e1e <_vfiprintf_r+0x22>
    3eea:	0039      	movs	r1, r7
    3eec:	0030      	movs	r0, r6
    3eee:	f7fe fac5 	bl	247c <__swsetup_r>
    3ef2:	2800      	cmp	r0, #0
    3ef4:	d099      	beq.n	3e2a <_vfiprintf_r+0x2e>
    3ef6:	2001      	movs	r0, #1
    3ef8:	4240      	negs	r0, r0
    3efa:	b01f      	add	sp, #124	; 0x7c
    3efc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3efe:	2b25      	cmp	r3, #37	; 0x25
    3f00:	d09f      	beq.n	3e42 <_vfiprintf_r+0x46>
    3f02:	3401      	adds	r4, #1
    3f04:	e79a      	b.n	3e3c <_vfiprintf_r+0x40>
    3f06:	4b44      	ldr	r3, [pc, #272]	; (4018 <_vfiprintf_r+0x21c>)
    3f08:	6829      	ldr	r1, [r5, #0]
    3f0a:	1ac0      	subs	r0, r0, r3
    3f0c:	2301      	movs	r3, #1
    3f0e:	4083      	lsls	r3, r0
    3f10:	430b      	orrs	r3, r1
    3f12:	602b      	str	r3, [r5, #0]
    3f14:	4664      	mov	r4, ip
    3f16:	e7b7      	b.n	3e88 <_vfiprintf_r+0x8c>
    3f18:	9b05      	ldr	r3, [sp, #20]
    3f1a:	1d18      	adds	r0, r3, #4
    3f1c:	681b      	ldr	r3, [r3, #0]
    3f1e:	9005      	str	r0, [sp, #20]
    3f20:	2b00      	cmp	r3, #0
    3f22:	db3a      	blt.n	3f9a <_vfiprintf_r+0x19e>
    3f24:	9309      	str	r3, [sp, #36]	; 0x24
    3f26:	4664      	mov	r4, ip
    3f28:	7823      	ldrb	r3, [r4, #0]
    3f2a:	2b2e      	cmp	r3, #46	; 0x2e
    3f2c:	d10b      	bne.n	3f46 <_vfiprintf_r+0x14a>
    3f2e:	7863      	ldrb	r3, [r4, #1]
    3f30:	1c62      	adds	r2, r4, #1
    3f32:	2b2a      	cmp	r3, #42	; 0x2a
    3f34:	d13f      	bne.n	3fb6 <_vfiprintf_r+0x1ba>
    3f36:	9b05      	ldr	r3, [sp, #20]
    3f38:	3402      	adds	r4, #2
    3f3a:	1d1a      	adds	r2, r3, #4
    3f3c:	681b      	ldr	r3, [r3, #0]
    3f3e:	9205      	str	r2, [sp, #20]
    3f40:	2b00      	cmp	r3, #0
    3f42:	db35      	blt.n	3fb0 <_vfiprintf_r+0x1b4>
    3f44:	9307      	str	r3, [sp, #28]
    3f46:	7821      	ldrb	r1, [r4, #0]
    3f48:	2203      	movs	r2, #3
    3f4a:	4836      	ldr	r0, [pc, #216]	; (4024 <_vfiprintf_r+0x228>)
    3f4c:	f7ff fb82 	bl	3654 <memchr>
    3f50:	2800      	cmp	r0, #0
    3f52:	d007      	beq.n	3f64 <_vfiprintf_r+0x168>
    3f54:	4b33      	ldr	r3, [pc, #204]	; (4024 <_vfiprintf_r+0x228>)
    3f56:	682a      	ldr	r2, [r5, #0]
    3f58:	1ac0      	subs	r0, r0, r3
    3f5a:	2340      	movs	r3, #64	; 0x40
    3f5c:	4083      	lsls	r3, r0
    3f5e:	4313      	orrs	r3, r2
    3f60:	602b      	str	r3, [r5, #0]
    3f62:	3401      	adds	r4, #1
    3f64:	7821      	ldrb	r1, [r4, #0]
    3f66:	1c63      	adds	r3, r4, #1
    3f68:	2206      	movs	r2, #6
    3f6a:	482f      	ldr	r0, [pc, #188]	; (4028 <_vfiprintf_r+0x22c>)
    3f6c:	9302      	str	r3, [sp, #8]
    3f6e:	7629      	strb	r1, [r5, #24]
    3f70:	f7ff fb70 	bl	3654 <memchr>
    3f74:	2800      	cmp	r0, #0
    3f76:	d044      	beq.n	4002 <_vfiprintf_r+0x206>
    3f78:	4b2c      	ldr	r3, [pc, #176]	; (402c <_vfiprintf_r+0x230>)
    3f7a:	2b00      	cmp	r3, #0
    3f7c:	d12f      	bne.n	3fde <_vfiprintf_r+0x1e2>
    3f7e:	6829      	ldr	r1, [r5, #0]
    3f80:	9b05      	ldr	r3, [sp, #20]
    3f82:	2207      	movs	r2, #7
    3f84:	05c9      	lsls	r1, r1, #23
    3f86:	d528      	bpl.n	3fda <_vfiprintf_r+0x1de>
    3f88:	189b      	adds	r3, r3, r2
    3f8a:	4393      	bics	r3, r2
    3f8c:	3308      	adds	r3, #8
    3f8e:	9305      	str	r3, [sp, #20]
    3f90:	696b      	ldr	r3, [r5, #20]
    3f92:	9a03      	ldr	r2, [sp, #12]
    3f94:	189b      	adds	r3, r3, r2
    3f96:	616b      	str	r3, [r5, #20]
    3f98:	e74f      	b.n	3e3a <_vfiprintf_r+0x3e>
    3f9a:	425b      	negs	r3, r3
    3f9c:	60eb      	str	r3, [r5, #12]
    3f9e:	2302      	movs	r3, #2
    3fa0:	430b      	orrs	r3, r1
    3fa2:	602b      	str	r3, [r5, #0]
    3fa4:	e7bf      	b.n	3f26 <_vfiprintf_r+0x12a>
    3fa6:	434b      	muls	r3, r1
    3fa8:	3401      	adds	r4, #1
    3faa:	189b      	adds	r3, r3, r2
    3fac:	2001      	movs	r0, #1
    3fae:	e789      	b.n	3ec4 <_vfiprintf_r+0xc8>
    3fb0:	2301      	movs	r3, #1
    3fb2:	425b      	negs	r3, r3
    3fb4:	e7c6      	b.n	3f44 <_vfiprintf_r+0x148>
    3fb6:	2300      	movs	r3, #0
    3fb8:	0014      	movs	r4, r2
    3fba:	200a      	movs	r0, #10
    3fbc:	001a      	movs	r2, r3
    3fbe:	606b      	str	r3, [r5, #4]
    3fc0:	7821      	ldrb	r1, [r4, #0]
    3fc2:	3930      	subs	r1, #48	; 0x30
    3fc4:	2909      	cmp	r1, #9
    3fc6:	d903      	bls.n	3fd0 <_vfiprintf_r+0x1d4>
    3fc8:	2b00      	cmp	r3, #0
    3fca:	d0bc      	beq.n	3f46 <_vfiprintf_r+0x14a>
    3fcc:	9207      	str	r2, [sp, #28]
    3fce:	e7ba      	b.n	3f46 <_vfiprintf_r+0x14a>
    3fd0:	4342      	muls	r2, r0
    3fd2:	3401      	adds	r4, #1
    3fd4:	1852      	adds	r2, r2, r1
    3fd6:	2301      	movs	r3, #1
    3fd8:	e7f2      	b.n	3fc0 <_vfiprintf_r+0x1c4>
    3fda:	3307      	adds	r3, #7
    3fdc:	e7d5      	b.n	3f8a <_vfiprintf_r+0x18e>
    3fde:	ab05      	add	r3, sp, #20
    3fe0:	9300      	str	r3, [sp, #0]
    3fe2:	003a      	movs	r2, r7
    3fe4:	4b12      	ldr	r3, [pc, #72]	; (4030 <_vfiprintf_r+0x234>)
    3fe6:	0029      	movs	r1, r5
    3fe8:	0030      	movs	r0, r6
    3fea:	f7fd fcdb 	bl	19a4 <_printf_float>
    3fee:	9003      	str	r0, [sp, #12]
    3ff0:	9b03      	ldr	r3, [sp, #12]
    3ff2:	3301      	adds	r3, #1
    3ff4:	d1cc      	bne.n	3f90 <_vfiprintf_r+0x194>
    3ff6:	89bb      	ldrh	r3, [r7, #12]
    3ff8:	065b      	lsls	r3, r3, #25
    3ffa:	d500      	bpl.n	3ffe <_vfiprintf_r+0x202>
    3ffc:	e77b      	b.n	3ef6 <_vfiprintf_r+0xfa>
    3ffe:	980b      	ldr	r0, [sp, #44]	; 0x2c
    4000:	e77b      	b.n	3efa <_vfiprintf_r+0xfe>
    4002:	ab05      	add	r3, sp, #20
    4004:	9300      	str	r3, [sp, #0]
    4006:	003a      	movs	r2, r7
    4008:	4b09      	ldr	r3, [pc, #36]	; (4030 <_vfiprintf_r+0x234>)
    400a:	0029      	movs	r1, r5
    400c:	0030      	movs	r0, r6
    400e:	f7fd ff83 	bl	1f18 <_printf_i>
    4012:	e7ec      	b.n	3fee <_vfiprintf_r+0x1f2>
    4014:	00006268 	.word	0x00006268
    4018:	000063a4 	.word	0x000063a4
    401c:	00006288 	.word	0x00006288
    4020:	00006248 	.word	0x00006248
    4024:	000063aa 	.word	0x000063aa
    4028:	000063ae 	.word	0x000063ae
    402c:	000019a5 	.word	0x000019a5
    4030:	00003dd7 	.word	0x00003dd7

00004034 <_sbrk_r>:
    4034:	2300      	movs	r3, #0
    4036:	b570      	push	{r4, r5, r6, lr}
    4038:	4c06      	ldr	r4, [pc, #24]	; (4054 <_sbrk_r+0x20>)
    403a:	0005      	movs	r5, r0
    403c:	0008      	movs	r0, r1
    403e:	6023      	str	r3, [r4, #0]
    4040:	f7fd fbca 	bl	17d8 <_sbrk>
    4044:	1c43      	adds	r3, r0, #1
    4046:	d103      	bne.n	4050 <_sbrk_r+0x1c>
    4048:	6823      	ldr	r3, [r4, #0]
    404a:	2b00      	cmp	r3, #0
    404c:	d000      	beq.n	4050 <_sbrk_r+0x1c>
    404e:	602b      	str	r3, [r5, #0]
    4050:	bd70      	pop	{r4, r5, r6, pc}
    4052:	46c0      	nop			; (mov r8, r8)
    4054:	200002a8 	.word	0x200002a8

00004058 <__sread>:
    4058:	b570      	push	{r4, r5, r6, lr}
    405a:	000c      	movs	r4, r1
    405c:	250e      	movs	r5, #14
    405e:	5f49      	ldrsh	r1, [r1, r5]
    4060:	f000 f8b8 	bl	41d4 <_read_r>
    4064:	2800      	cmp	r0, #0
    4066:	db03      	blt.n	4070 <__sread+0x18>
    4068:	6d63      	ldr	r3, [r4, #84]	; 0x54
    406a:	181b      	adds	r3, r3, r0
    406c:	6563      	str	r3, [r4, #84]	; 0x54
    406e:	bd70      	pop	{r4, r5, r6, pc}
    4070:	89a3      	ldrh	r3, [r4, #12]
    4072:	4a02      	ldr	r2, [pc, #8]	; (407c <__sread+0x24>)
    4074:	4013      	ands	r3, r2
    4076:	81a3      	strh	r3, [r4, #12]
    4078:	e7f9      	b.n	406e <__sread+0x16>
    407a:	46c0      	nop			; (mov r8, r8)
    407c:	ffffefff 	.word	0xffffefff

00004080 <__swrite>:
    4080:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    4082:	001f      	movs	r7, r3
    4084:	898b      	ldrh	r3, [r1, #12]
    4086:	0005      	movs	r5, r0
    4088:	000c      	movs	r4, r1
    408a:	0016      	movs	r6, r2
    408c:	05db      	lsls	r3, r3, #23
    408e:	d505      	bpl.n	409c <__swrite+0x1c>
    4090:	230e      	movs	r3, #14
    4092:	5ec9      	ldrsh	r1, [r1, r3]
    4094:	2200      	movs	r2, #0
    4096:	2302      	movs	r3, #2
    4098:	f000 f874 	bl	4184 <_lseek_r>
    409c:	89a3      	ldrh	r3, [r4, #12]
    409e:	4a05      	ldr	r2, [pc, #20]	; (40b4 <__swrite+0x34>)
    40a0:	0028      	movs	r0, r5
    40a2:	4013      	ands	r3, r2
    40a4:	81a3      	strh	r3, [r4, #12]
    40a6:	0032      	movs	r2, r6
    40a8:	230e      	movs	r3, #14
    40aa:	5ee1      	ldrsh	r1, [r4, r3]
    40ac:	003b      	movs	r3, r7
    40ae:	f000 f81f 	bl	40f0 <_write_r>
    40b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    40b4:	ffffefff 	.word	0xffffefff

000040b8 <__sseek>:
    40b8:	b570      	push	{r4, r5, r6, lr}
    40ba:	000c      	movs	r4, r1
    40bc:	250e      	movs	r5, #14
    40be:	5f49      	ldrsh	r1, [r1, r5]
    40c0:	f000 f860 	bl	4184 <_lseek_r>
    40c4:	89a3      	ldrh	r3, [r4, #12]
    40c6:	1c42      	adds	r2, r0, #1
    40c8:	d103      	bne.n	40d2 <__sseek+0x1a>
    40ca:	4a05      	ldr	r2, [pc, #20]	; (40e0 <__sseek+0x28>)
    40cc:	4013      	ands	r3, r2
    40ce:	81a3      	strh	r3, [r4, #12]
    40d0:	bd70      	pop	{r4, r5, r6, pc}
    40d2:	2280      	movs	r2, #128	; 0x80
    40d4:	0152      	lsls	r2, r2, #5
    40d6:	4313      	orrs	r3, r2
    40d8:	81a3      	strh	r3, [r4, #12]
    40da:	6560      	str	r0, [r4, #84]	; 0x54
    40dc:	e7f8      	b.n	40d0 <__sseek+0x18>
    40de:	46c0      	nop			; (mov r8, r8)
    40e0:	ffffefff 	.word	0xffffefff

000040e4 <__sclose>:
    40e4:	b510      	push	{r4, lr}
    40e6:	230e      	movs	r3, #14
    40e8:	5ec9      	ldrsh	r1, [r1, r3]
    40ea:	f000 f815 	bl	4118 <_close_r>
    40ee:	bd10      	pop	{r4, pc}

000040f0 <_write_r>:
    40f0:	b570      	push	{r4, r5, r6, lr}
    40f2:	0005      	movs	r5, r0
    40f4:	0008      	movs	r0, r1
    40f6:	0011      	movs	r1, r2
    40f8:	2200      	movs	r2, #0
    40fa:	4c06      	ldr	r4, [pc, #24]	; (4114 <_write_r+0x24>)
    40fc:	6022      	str	r2, [r4, #0]
    40fe:	001a      	movs	r2, r3
    4100:	f7fc fd6e 	bl	be0 <_write>
    4104:	1c43      	adds	r3, r0, #1
    4106:	d103      	bne.n	4110 <_write_r+0x20>
    4108:	6823      	ldr	r3, [r4, #0]
    410a:	2b00      	cmp	r3, #0
    410c:	d000      	beq.n	4110 <_write_r+0x20>
    410e:	602b      	str	r3, [r5, #0]
    4110:	bd70      	pop	{r4, r5, r6, pc}
    4112:	46c0      	nop			; (mov r8, r8)
    4114:	200002a8 	.word	0x200002a8

00004118 <_close_r>:
    4118:	2300      	movs	r3, #0
    411a:	b570      	push	{r4, r5, r6, lr}
    411c:	4c06      	ldr	r4, [pc, #24]	; (4138 <_close_r+0x20>)
    411e:	0005      	movs	r5, r0
    4120:	0008      	movs	r0, r1
    4122:	6023      	str	r3, [r4, #0]
    4124:	f7fd fb6a 	bl	17fc <_close>
    4128:	1c43      	adds	r3, r0, #1
    412a:	d103      	bne.n	4134 <_close_r+0x1c>
    412c:	6823      	ldr	r3, [r4, #0]
    412e:	2b00      	cmp	r3, #0
    4130:	d000      	beq.n	4134 <_close_r+0x1c>
    4132:	602b      	str	r3, [r5, #0]
    4134:	bd70      	pop	{r4, r5, r6, pc}
    4136:	46c0      	nop			; (mov r8, r8)
    4138:	200002a8 	.word	0x200002a8

0000413c <_fstat_r>:
    413c:	2300      	movs	r3, #0
    413e:	b570      	push	{r4, r5, r6, lr}
    4140:	4c06      	ldr	r4, [pc, #24]	; (415c <_fstat_r+0x20>)
    4142:	0005      	movs	r5, r0
    4144:	0008      	movs	r0, r1
    4146:	0011      	movs	r1, r2
    4148:	6023      	str	r3, [r4, #0]
    414a:	f7fd fb5a 	bl	1802 <_fstat>
    414e:	1c43      	adds	r3, r0, #1
    4150:	d103      	bne.n	415a <_fstat_r+0x1e>
    4152:	6823      	ldr	r3, [r4, #0]
    4154:	2b00      	cmp	r3, #0
    4156:	d000      	beq.n	415a <_fstat_r+0x1e>
    4158:	602b      	str	r3, [r5, #0]
    415a:	bd70      	pop	{r4, r5, r6, pc}
    415c:	200002a8 	.word	0x200002a8

00004160 <_isatty_r>:
    4160:	2300      	movs	r3, #0
    4162:	b570      	push	{r4, r5, r6, lr}
    4164:	4c06      	ldr	r4, [pc, #24]	; (4180 <_isatty_r+0x20>)
    4166:	0005      	movs	r5, r0
    4168:	0008      	movs	r0, r1
    416a:	6023      	str	r3, [r4, #0]
    416c:	f7fd fb4e 	bl	180c <_isatty>
    4170:	1c43      	adds	r3, r0, #1
    4172:	d103      	bne.n	417c <_isatty_r+0x1c>
    4174:	6823      	ldr	r3, [r4, #0]
    4176:	2b00      	cmp	r3, #0
    4178:	d000      	beq.n	417c <_isatty_r+0x1c>
    417a:	602b      	str	r3, [r5, #0]
    417c:	bd70      	pop	{r4, r5, r6, pc}
    417e:	46c0      	nop			; (mov r8, r8)
    4180:	200002a8 	.word	0x200002a8

00004184 <_lseek_r>:
    4184:	b570      	push	{r4, r5, r6, lr}
    4186:	0005      	movs	r5, r0
    4188:	0008      	movs	r0, r1
    418a:	0011      	movs	r1, r2
    418c:	2200      	movs	r2, #0
    418e:	4c06      	ldr	r4, [pc, #24]	; (41a8 <_lseek_r+0x24>)
    4190:	6022      	str	r2, [r4, #0]
    4192:	001a      	movs	r2, r3
    4194:	f7fd fb3c 	bl	1810 <_lseek>
    4198:	1c43      	adds	r3, r0, #1
    419a:	d103      	bne.n	41a4 <_lseek_r+0x20>
    419c:	6823      	ldr	r3, [r4, #0]
    419e:	2b00      	cmp	r3, #0
    41a0:	d000      	beq.n	41a4 <_lseek_r+0x20>
    41a2:	602b      	str	r3, [r5, #0]
    41a4:	bd70      	pop	{r4, r5, r6, pc}
    41a6:	46c0      	nop			; (mov r8, r8)
    41a8:	200002a8 	.word	0x200002a8

000041ac <__ascii_mbtowc>:
    41ac:	b082      	sub	sp, #8
    41ae:	2900      	cmp	r1, #0
    41b0:	d100      	bne.n	41b4 <__ascii_mbtowc+0x8>
    41b2:	a901      	add	r1, sp, #4
    41b4:	1e10      	subs	r0, r2, #0
    41b6:	d006      	beq.n	41c6 <__ascii_mbtowc+0x1a>
    41b8:	2b00      	cmp	r3, #0
    41ba:	d006      	beq.n	41ca <__ascii_mbtowc+0x1e>
    41bc:	7813      	ldrb	r3, [r2, #0]
    41be:	600b      	str	r3, [r1, #0]
    41c0:	7810      	ldrb	r0, [r2, #0]
    41c2:	1e43      	subs	r3, r0, #1
    41c4:	4198      	sbcs	r0, r3
    41c6:	b002      	add	sp, #8
    41c8:	4770      	bx	lr
    41ca:	2002      	movs	r0, #2
    41cc:	4240      	negs	r0, r0
    41ce:	e7fa      	b.n	41c6 <__ascii_mbtowc+0x1a>

000041d0 <__malloc_lock>:
    41d0:	4770      	bx	lr

000041d2 <__malloc_unlock>:
    41d2:	4770      	bx	lr

000041d4 <_read_r>:
    41d4:	b570      	push	{r4, r5, r6, lr}
    41d6:	0005      	movs	r5, r0
    41d8:	0008      	movs	r0, r1
    41da:	0011      	movs	r1, r2
    41dc:	2200      	movs	r2, #0
    41de:	4c06      	ldr	r4, [pc, #24]	; (41f8 <_read_r+0x24>)
    41e0:	6022      	str	r2, [r4, #0]
    41e2:	001a      	movs	r2, r3
    41e4:	f7fc fcda 	bl	b9c <_read>
    41e8:	1c43      	adds	r3, r0, #1
    41ea:	d103      	bne.n	41f4 <_read_r+0x20>
    41ec:	6823      	ldr	r3, [r4, #0]
    41ee:	2b00      	cmp	r3, #0
    41f0:	d000      	beq.n	41f4 <_read_r+0x20>
    41f2:	602b      	str	r3, [r5, #0]
    41f4:	bd70      	pop	{r4, r5, r6, pc}
    41f6:	46c0      	nop			; (mov r8, r8)
    41f8:	200002a8 	.word	0x200002a8

000041fc <__ascii_wctomb>:
    41fc:	1e0b      	subs	r3, r1, #0
    41fe:	d004      	beq.n	420a <__ascii_wctomb+0xe>
    4200:	2aff      	cmp	r2, #255	; 0xff
    4202:	d904      	bls.n	420e <__ascii_wctomb+0x12>
    4204:	238a      	movs	r3, #138	; 0x8a
    4206:	6003      	str	r3, [r0, #0]
    4208:	3b8b      	subs	r3, #139	; 0x8b
    420a:	0018      	movs	r0, r3
    420c:	4770      	bx	lr
    420e:	700a      	strb	r2, [r1, #0]
    4210:	2301      	movs	r3, #1
    4212:	e7fa      	b.n	420a <__ascii_wctomb+0xe>

00004214 <__gnu_thumb1_case_uqi>:
    4214:	b402      	push	{r1}
    4216:	4671      	mov	r1, lr
    4218:	0849      	lsrs	r1, r1, #1
    421a:	0049      	lsls	r1, r1, #1
    421c:	5c09      	ldrb	r1, [r1, r0]
    421e:	0049      	lsls	r1, r1, #1
    4220:	448e      	add	lr, r1
    4222:	bc02      	pop	{r1}
    4224:	4770      	bx	lr
    4226:	46c0      	nop			; (mov r8, r8)

00004228 <__udivsi3>:
    4228:	2200      	movs	r2, #0
    422a:	0843      	lsrs	r3, r0, #1
    422c:	428b      	cmp	r3, r1
    422e:	d374      	bcc.n	431a <__udivsi3+0xf2>
    4230:	0903      	lsrs	r3, r0, #4
    4232:	428b      	cmp	r3, r1
    4234:	d35f      	bcc.n	42f6 <__udivsi3+0xce>
    4236:	0a03      	lsrs	r3, r0, #8
    4238:	428b      	cmp	r3, r1
    423a:	d344      	bcc.n	42c6 <__udivsi3+0x9e>
    423c:	0b03      	lsrs	r3, r0, #12
    423e:	428b      	cmp	r3, r1
    4240:	d328      	bcc.n	4294 <__udivsi3+0x6c>
    4242:	0c03      	lsrs	r3, r0, #16
    4244:	428b      	cmp	r3, r1
    4246:	d30d      	bcc.n	4264 <__udivsi3+0x3c>
    4248:	22ff      	movs	r2, #255	; 0xff
    424a:	0209      	lsls	r1, r1, #8
    424c:	ba12      	rev	r2, r2
    424e:	0c03      	lsrs	r3, r0, #16
    4250:	428b      	cmp	r3, r1
    4252:	d302      	bcc.n	425a <__udivsi3+0x32>
    4254:	1212      	asrs	r2, r2, #8
    4256:	0209      	lsls	r1, r1, #8
    4258:	d065      	beq.n	4326 <__udivsi3+0xfe>
    425a:	0b03      	lsrs	r3, r0, #12
    425c:	428b      	cmp	r3, r1
    425e:	d319      	bcc.n	4294 <__udivsi3+0x6c>
    4260:	e000      	b.n	4264 <__udivsi3+0x3c>
    4262:	0a09      	lsrs	r1, r1, #8
    4264:	0bc3      	lsrs	r3, r0, #15
    4266:	428b      	cmp	r3, r1
    4268:	d301      	bcc.n	426e <__udivsi3+0x46>
    426a:	03cb      	lsls	r3, r1, #15
    426c:	1ac0      	subs	r0, r0, r3
    426e:	4152      	adcs	r2, r2
    4270:	0b83      	lsrs	r3, r0, #14
    4272:	428b      	cmp	r3, r1
    4274:	d301      	bcc.n	427a <__udivsi3+0x52>
    4276:	038b      	lsls	r3, r1, #14
    4278:	1ac0      	subs	r0, r0, r3
    427a:	4152      	adcs	r2, r2
    427c:	0b43      	lsrs	r3, r0, #13
    427e:	428b      	cmp	r3, r1
    4280:	d301      	bcc.n	4286 <__udivsi3+0x5e>
    4282:	034b      	lsls	r3, r1, #13
    4284:	1ac0      	subs	r0, r0, r3
    4286:	4152      	adcs	r2, r2
    4288:	0b03      	lsrs	r3, r0, #12
    428a:	428b      	cmp	r3, r1
    428c:	d301      	bcc.n	4292 <__udivsi3+0x6a>
    428e:	030b      	lsls	r3, r1, #12
    4290:	1ac0      	subs	r0, r0, r3
    4292:	4152      	adcs	r2, r2
    4294:	0ac3      	lsrs	r3, r0, #11
    4296:	428b      	cmp	r3, r1
    4298:	d301      	bcc.n	429e <__udivsi3+0x76>
    429a:	02cb      	lsls	r3, r1, #11
    429c:	1ac0      	subs	r0, r0, r3
    429e:	4152      	adcs	r2, r2
    42a0:	0a83      	lsrs	r3, r0, #10
    42a2:	428b      	cmp	r3, r1
    42a4:	d301      	bcc.n	42aa <__udivsi3+0x82>
    42a6:	028b      	lsls	r3, r1, #10
    42a8:	1ac0      	subs	r0, r0, r3
    42aa:	4152      	adcs	r2, r2
    42ac:	0a43      	lsrs	r3, r0, #9
    42ae:	428b      	cmp	r3, r1
    42b0:	d301      	bcc.n	42b6 <__udivsi3+0x8e>
    42b2:	024b      	lsls	r3, r1, #9
    42b4:	1ac0      	subs	r0, r0, r3
    42b6:	4152      	adcs	r2, r2
    42b8:	0a03      	lsrs	r3, r0, #8
    42ba:	428b      	cmp	r3, r1
    42bc:	d301      	bcc.n	42c2 <__udivsi3+0x9a>
    42be:	020b      	lsls	r3, r1, #8
    42c0:	1ac0      	subs	r0, r0, r3
    42c2:	4152      	adcs	r2, r2
    42c4:	d2cd      	bcs.n	4262 <__udivsi3+0x3a>
    42c6:	09c3      	lsrs	r3, r0, #7
    42c8:	428b      	cmp	r3, r1
    42ca:	d301      	bcc.n	42d0 <__udivsi3+0xa8>
    42cc:	01cb      	lsls	r3, r1, #7
    42ce:	1ac0      	subs	r0, r0, r3
    42d0:	4152      	adcs	r2, r2
    42d2:	0983      	lsrs	r3, r0, #6
    42d4:	428b      	cmp	r3, r1
    42d6:	d301      	bcc.n	42dc <__udivsi3+0xb4>
    42d8:	018b      	lsls	r3, r1, #6
    42da:	1ac0      	subs	r0, r0, r3
    42dc:	4152      	adcs	r2, r2
    42de:	0943      	lsrs	r3, r0, #5
    42e0:	428b      	cmp	r3, r1
    42e2:	d301      	bcc.n	42e8 <__udivsi3+0xc0>
    42e4:	014b      	lsls	r3, r1, #5
    42e6:	1ac0      	subs	r0, r0, r3
    42e8:	4152      	adcs	r2, r2
    42ea:	0903      	lsrs	r3, r0, #4
    42ec:	428b      	cmp	r3, r1
    42ee:	d301      	bcc.n	42f4 <__udivsi3+0xcc>
    42f0:	010b      	lsls	r3, r1, #4
    42f2:	1ac0      	subs	r0, r0, r3
    42f4:	4152      	adcs	r2, r2
    42f6:	08c3      	lsrs	r3, r0, #3
    42f8:	428b      	cmp	r3, r1
    42fa:	d301      	bcc.n	4300 <__udivsi3+0xd8>
    42fc:	00cb      	lsls	r3, r1, #3
    42fe:	1ac0      	subs	r0, r0, r3
    4300:	4152      	adcs	r2, r2
    4302:	0883      	lsrs	r3, r0, #2
    4304:	428b      	cmp	r3, r1
    4306:	d301      	bcc.n	430c <__udivsi3+0xe4>
    4308:	008b      	lsls	r3, r1, #2
    430a:	1ac0      	subs	r0, r0, r3
    430c:	4152      	adcs	r2, r2
    430e:	0843      	lsrs	r3, r0, #1
    4310:	428b      	cmp	r3, r1
    4312:	d301      	bcc.n	4318 <__udivsi3+0xf0>
    4314:	004b      	lsls	r3, r1, #1
    4316:	1ac0      	subs	r0, r0, r3
    4318:	4152      	adcs	r2, r2
    431a:	1a41      	subs	r1, r0, r1
    431c:	d200      	bcs.n	4320 <__udivsi3+0xf8>
    431e:	4601      	mov	r1, r0
    4320:	4152      	adcs	r2, r2
    4322:	4610      	mov	r0, r2
    4324:	4770      	bx	lr
    4326:	e7ff      	b.n	4328 <__udivsi3+0x100>
    4328:	b501      	push	{r0, lr}
    432a:	2000      	movs	r0, #0
    432c:	f000 f8f0 	bl	4510 <__aeabi_idiv0>
    4330:	bd02      	pop	{r1, pc}
    4332:	46c0      	nop			; (mov r8, r8)

00004334 <__aeabi_uidivmod>:
    4334:	2900      	cmp	r1, #0
    4336:	d0f7      	beq.n	4328 <__udivsi3+0x100>
    4338:	e776      	b.n	4228 <__udivsi3>
    433a:	4770      	bx	lr

0000433c <__divsi3>:
    433c:	4603      	mov	r3, r0
    433e:	430b      	orrs	r3, r1
    4340:	d47f      	bmi.n	4442 <__divsi3+0x106>
    4342:	2200      	movs	r2, #0
    4344:	0843      	lsrs	r3, r0, #1
    4346:	428b      	cmp	r3, r1
    4348:	d374      	bcc.n	4434 <__divsi3+0xf8>
    434a:	0903      	lsrs	r3, r0, #4
    434c:	428b      	cmp	r3, r1
    434e:	d35f      	bcc.n	4410 <__divsi3+0xd4>
    4350:	0a03      	lsrs	r3, r0, #8
    4352:	428b      	cmp	r3, r1
    4354:	d344      	bcc.n	43e0 <__divsi3+0xa4>
    4356:	0b03      	lsrs	r3, r0, #12
    4358:	428b      	cmp	r3, r1
    435a:	d328      	bcc.n	43ae <__divsi3+0x72>
    435c:	0c03      	lsrs	r3, r0, #16
    435e:	428b      	cmp	r3, r1
    4360:	d30d      	bcc.n	437e <__divsi3+0x42>
    4362:	22ff      	movs	r2, #255	; 0xff
    4364:	0209      	lsls	r1, r1, #8
    4366:	ba12      	rev	r2, r2
    4368:	0c03      	lsrs	r3, r0, #16
    436a:	428b      	cmp	r3, r1
    436c:	d302      	bcc.n	4374 <__divsi3+0x38>
    436e:	1212      	asrs	r2, r2, #8
    4370:	0209      	lsls	r1, r1, #8
    4372:	d065      	beq.n	4440 <__divsi3+0x104>
    4374:	0b03      	lsrs	r3, r0, #12
    4376:	428b      	cmp	r3, r1
    4378:	d319      	bcc.n	43ae <__divsi3+0x72>
    437a:	e000      	b.n	437e <__divsi3+0x42>
    437c:	0a09      	lsrs	r1, r1, #8
    437e:	0bc3      	lsrs	r3, r0, #15
    4380:	428b      	cmp	r3, r1
    4382:	d301      	bcc.n	4388 <__divsi3+0x4c>
    4384:	03cb      	lsls	r3, r1, #15
    4386:	1ac0      	subs	r0, r0, r3
    4388:	4152      	adcs	r2, r2
    438a:	0b83      	lsrs	r3, r0, #14
    438c:	428b      	cmp	r3, r1
    438e:	d301      	bcc.n	4394 <__divsi3+0x58>
    4390:	038b      	lsls	r3, r1, #14
    4392:	1ac0      	subs	r0, r0, r3
    4394:	4152      	adcs	r2, r2
    4396:	0b43      	lsrs	r3, r0, #13
    4398:	428b      	cmp	r3, r1
    439a:	d301      	bcc.n	43a0 <__divsi3+0x64>
    439c:	034b      	lsls	r3, r1, #13
    439e:	1ac0      	subs	r0, r0, r3
    43a0:	4152      	adcs	r2, r2
    43a2:	0b03      	lsrs	r3, r0, #12
    43a4:	428b      	cmp	r3, r1
    43a6:	d301      	bcc.n	43ac <__divsi3+0x70>
    43a8:	030b      	lsls	r3, r1, #12
    43aa:	1ac0      	subs	r0, r0, r3
    43ac:	4152      	adcs	r2, r2
    43ae:	0ac3      	lsrs	r3, r0, #11
    43b0:	428b      	cmp	r3, r1
    43b2:	d301      	bcc.n	43b8 <__divsi3+0x7c>
    43b4:	02cb      	lsls	r3, r1, #11
    43b6:	1ac0      	subs	r0, r0, r3
    43b8:	4152      	adcs	r2, r2
    43ba:	0a83      	lsrs	r3, r0, #10
    43bc:	428b      	cmp	r3, r1
    43be:	d301      	bcc.n	43c4 <__divsi3+0x88>
    43c0:	028b      	lsls	r3, r1, #10
    43c2:	1ac0      	subs	r0, r0, r3
    43c4:	4152      	adcs	r2, r2
    43c6:	0a43      	lsrs	r3, r0, #9
    43c8:	428b      	cmp	r3, r1
    43ca:	d301      	bcc.n	43d0 <__divsi3+0x94>
    43cc:	024b      	lsls	r3, r1, #9
    43ce:	1ac0      	subs	r0, r0, r3
    43d0:	4152      	adcs	r2, r2
    43d2:	0a03      	lsrs	r3, r0, #8
    43d4:	428b      	cmp	r3, r1
    43d6:	d301      	bcc.n	43dc <__divsi3+0xa0>
    43d8:	020b      	lsls	r3, r1, #8
    43da:	1ac0      	subs	r0, r0, r3
    43dc:	4152      	adcs	r2, r2
    43de:	d2cd      	bcs.n	437c <__divsi3+0x40>
    43e0:	09c3      	lsrs	r3, r0, #7
    43e2:	428b      	cmp	r3, r1
    43e4:	d301      	bcc.n	43ea <__divsi3+0xae>
    43e6:	01cb      	lsls	r3, r1, #7
    43e8:	1ac0      	subs	r0, r0, r3
    43ea:	4152      	adcs	r2, r2
    43ec:	0983      	lsrs	r3, r0, #6
    43ee:	428b      	cmp	r3, r1
    43f0:	d301      	bcc.n	43f6 <__divsi3+0xba>
    43f2:	018b      	lsls	r3, r1, #6
    43f4:	1ac0      	subs	r0, r0, r3
    43f6:	4152      	adcs	r2, r2
    43f8:	0943      	lsrs	r3, r0, #5
    43fa:	428b      	cmp	r3, r1
    43fc:	d301      	bcc.n	4402 <__divsi3+0xc6>
    43fe:	014b      	lsls	r3, r1, #5
    4400:	1ac0      	subs	r0, r0, r3
    4402:	4152      	adcs	r2, r2
    4404:	0903      	lsrs	r3, r0, #4
    4406:	428b      	cmp	r3, r1
    4408:	d301      	bcc.n	440e <__divsi3+0xd2>
    440a:	010b      	lsls	r3, r1, #4
    440c:	1ac0      	subs	r0, r0, r3
    440e:	4152      	adcs	r2, r2
    4410:	08c3      	lsrs	r3, r0, #3
    4412:	428b      	cmp	r3, r1
    4414:	d301      	bcc.n	441a <__divsi3+0xde>
    4416:	00cb      	lsls	r3, r1, #3
    4418:	1ac0      	subs	r0, r0, r3
    441a:	4152      	adcs	r2, r2
    441c:	0883      	lsrs	r3, r0, #2
    441e:	428b      	cmp	r3, r1
    4420:	d301      	bcc.n	4426 <__divsi3+0xea>
    4422:	008b      	lsls	r3, r1, #2
    4424:	1ac0      	subs	r0, r0, r3
    4426:	4152      	adcs	r2, r2
    4428:	0843      	lsrs	r3, r0, #1
    442a:	428b      	cmp	r3, r1
    442c:	d301      	bcc.n	4432 <__divsi3+0xf6>
    442e:	004b      	lsls	r3, r1, #1
    4430:	1ac0      	subs	r0, r0, r3
    4432:	4152      	adcs	r2, r2
    4434:	1a41      	subs	r1, r0, r1
    4436:	d200      	bcs.n	443a <__divsi3+0xfe>
    4438:	4601      	mov	r1, r0
    443a:	4152      	adcs	r2, r2
    443c:	4610      	mov	r0, r2
    443e:	4770      	bx	lr
    4440:	e05d      	b.n	44fe <__divsi3+0x1c2>
    4442:	0fca      	lsrs	r2, r1, #31
    4444:	d000      	beq.n	4448 <__divsi3+0x10c>
    4446:	4249      	negs	r1, r1
    4448:	1003      	asrs	r3, r0, #32
    444a:	d300      	bcc.n	444e <__divsi3+0x112>
    444c:	4240      	negs	r0, r0
    444e:	4053      	eors	r3, r2
    4450:	2200      	movs	r2, #0
    4452:	469c      	mov	ip, r3
    4454:	0903      	lsrs	r3, r0, #4
    4456:	428b      	cmp	r3, r1
    4458:	d32d      	bcc.n	44b6 <__divsi3+0x17a>
    445a:	0a03      	lsrs	r3, r0, #8
    445c:	428b      	cmp	r3, r1
    445e:	d312      	bcc.n	4486 <__divsi3+0x14a>
    4460:	22fc      	movs	r2, #252	; 0xfc
    4462:	0189      	lsls	r1, r1, #6
    4464:	ba12      	rev	r2, r2
    4466:	0a03      	lsrs	r3, r0, #8
    4468:	428b      	cmp	r3, r1
    446a:	d30c      	bcc.n	4486 <__divsi3+0x14a>
    446c:	0189      	lsls	r1, r1, #6
    446e:	1192      	asrs	r2, r2, #6
    4470:	428b      	cmp	r3, r1
    4472:	d308      	bcc.n	4486 <__divsi3+0x14a>
    4474:	0189      	lsls	r1, r1, #6
    4476:	1192      	asrs	r2, r2, #6
    4478:	428b      	cmp	r3, r1
    447a:	d304      	bcc.n	4486 <__divsi3+0x14a>
    447c:	0189      	lsls	r1, r1, #6
    447e:	d03a      	beq.n	44f6 <__divsi3+0x1ba>
    4480:	1192      	asrs	r2, r2, #6
    4482:	e000      	b.n	4486 <__divsi3+0x14a>
    4484:	0989      	lsrs	r1, r1, #6
    4486:	09c3      	lsrs	r3, r0, #7
    4488:	428b      	cmp	r3, r1
    448a:	d301      	bcc.n	4490 <__divsi3+0x154>
    448c:	01cb      	lsls	r3, r1, #7
    448e:	1ac0      	subs	r0, r0, r3
    4490:	4152      	adcs	r2, r2
    4492:	0983      	lsrs	r3, r0, #6
    4494:	428b      	cmp	r3, r1
    4496:	d301      	bcc.n	449c <__divsi3+0x160>
    4498:	018b      	lsls	r3, r1, #6
    449a:	1ac0      	subs	r0, r0, r3
    449c:	4152      	adcs	r2, r2
    449e:	0943      	lsrs	r3, r0, #5
    44a0:	428b      	cmp	r3, r1
    44a2:	d301      	bcc.n	44a8 <__divsi3+0x16c>
    44a4:	014b      	lsls	r3, r1, #5
    44a6:	1ac0      	subs	r0, r0, r3
    44a8:	4152      	adcs	r2, r2
    44aa:	0903      	lsrs	r3, r0, #4
    44ac:	428b      	cmp	r3, r1
    44ae:	d301      	bcc.n	44b4 <__divsi3+0x178>
    44b0:	010b      	lsls	r3, r1, #4
    44b2:	1ac0      	subs	r0, r0, r3
    44b4:	4152      	adcs	r2, r2
    44b6:	08c3      	lsrs	r3, r0, #3
    44b8:	428b      	cmp	r3, r1
    44ba:	d301      	bcc.n	44c0 <__divsi3+0x184>
    44bc:	00cb      	lsls	r3, r1, #3
    44be:	1ac0      	subs	r0, r0, r3
    44c0:	4152      	adcs	r2, r2
    44c2:	0883      	lsrs	r3, r0, #2
    44c4:	428b      	cmp	r3, r1
    44c6:	d301      	bcc.n	44cc <__divsi3+0x190>
    44c8:	008b      	lsls	r3, r1, #2
    44ca:	1ac0      	subs	r0, r0, r3
    44cc:	4152      	adcs	r2, r2
    44ce:	d2d9      	bcs.n	4484 <__divsi3+0x148>
    44d0:	0843      	lsrs	r3, r0, #1
    44d2:	428b      	cmp	r3, r1
    44d4:	d301      	bcc.n	44da <__divsi3+0x19e>
    44d6:	004b      	lsls	r3, r1, #1
    44d8:	1ac0      	subs	r0, r0, r3
    44da:	4152      	adcs	r2, r2
    44dc:	1a41      	subs	r1, r0, r1
    44de:	d200      	bcs.n	44e2 <__divsi3+0x1a6>
    44e0:	4601      	mov	r1, r0
    44e2:	4663      	mov	r3, ip
    44e4:	4152      	adcs	r2, r2
    44e6:	105b      	asrs	r3, r3, #1
    44e8:	4610      	mov	r0, r2
    44ea:	d301      	bcc.n	44f0 <__divsi3+0x1b4>
    44ec:	4240      	negs	r0, r0
    44ee:	2b00      	cmp	r3, #0
    44f0:	d500      	bpl.n	44f4 <__divsi3+0x1b8>
    44f2:	4249      	negs	r1, r1
    44f4:	4770      	bx	lr
    44f6:	4663      	mov	r3, ip
    44f8:	105b      	asrs	r3, r3, #1
    44fa:	d300      	bcc.n	44fe <__divsi3+0x1c2>
    44fc:	4240      	negs	r0, r0
    44fe:	b501      	push	{r0, lr}
    4500:	2000      	movs	r0, #0
    4502:	f000 f805 	bl	4510 <__aeabi_idiv0>
    4506:	bd02      	pop	{r1, pc}

00004508 <__aeabi_idivmod>:
    4508:	2900      	cmp	r1, #0
    450a:	d0f8      	beq.n	44fe <__divsi3+0x1c2>
    450c:	e716      	b.n	433c <__divsi3>
    450e:	4770      	bx	lr

00004510 <__aeabi_idiv0>:
    4510:	4770      	bx	lr
    4512:	46c0      	nop			; (mov r8, r8)

00004514 <__aeabi_cdrcmple>:
    4514:	4684      	mov	ip, r0
    4516:	1c10      	adds	r0, r2, #0
    4518:	4662      	mov	r2, ip
    451a:	468c      	mov	ip, r1
    451c:	1c19      	adds	r1, r3, #0
    451e:	4663      	mov	r3, ip
    4520:	e000      	b.n	4524 <__aeabi_cdcmpeq>
    4522:	46c0      	nop			; (mov r8, r8)

00004524 <__aeabi_cdcmpeq>:
    4524:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    4526:	f000 ff3f 	bl	53a8 <__ledf2>
    452a:	2800      	cmp	r0, #0
    452c:	d401      	bmi.n	4532 <__aeabi_cdcmpeq+0xe>
    452e:	2100      	movs	r1, #0
    4530:	42c8      	cmn	r0, r1
    4532:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

00004534 <__aeabi_dcmpeq>:
    4534:	b510      	push	{r4, lr}
    4536:	f000 fe99 	bl	526c <__eqdf2>
    453a:	4240      	negs	r0, r0
    453c:	3001      	adds	r0, #1
    453e:	bd10      	pop	{r4, pc}

00004540 <__aeabi_dcmplt>:
    4540:	b510      	push	{r4, lr}
    4542:	f000 ff31 	bl	53a8 <__ledf2>
    4546:	2800      	cmp	r0, #0
    4548:	db01      	blt.n	454e <__aeabi_dcmplt+0xe>
    454a:	2000      	movs	r0, #0
    454c:	bd10      	pop	{r4, pc}
    454e:	2001      	movs	r0, #1
    4550:	bd10      	pop	{r4, pc}
    4552:	46c0      	nop			; (mov r8, r8)

00004554 <__aeabi_dcmple>:
    4554:	b510      	push	{r4, lr}
    4556:	f000 ff27 	bl	53a8 <__ledf2>
    455a:	2800      	cmp	r0, #0
    455c:	dd01      	ble.n	4562 <__aeabi_dcmple+0xe>
    455e:	2000      	movs	r0, #0
    4560:	bd10      	pop	{r4, pc}
    4562:	2001      	movs	r0, #1
    4564:	bd10      	pop	{r4, pc}
    4566:	46c0      	nop			; (mov r8, r8)

00004568 <__aeabi_dcmpgt>:
    4568:	b510      	push	{r4, lr}
    456a:	f000 feb9 	bl	52e0 <__gedf2>
    456e:	2800      	cmp	r0, #0
    4570:	dc01      	bgt.n	4576 <__aeabi_dcmpgt+0xe>
    4572:	2000      	movs	r0, #0
    4574:	bd10      	pop	{r4, pc}
    4576:	2001      	movs	r0, #1
    4578:	bd10      	pop	{r4, pc}
    457a:	46c0      	nop			; (mov r8, r8)

0000457c <__aeabi_dcmpge>:
    457c:	b510      	push	{r4, lr}
    457e:	f000 feaf 	bl	52e0 <__gedf2>
    4582:	2800      	cmp	r0, #0
    4584:	da01      	bge.n	458a <__aeabi_dcmpge+0xe>
    4586:	2000      	movs	r0, #0
    4588:	bd10      	pop	{r4, pc}
    458a:	2001      	movs	r0, #1
    458c:	bd10      	pop	{r4, pc}
    458e:	46c0      	nop			; (mov r8, r8)

00004590 <__aeabi_lmul>:
    4590:	b5f0      	push	{r4, r5, r6, r7, lr}
    4592:	46ce      	mov	lr, r9
    4594:	4647      	mov	r7, r8
    4596:	0415      	lsls	r5, r2, #16
    4598:	0c2d      	lsrs	r5, r5, #16
    459a:	002e      	movs	r6, r5
    459c:	b580      	push	{r7, lr}
    459e:	0407      	lsls	r7, r0, #16
    45a0:	0c14      	lsrs	r4, r2, #16
    45a2:	0c3f      	lsrs	r7, r7, #16
    45a4:	4699      	mov	r9, r3
    45a6:	0c03      	lsrs	r3, r0, #16
    45a8:	437e      	muls	r6, r7
    45aa:	435d      	muls	r5, r3
    45ac:	4367      	muls	r7, r4
    45ae:	4363      	muls	r3, r4
    45b0:	197f      	adds	r7, r7, r5
    45b2:	0c34      	lsrs	r4, r6, #16
    45b4:	19e4      	adds	r4, r4, r7
    45b6:	469c      	mov	ip, r3
    45b8:	42a5      	cmp	r5, r4
    45ba:	d903      	bls.n	45c4 <__aeabi_lmul+0x34>
    45bc:	2380      	movs	r3, #128	; 0x80
    45be:	025b      	lsls	r3, r3, #9
    45c0:	4698      	mov	r8, r3
    45c2:	44c4      	add	ip, r8
    45c4:	464b      	mov	r3, r9
    45c6:	4351      	muls	r1, r2
    45c8:	4343      	muls	r3, r0
    45ca:	0436      	lsls	r6, r6, #16
    45cc:	0c36      	lsrs	r6, r6, #16
    45ce:	0c25      	lsrs	r5, r4, #16
    45d0:	0424      	lsls	r4, r4, #16
    45d2:	4465      	add	r5, ip
    45d4:	19a4      	adds	r4, r4, r6
    45d6:	1859      	adds	r1, r3, r1
    45d8:	1949      	adds	r1, r1, r5
    45da:	0020      	movs	r0, r4
    45dc:	bc0c      	pop	{r2, r3}
    45de:	4690      	mov	r8, r2
    45e0:	4699      	mov	r9, r3
    45e2:	bdf0      	pop	{r4, r5, r6, r7, pc}

000045e4 <__aeabi_dadd>:
    45e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    45e6:	4645      	mov	r5, r8
    45e8:	46de      	mov	lr, fp
    45ea:	4657      	mov	r7, sl
    45ec:	464e      	mov	r6, r9
    45ee:	030c      	lsls	r4, r1, #12
    45f0:	b5e0      	push	{r5, r6, r7, lr}
    45f2:	004e      	lsls	r6, r1, #1
    45f4:	0fc9      	lsrs	r1, r1, #31
    45f6:	4688      	mov	r8, r1
    45f8:	000d      	movs	r5, r1
    45fa:	0a61      	lsrs	r1, r4, #9
    45fc:	0f44      	lsrs	r4, r0, #29
    45fe:	430c      	orrs	r4, r1
    4600:	00c7      	lsls	r7, r0, #3
    4602:	0319      	lsls	r1, r3, #12
    4604:	0058      	lsls	r0, r3, #1
    4606:	0fdb      	lsrs	r3, r3, #31
    4608:	469b      	mov	fp, r3
    460a:	0a4b      	lsrs	r3, r1, #9
    460c:	0f51      	lsrs	r1, r2, #29
    460e:	430b      	orrs	r3, r1
    4610:	0d76      	lsrs	r6, r6, #21
    4612:	0d40      	lsrs	r0, r0, #21
    4614:	0019      	movs	r1, r3
    4616:	00d2      	lsls	r2, r2, #3
    4618:	45d8      	cmp	r8, fp
    461a:	d100      	bne.n	461e <__aeabi_dadd+0x3a>
    461c:	e0ae      	b.n	477c <__aeabi_dadd+0x198>
    461e:	1a35      	subs	r5, r6, r0
    4620:	2d00      	cmp	r5, #0
    4622:	dc00      	bgt.n	4626 <__aeabi_dadd+0x42>
    4624:	e0f6      	b.n	4814 <__aeabi_dadd+0x230>
    4626:	2800      	cmp	r0, #0
    4628:	d10f      	bne.n	464a <__aeabi_dadd+0x66>
    462a:	4313      	orrs	r3, r2
    462c:	d100      	bne.n	4630 <__aeabi_dadd+0x4c>
    462e:	e0db      	b.n	47e8 <__aeabi_dadd+0x204>
    4630:	1e6b      	subs	r3, r5, #1
    4632:	2b00      	cmp	r3, #0
    4634:	d000      	beq.n	4638 <__aeabi_dadd+0x54>
    4636:	e137      	b.n	48a8 <__aeabi_dadd+0x2c4>
    4638:	1aba      	subs	r2, r7, r2
    463a:	4297      	cmp	r7, r2
    463c:	41bf      	sbcs	r7, r7
    463e:	1a64      	subs	r4, r4, r1
    4640:	427f      	negs	r7, r7
    4642:	1be4      	subs	r4, r4, r7
    4644:	2601      	movs	r6, #1
    4646:	0017      	movs	r7, r2
    4648:	e024      	b.n	4694 <__aeabi_dadd+0xb0>
    464a:	4bc6      	ldr	r3, [pc, #792]	; (4964 <__aeabi_dadd+0x380>)
    464c:	429e      	cmp	r6, r3
    464e:	d04d      	beq.n	46ec <__aeabi_dadd+0x108>
    4650:	2380      	movs	r3, #128	; 0x80
    4652:	041b      	lsls	r3, r3, #16
    4654:	4319      	orrs	r1, r3
    4656:	2d38      	cmp	r5, #56	; 0x38
    4658:	dd00      	ble.n	465c <__aeabi_dadd+0x78>
    465a:	e107      	b.n	486c <__aeabi_dadd+0x288>
    465c:	2d1f      	cmp	r5, #31
    465e:	dd00      	ble.n	4662 <__aeabi_dadd+0x7e>
    4660:	e138      	b.n	48d4 <__aeabi_dadd+0x2f0>
    4662:	2020      	movs	r0, #32
    4664:	1b43      	subs	r3, r0, r5
    4666:	469a      	mov	sl, r3
    4668:	000b      	movs	r3, r1
    466a:	4650      	mov	r0, sl
    466c:	4083      	lsls	r3, r0
    466e:	4699      	mov	r9, r3
    4670:	0013      	movs	r3, r2
    4672:	4648      	mov	r0, r9
    4674:	40eb      	lsrs	r3, r5
    4676:	4318      	orrs	r0, r3
    4678:	0003      	movs	r3, r0
    467a:	4650      	mov	r0, sl
    467c:	4082      	lsls	r2, r0
    467e:	1e50      	subs	r0, r2, #1
    4680:	4182      	sbcs	r2, r0
    4682:	40e9      	lsrs	r1, r5
    4684:	431a      	orrs	r2, r3
    4686:	1aba      	subs	r2, r7, r2
    4688:	1a61      	subs	r1, r4, r1
    468a:	4297      	cmp	r7, r2
    468c:	41a4      	sbcs	r4, r4
    468e:	0017      	movs	r7, r2
    4690:	4264      	negs	r4, r4
    4692:	1b0c      	subs	r4, r1, r4
    4694:	0223      	lsls	r3, r4, #8
    4696:	d562      	bpl.n	475e <__aeabi_dadd+0x17a>
    4698:	0264      	lsls	r4, r4, #9
    469a:	0a65      	lsrs	r5, r4, #9
    469c:	2d00      	cmp	r5, #0
    469e:	d100      	bne.n	46a2 <__aeabi_dadd+0xbe>
    46a0:	e0df      	b.n	4862 <__aeabi_dadd+0x27e>
    46a2:	0028      	movs	r0, r5
    46a4:	f001 fd46 	bl	6134 <__clzsi2>
    46a8:	0003      	movs	r3, r0
    46aa:	3b08      	subs	r3, #8
    46ac:	2b1f      	cmp	r3, #31
    46ae:	dd00      	ble.n	46b2 <__aeabi_dadd+0xce>
    46b0:	e0d2      	b.n	4858 <__aeabi_dadd+0x274>
    46b2:	2220      	movs	r2, #32
    46b4:	003c      	movs	r4, r7
    46b6:	1ad2      	subs	r2, r2, r3
    46b8:	409d      	lsls	r5, r3
    46ba:	40d4      	lsrs	r4, r2
    46bc:	409f      	lsls	r7, r3
    46be:	4325      	orrs	r5, r4
    46c0:	429e      	cmp	r6, r3
    46c2:	dd00      	ble.n	46c6 <__aeabi_dadd+0xe2>
    46c4:	e0c4      	b.n	4850 <__aeabi_dadd+0x26c>
    46c6:	1b9e      	subs	r6, r3, r6
    46c8:	1c73      	adds	r3, r6, #1
    46ca:	2b1f      	cmp	r3, #31
    46cc:	dd00      	ble.n	46d0 <__aeabi_dadd+0xec>
    46ce:	e0f1      	b.n	48b4 <__aeabi_dadd+0x2d0>
    46d0:	2220      	movs	r2, #32
    46d2:	0038      	movs	r0, r7
    46d4:	0029      	movs	r1, r5
    46d6:	1ad2      	subs	r2, r2, r3
    46d8:	40d8      	lsrs	r0, r3
    46da:	4091      	lsls	r1, r2
    46dc:	4097      	lsls	r7, r2
    46de:	002c      	movs	r4, r5
    46e0:	4301      	orrs	r1, r0
    46e2:	1e78      	subs	r0, r7, #1
    46e4:	4187      	sbcs	r7, r0
    46e6:	40dc      	lsrs	r4, r3
    46e8:	2600      	movs	r6, #0
    46ea:	430f      	orrs	r7, r1
    46ec:	077b      	lsls	r3, r7, #29
    46ee:	d009      	beq.n	4704 <__aeabi_dadd+0x120>
    46f0:	230f      	movs	r3, #15
    46f2:	403b      	ands	r3, r7
    46f4:	2b04      	cmp	r3, #4
    46f6:	d005      	beq.n	4704 <__aeabi_dadd+0x120>
    46f8:	1d3b      	adds	r3, r7, #4
    46fa:	42bb      	cmp	r3, r7
    46fc:	41bf      	sbcs	r7, r7
    46fe:	427f      	negs	r7, r7
    4700:	19e4      	adds	r4, r4, r7
    4702:	001f      	movs	r7, r3
    4704:	0223      	lsls	r3, r4, #8
    4706:	d52c      	bpl.n	4762 <__aeabi_dadd+0x17e>
    4708:	4b96      	ldr	r3, [pc, #600]	; (4964 <__aeabi_dadd+0x380>)
    470a:	3601      	adds	r6, #1
    470c:	429e      	cmp	r6, r3
    470e:	d100      	bne.n	4712 <__aeabi_dadd+0x12e>
    4710:	e09a      	b.n	4848 <__aeabi_dadd+0x264>
    4712:	4645      	mov	r5, r8
    4714:	4b94      	ldr	r3, [pc, #592]	; (4968 <__aeabi_dadd+0x384>)
    4716:	08ff      	lsrs	r7, r7, #3
    4718:	401c      	ands	r4, r3
    471a:	0760      	lsls	r0, r4, #29
    471c:	0576      	lsls	r6, r6, #21
    471e:	0264      	lsls	r4, r4, #9
    4720:	4307      	orrs	r7, r0
    4722:	0b24      	lsrs	r4, r4, #12
    4724:	0d76      	lsrs	r6, r6, #21
    4726:	2100      	movs	r1, #0
    4728:	0324      	lsls	r4, r4, #12
    472a:	0b23      	lsrs	r3, r4, #12
    472c:	0d0c      	lsrs	r4, r1, #20
    472e:	4a8f      	ldr	r2, [pc, #572]	; (496c <__aeabi_dadd+0x388>)
    4730:	0524      	lsls	r4, r4, #20
    4732:	431c      	orrs	r4, r3
    4734:	4014      	ands	r4, r2
    4736:	0533      	lsls	r3, r6, #20
    4738:	4323      	orrs	r3, r4
    473a:	005b      	lsls	r3, r3, #1
    473c:	07ed      	lsls	r5, r5, #31
    473e:	085b      	lsrs	r3, r3, #1
    4740:	432b      	orrs	r3, r5
    4742:	0038      	movs	r0, r7
    4744:	0019      	movs	r1, r3
    4746:	bc3c      	pop	{r2, r3, r4, r5}
    4748:	4690      	mov	r8, r2
    474a:	4699      	mov	r9, r3
    474c:	46a2      	mov	sl, r4
    474e:	46ab      	mov	fp, r5
    4750:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4752:	4664      	mov	r4, ip
    4754:	4304      	orrs	r4, r0
    4756:	d100      	bne.n	475a <__aeabi_dadd+0x176>
    4758:	e211      	b.n	4b7e <__aeabi_dadd+0x59a>
    475a:	0004      	movs	r4, r0
    475c:	4667      	mov	r7, ip
    475e:	077b      	lsls	r3, r7, #29
    4760:	d1c6      	bne.n	46f0 <__aeabi_dadd+0x10c>
    4762:	4645      	mov	r5, r8
    4764:	0760      	lsls	r0, r4, #29
    4766:	08ff      	lsrs	r7, r7, #3
    4768:	4307      	orrs	r7, r0
    476a:	08e4      	lsrs	r4, r4, #3
    476c:	4b7d      	ldr	r3, [pc, #500]	; (4964 <__aeabi_dadd+0x380>)
    476e:	429e      	cmp	r6, r3
    4770:	d030      	beq.n	47d4 <__aeabi_dadd+0x1f0>
    4772:	0324      	lsls	r4, r4, #12
    4774:	0576      	lsls	r6, r6, #21
    4776:	0b24      	lsrs	r4, r4, #12
    4778:	0d76      	lsrs	r6, r6, #21
    477a:	e7d4      	b.n	4726 <__aeabi_dadd+0x142>
    477c:	1a33      	subs	r3, r6, r0
    477e:	469a      	mov	sl, r3
    4780:	2b00      	cmp	r3, #0
    4782:	dd78      	ble.n	4876 <__aeabi_dadd+0x292>
    4784:	2800      	cmp	r0, #0
    4786:	d031      	beq.n	47ec <__aeabi_dadd+0x208>
    4788:	4876      	ldr	r0, [pc, #472]	; (4964 <__aeabi_dadd+0x380>)
    478a:	4286      	cmp	r6, r0
    478c:	d0ae      	beq.n	46ec <__aeabi_dadd+0x108>
    478e:	2080      	movs	r0, #128	; 0x80
    4790:	0400      	lsls	r0, r0, #16
    4792:	4301      	orrs	r1, r0
    4794:	4653      	mov	r3, sl
    4796:	2b38      	cmp	r3, #56	; 0x38
    4798:	dc00      	bgt.n	479c <__aeabi_dadd+0x1b8>
    479a:	e0e9      	b.n	4970 <__aeabi_dadd+0x38c>
    479c:	430a      	orrs	r2, r1
    479e:	1e51      	subs	r1, r2, #1
    47a0:	418a      	sbcs	r2, r1
    47a2:	2100      	movs	r1, #0
    47a4:	19d2      	adds	r2, r2, r7
    47a6:	42ba      	cmp	r2, r7
    47a8:	41bf      	sbcs	r7, r7
    47aa:	1909      	adds	r1, r1, r4
    47ac:	427c      	negs	r4, r7
    47ae:	0017      	movs	r7, r2
    47b0:	190c      	adds	r4, r1, r4
    47b2:	0223      	lsls	r3, r4, #8
    47b4:	d5d3      	bpl.n	475e <__aeabi_dadd+0x17a>
    47b6:	4b6b      	ldr	r3, [pc, #428]	; (4964 <__aeabi_dadd+0x380>)
    47b8:	3601      	adds	r6, #1
    47ba:	429e      	cmp	r6, r3
    47bc:	d100      	bne.n	47c0 <__aeabi_dadd+0x1dc>
    47be:	e13a      	b.n	4a36 <__aeabi_dadd+0x452>
    47c0:	2001      	movs	r0, #1
    47c2:	4b69      	ldr	r3, [pc, #420]	; (4968 <__aeabi_dadd+0x384>)
    47c4:	401c      	ands	r4, r3
    47c6:	087b      	lsrs	r3, r7, #1
    47c8:	4007      	ands	r7, r0
    47ca:	431f      	orrs	r7, r3
    47cc:	07e0      	lsls	r0, r4, #31
    47ce:	4307      	orrs	r7, r0
    47d0:	0864      	lsrs	r4, r4, #1
    47d2:	e78b      	b.n	46ec <__aeabi_dadd+0x108>
    47d4:	0023      	movs	r3, r4
    47d6:	433b      	orrs	r3, r7
    47d8:	d100      	bne.n	47dc <__aeabi_dadd+0x1f8>
    47da:	e1cb      	b.n	4b74 <__aeabi_dadd+0x590>
    47dc:	2280      	movs	r2, #128	; 0x80
    47de:	0312      	lsls	r2, r2, #12
    47e0:	4314      	orrs	r4, r2
    47e2:	0324      	lsls	r4, r4, #12
    47e4:	0b24      	lsrs	r4, r4, #12
    47e6:	e79e      	b.n	4726 <__aeabi_dadd+0x142>
    47e8:	002e      	movs	r6, r5
    47ea:	e77f      	b.n	46ec <__aeabi_dadd+0x108>
    47ec:	0008      	movs	r0, r1
    47ee:	4310      	orrs	r0, r2
    47f0:	d100      	bne.n	47f4 <__aeabi_dadd+0x210>
    47f2:	e0b4      	b.n	495e <__aeabi_dadd+0x37a>
    47f4:	1e58      	subs	r0, r3, #1
    47f6:	2800      	cmp	r0, #0
    47f8:	d000      	beq.n	47fc <__aeabi_dadd+0x218>
    47fa:	e0de      	b.n	49ba <__aeabi_dadd+0x3d6>
    47fc:	18ba      	adds	r2, r7, r2
    47fe:	42ba      	cmp	r2, r7
    4800:	419b      	sbcs	r3, r3
    4802:	1864      	adds	r4, r4, r1
    4804:	425b      	negs	r3, r3
    4806:	18e4      	adds	r4, r4, r3
    4808:	0017      	movs	r7, r2
    480a:	2601      	movs	r6, #1
    480c:	0223      	lsls	r3, r4, #8
    480e:	d5a6      	bpl.n	475e <__aeabi_dadd+0x17a>
    4810:	2602      	movs	r6, #2
    4812:	e7d5      	b.n	47c0 <__aeabi_dadd+0x1dc>
    4814:	2d00      	cmp	r5, #0
    4816:	d16e      	bne.n	48f6 <__aeabi_dadd+0x312>
    4818:	1c70      	adds	r0, r6, #1
    481a:	0540      	lsls	r0, r0, #21
    481c:	0d40      	lsrs	r0, r0, #21
    481e:	2801      	cmp	r0, #1
    4820:	dc00      	bgt.n	4824 <__aeabi_dadd+0x240>
    4822:	e0f9      	b.n	4a18 <__aeabi_dadd+0x434>
    4824:	1ab8      	subs	r0, r7, r2
    4826:	4684      	mov	ip, r0
    4828:	4287      	cmp	r7, r0
    482a:	4180      	sbcs	r0, r0
    482c:	1ae5      	subs	r5, r4, r3
    482e:	4240      	negs	r0, r0
    4830:	1a2d      	subs	r5, r5, r0
    4832:	0228      	lsls	r0, r5, #8
    4834:	d400      	bmi.n	4838 <__aeabi_dadd+0x254>
    4836:	e089      	b.n	494c <__aeabi_dadd+0x368>
    4838:	1bd7      	subs	r7, r2, r7
    483a:	42ba      	cmp	r2, r7
    483c:	4192      	sbcs	r2, r2
    483e:	1b1c      	subs	r4, r3, r4
    4840:	4252      	negs	r2, r2
    4842:	1aa5      	subs	r5, r4, r2
    4844:	46d8      	mov	r8, fp
    4846:	e729      	b.n	469c <__aeabi_dadd+0xb8>
    4848:	4645      	mov	r5, r8
    484a:	2400      	movs	r4, #0
    484c:	2700      	movs	r7, #0
    484e:	e76a      	b.n	4726 <__aeabi_dadd+0x142>
    4850:	4c45      	ldr	r4, [pc, #276]	; (4968 <__aeabi_dadd+0x384>)
    4852:	1af6      	subs	r6, r6, r3
    4854:	402c      	ands	r4, r5
    4856:	e749      	b.n	46ec <__aeabi_dadd+0x108>
    4858:	003d      	movs	r5, r7
    485a:	3828      	subs	r0, #40	; 0x28
    485c:	4085      	lsls	r5, r0
    485e:	2700      	movs	r7, #0
    4860:	e72e      	b.n	46c0 <__aeabi_dadd+0xdc>
    4862:	0038      	movs	r0, r7
    4864:	f001 fc66 	bl	6134 <__clzsi2>
    4868:	3020      	adds	r0, #32
    486a:	e71d      	b.n	46a8 <__aeabi_dadd+0xc4>
    486c:	430a      	orrs	r2, r1
    486e:	1e51      	subs	r1, r2, #1
    4870:	418a      	sbcs	r2, r1
    4872:	2100      	movs	r1, #0
    4874:	e707      	b.n	4686 <__aeabi_dadd+0xa2>
    4876:	2b00      	cmp	r3, #0
    4878:	d000      	beq.n	487c <__aeabi_dadd+0x298>
    487a:	e0f3      	b.n	4a64 <__aeabi_dadd+0x480>
    487c:	1c70      	adds	r0, r6, #1
    487e:	0543      	lsls	r3, r0, #21
    4880:	0d5b      	lsrs	r3, r3, #21
    4882:	2b01      	cmp	r3, #1
    4884:	dc00      	bgt.n	4888 <__aeabi_dadd+0x2a4>
    4886:	e0ad      	b.n	49e4 <__aeabi_dadd+0x400>
    4888:	4b36      	ldr	r3, [pc, #216]	; (4964 <__aeabi_dadd+0x380>)
    488a:	4298      	cmp	r0, r3
    488c:	d100      	bne.n	4890 <__aeabi_dadd+0x2ac>
    488e:	e0d1      	b.n	4a34 <__aeabi_dadd+0x450>
    4890:	18ba      	adds	r2, r7, r2
    4892:	42ba      	cmp	r2, r7
    4894:	41bf      	sbcs	r7, r7
    4896:	1864      	adds	r4, r4, r1
    4898:	427f      	negs	r7, r7
    489a:	19e4      	adds	r4, r4, r7
    489c:	07e7      	lsls	r7, r4, #31
    489e:	0852      	lsrs	r2, r2, #1
    48a0:	4317      	orrs	r7, r2
    48a2:	0864      	lsrs	r4, r4, #1
    48a4:	0006      	movs	r6, r0
    48a6:	e721      	b.n	46ec <__aeabi_dadd+0x108>
    48a8:	482e      	ldr	r0, [pc, #184]	; (4964 <__aeabi_dadd+0x380>)
    48aa:	4285      	cmp	r5, r0
    48ac:	d100      	bne.n	48b0 <__aeabi_dadd+0x2cc>
    48ae:	e093      	b.n	49d8 <__aeabi_dadd+0x3f4>
    48b0:	001d      	movs	r5, r3
    48b2:	e6d0      	b.n	4656 <__aeabi_dadd+0x72>
    48b4:	0029      	movs	r1, r5
    48b6:	3e1f      	subs	r6, #31
    48b8:	40f1      	lsrs	r1, r6
    48ba:	2b20      	cmp	r3, #32
    48bc:	d100      	bne.n	48c0 <__aeabi_dadd+0x2dc>
    48be:	e08d      	b.n	49dc <__aeabi_dadd+0x3f8>
    48c0:	2240      	movs	r2, #64	; 0x40
    48c2:	1ad3      	subs	r3, r2, r3
    48c4:	409d      	lsls	r5, r3
    48c6:	432f      	orrs	r7, r5
    48c8:	1e7d      	subs	r5, r7, #1
    48ca:	41af      	sbcs	r7, r5
    48cc:	2400      	movs	r4, #0
    48ce:	430f      	orrs	r7, r1
    48d0:	2600      	movs	r6, #0
    48d2:	e744      	b.n	475e <__aeabi_dadd+0x17a>
    48d4:	002b      	movs	r3, r5
    48d6:	0008      	movs	r0, r1
    48d8:	3b20      	subs	r3, #32
    48da:	40d8      	lsrs	r0, r3
    48dc:	0003      	movs	r3, r0
    48de:	2d20      	cmp	r5, #32
    48e0:	d100      	bne.n	48e4 <__aeabi_dadd+0x300>
    48e2:	e07d      	b.n	49e0 <__aeabi_dadd+0x3fc>
    48e4:	2040      	movs	r0, #64	; 0x40
    48e6:	1b45      	subs	r5, r0, r5
    48e8:	40a9      	lsls	r1, r5
    48ea:	430a      	orrs	r2, r1
    48ec:	1e51      	subs	r1, r2, #1
    48ee:	418a      	sbcs	r2, r1
    48f0:	2100      	movs	r1, #0
    48f2:	431a      	orrs	r2, r3
    48f4:	e6c7      	b.n	4686 <__aeabi_dadd+0xa2>
    48f6:	2e00      	cmp	r6, #0
    48f8:	d050      	beq.n	499c <__aeabi_dadd+0x3b8>
    48fa:	4e1a      	ldr	r6, [pc, #104]	; (4964 <__aeabi_dadd+0x380>)
    48fc:	42b0      	cmp	r0, r6
    48fe:	d057      	beq.n	49b0 <__aeabi_dadd+0x3cc>
    4900:	2680      	movs	r6, #128	; 0x80
    4902:	426b      	negs	r3, r5
    4904:	4699      	mov	r9, r3
    4906:	0436      	lsls	r6, r6, #16
    4908:	4334      	orrs	r4, r6
    490a:	464b      	mov	r3, r9
    490c:	2b38      	cmp	r3, #56	; 0x38
    490e:	dd00      	ble.n	4912 <__aeabi_dadd+0x32e>
    4910:	e0d6      	b.n	4ac0 <__aeabi_dadd+0x4dc>
    4912:	2b1f      	cmp	r3, #31
    4914:	dd00      	ble.n	4918 <__aeabi_dadd+0x334>
    4916:	e135      	b.n	4b84 <__aeabi_dadd+0x5a0>
    4918:	2620      	movs	r6, #32
    491a:	1af5      	subs	r5, r6, r3
    491c:	0026      	movs	r6, r4
    491e:	40ae      	lsls	r6, r5
    4920:	46b2      	mov	sl, r6
    4922:	003e      	movs	r6, r7
    4924:	40de      	lsrs	r6, r3
    4926:	46ac      	mov	ip, r5
    4928:	0035      	movs	r5, r6
    492a:	4656      	mov	r6, sl
    492c:	432e      	orrs	r6, r5
    492e:	4665      	mov	r5, ip
    4930:	40af      	lsls	r7, r5
    4932:	1e7d      	subs	r5, r7, #1
    4934:	41af      	sbcs	r7, r5
    4936:	40dc      	lsrs	r4, r3
    4938:	4337      	orrs	r7, r6
    493a:	1bd7      	subs	r7, r2, r7
    493c:	42ba      	cmp	r2, r7
    493e:	4192      	sbcs	r2, r2
    4940:	1b0c      	subs	r4, r1, r4
    4942:	4252      	negs	r2, r2
    4944:	1aa4      	subs	r4, r4, r2
    4946:	0006      	movs	r6, r0
    4948:	46d8      	mov	r8, fp
    494a:	e6a3      	b.n	4694 <__aeabi_dadd+0xb0>
    494c:	4664      	mov	r4, ip
    494e:	4667      	mov	r7, ip
    4950:	432c      	orrs	r4, r5
    4952:	d000      	beq.n	4956 <__aeabi_dadd+0x372>
    4954:	e6a2      	b.n	469c <__aeabi_dadd+0xb8>
    4956:	2500      	movs	r5, #0
    4958:	2600      	movs	r6, #0
    495a:	2700      	movs	r7, #0
    495c:	e706      	b.n	476c <__aeabi_dadd+0x188>
    495e:	001e      	movs	r6, r3
    4960:	e6c4      	b.n	46ec <__aeabi_dadd+0x108>
    4962:	46c0      	nop			; (mov r8, r8)
    4964:	000007ff 	.word	0x000007ff
    4968:	ff7fffff 	.word	0xff7fffff
    496c:	800fffff 	.word	0x800fffff
    4970:	2b1f      	cmp	r3, #31
    4972:	dc63      	bgt.n	4a3c <__aeabi_dadd+0x458>
    4974:	2020      	movs	r0, #32
    4976:	1ac3      	subs	r3, r0, r3
    4978:	0008      	movs	r0, r1
    497a:	4098      	lsls	r0, r3
    497c:	469c      	mov	ip, r3
    497e:	4683      	mov	fp, r0
    4980:	4653      	mov	r3, sl
    4982:	0010      	movs	r0, r2
    4984:	40d8      	lsrs	r0, r3
    4986:	0003      	movs	r3, r0
    4988:	4658      	mov	r0, fp
    498a:	4318      	orrs	r0, r3
    498c:	4663      	mov	r3, ip
    498e:	409a      	lsls	r2, r3
    4990:	1e53      	subs	r3, r2, #1
    4992:	419a      	sbcs	r2, r3
    4994:	4653      	mov	r3, sl
    4996:	4302      	orrs	r2, r0
    4998:	40d9      	lsrs	r1, r3
    499a:	e703      	b.n	47a4 <__aeabi_dadd+0x1c0>
    499c:	0026      	movs	r6, r4
    499e:	433e      	orrs	r6, r7
    49a0:	d006      	beq.n	49b0 <__aeabi_dadd+0x3cc>
    49a2:	43eb      	mvns	r3, r5
    49a4:	4699      	mov	r9, r3
    49a6:	2b00      	cmp	r3, #0
    49a8:	d0c7      	beq.n	493a <__aeabi_dadd+0x356>
    49aa:	4e94      	ldr	r6, [pc, #592]	; (4bfc <__aeabi_dadd+0x618>)
    49ac:	42b0      	cmp	r0, r6
    49ae:	d1ac      	bne.n	490a <__aeabi_dadd+0x326>
    49b0:	000c      	movs	r4, r1
    49b2:	0017      	movs	r7, r2
    49b4:	0006      	movs	r6, r0
    49b6:	46d8      	mov	r8, fp
    49b8:	e698      	b.n	46ec <__aeabi_dadd+0x108>
    49ba:	4b90      	ldr	r3, [pc, #576]	; (4bfc <__aeabi_dadd+0x618>)
    49bc:	459a      	cmp	sl, r3
    49be:	d00b      	beq.n	49d8 <__aeabi_dadd+0x3f4>
    49c0:	4682      	mov	sl, r0
    49c2:	e6e7      	b.n	4794 <__aeabi_dadd+0x1b0>
    49c4:	2800      	cmp	r0, #0
    49c6:	d000      	beq.n	49ca <__aeabi_dadd+0x3e6>
    49c8:	e09e      	b.n	4b08 <__aeabi_dadd+0x524>
    49ca:	0018      	movs	r0, r3
    49cc:	4310      	orrs	r0, r2
    49ce:	d100      	bne.n	49d2 <__aeabi_dadd+0x3ee>
    49d0:	e0e9      	b.n	4ba6 <__aeabi_dadd+0x5c2>
    49d2:	001c      	movs	r4, r3
    49d4:	0017      	movs	r7, r2
    49d6:	46d8      	mov	r8, fp
    49d8:	4e88      	ldr	r6, [pc, #544]	; (4bfc <__aeabi_dadd+0x618>)
    49da:	e687      	b.n	46ec <__aeabi_dadd+0x108>
    49dc:	2500      	movs	r5, #0
    49de:	e772      	b.n	48c6 <__aeabi_dadd+0x2e2>
    49e0:	2100      	movs	r1, #0
    49e2:	e782      	b.n	48ea <__aeabi_dadd+0x306>
    49e4:	0023      	movs	r3, r4
    49e6:	433b      	orrs	r3, r7
    49e8:	2e00      	cmp	r6, #0
    49ea:	d000      	beq.n	49ee <__aeabi_dadd+0x40a>
    49ec:	e0ab      	b.n	4b46 <__aeabi_dadd+0x562>
    49ee:	2b00      	cmp	r3, #0
    49f0:	d100      	bne.n	49f4 <__aeabi_dadd+0x410>
    49f2:	e0e7      	b.n	4bc4 <__aeabi_dadd+0x5e0>
    49f4:	000b      	movs	r3, r1
    49f6:	4313      	orrs	r3, r2
    49f8:	d100      	bne.n	49fc <__aeabi_dadd+0x418>
    49fa:	e677      	b.n	46ec <__aeabi_dadd+0x108>
    49fc:	18ba      	adds	r2, r7, r2
    49fe:	42ba      	cmp	r2, r7
    4a00:	41bf      	sbcs	r7, r7
    4a02:	1864      	adds	r4, r4, r1
    4a04:	427f      	negs	r7, r7
    4a06:	19e4      	adds	r4, r4, r7
    4a08:	0223      	lsls	r3, r4, #8
    4a0a:	d400      	bmi.n	4a0e <__aeabi_dadd+0x42a>
    4a0c:	e0f2      	b.n	4bf4 <__aeabi_dadd+0x610>
    4a0e:	4b7c      	ldr	r3, [pc, #496]	; (4c00 <__aeabi_dadd+0x61c>)
    4a10:	0017      	movs	r7, r2
    4a12:	401c      	ands	r4, r3
    4a14:	0006      	movs	r6, r0
    4a16:	e669      	b.n	46ec <__aeabi_dadd+0x108>
    4a18:	0020      	movs	r0, r4
    4a1a:	4338      	orrs	r0, r7
    4a1c:	2e00      	cmp	r6, #0
    4a1e:	d1d1      	bne.n	49c4 <__aeabi_dadd+0x3e0>
    4a20:	2800      	cmp	r0, #0
    4a22:	d15b      	bne.n	4adc <__aeabi_dadd+0x4f8>
    4a24:	001c      	movs	r4, r3
    4a26:	4314      	orrs	r4, r2
    4a28:	d100      	bne.n	4a2c <__aeabi_dadd+0x448>
    4a2a:	e0a8      	b.n	4b7e <__aeabi_dadd+0x59a>
    4a2c:	001c      	movs	r4, r3
    4a2e:	0017      	movs	r7, r2
    4a30:	46d8      	mov	r8, fp
    4a32:	e65b      	b.n	46ec <__aeabi_dadd+0x108>
    4a34:	0006      	movs	r6, r0
    4a36:	2400      	movs	r4, #0
    4a38:	2700      	movs	r7, #0
    4a3a:	e697      	b.n	476c <__aeabi_dadd+0x188>
    4a3c:	4650      	mov	r0, sl
    4a3e:	000b      	movs	r3, r1
    4a40:	3820      	subs	r0, #32
    4a42:	40c3      	lsrs	r3, r0
    4a44:	4699      	mov	r9, r3
    4a46:	4653      	mov	r3, sl
    4a48:	2b20      	cmp	r3, #32
    4a4a:	d100      	bne.n	4a4e <__aeabi_dadd+0x46a>
    4a4c:	e095      	b.n	4b7a <__aeabi_dadd+0x596>
    4a4e:	2340      	movs	r3, #64	; 0x40
    4a50:	4650      	mov	r0, sl
    4a52:	1a1b      	subs	r3, r3, r0
    4a54:	4099      	lsls	r1, r3
    4a56:	430a      	orrs	r2, r1
    4a58:	1e51      	subs	r1, r2, #1
    4a5a:	418a      	sbcs	r2, r1
    4a5c:	464b      	mov	r3, r9
    4a5e:	2100      	movs	r1, #0
    4a60:	431a      	orrs	r2, r3
    4a62:	e69f      	b.n	47a4 <__aeabi_dadd+0x1c0>
    4a64:	2e00      	cmp	r6, #0
    4a66:	d130      	bne.n	4aca <__aeabi_dadd+0x4e6>
    4a68:	0026      	movs	r6, r4
    4a6a:	433e      	orrs	r6, r7
    4a6c:	d067      	beq.n	4b3e <__aeabi_dadd+0x55a>
    4a6e:	43db      	mvns	r3, r3
    4a70:	469a      	mov	sl, r3
    4a72:	2b00      	cmp	r3, #0
    4a74:	d01c      	beq.n	4ab0 <__aeabi_dadd+0x4cc>
    4a76:	4e61      	ldr	r6, [pc, #388]	; (4bfc <__aeabi_dadd+0x618>)
    4a78:	42b0      	cmp	r0, r6
    4a7a:	d060      	beq.n	4b3e <__aeabi_dadd+0x55a>
    4a7c:	4653      	mov	r3, sl
    4a7e:	2b38      	cmp	r3, #56	; 0x38
    4a80:	dd00      	ble.n	4a84 <__aeabi_dadd+0x4a0>
    4a82:	e096      	b.n	4bb2 <__aeabi_dadd+0x5ce>
    4a84:	2b1f      	cmp	r3, #31
    4a86:	dd00      	ble.n	4a8a <__aeabi_dadd+0x4a6>
    4a88:	e09f      	b.n	4bca <__aeabi_dadd+0x5e6>
    4a8a:	2620      	movs	r6, #32
    4a8c:	1af3      	subs	r3, r6, r3
    4a8e:	0026      	movs	r6, r4
    4a90:	409e      	lsls	r6, r3
    4a92:	469c      	mov	ip, r3
    4a94:	46b3      	mov	fp, r6
    4a96:	4653      	mov	r3, sl
    4a98:	003e      	movs	r6, r7
    4a9a:	40de      	lsrs	r6, r3
    4a9c:	0033      	movs	r3, r6
    4a9e:	465e      	mov	r6, fp
    4aa0:	431e      	orrs	r6, r3
    4aa2:	4663      	mov	r3, ip
    4aa4:	409f      	lsls	r7, r3
    4aa6:	1e7b      	subs	r3, r7, #1
    4aa8:	419f      	sbcs	r7, r3
    4aaa:	4653      	mov	r3, sl
    4aac:	40dc      	lsrs	r4, r3
    4aae:	4337      	orrs	r7, r6
    4ab0:	18bf      	adds	r7, r7, r2
    4ab2:	4297      	cmp	r7, r2
    4ab4:	4192      	sbcs	r2, r2
    4ab6:	1864      	adds	r4, r4, r1
    4ab8:	4252      	negs	r2, r2
    4aba:	18a4      	adds	r4, r4, r2
    4abc:	0006      	movs	r6, r0
    4abe:	e678      	b.n	47b2 <__aeabi_dadd+0x1ce>
    4ac0:	4327      	orrs	r7, r4
    4ac2:	1e7c      	subs	r4, r7, #1
    4ac4:	41a7      	sbcs	r7, r4
    4ac6:	2400      	movs	r4, #0
    4ac8:	e737      	b.n	493a <__aeabi_dadd+0x356>
    4aca:	4e4c      	ldr	r6, [pc, #304]	; (4bfc <__aeabi_dadd+0x618>)
    4acc:	42b0      	cmp	r0, r6
    4ace:	d036      	beq.n	4b3e <__aeabi_dadd+0x55a>
    4ad0:	2680      	movs	r6, #128	; 0x80
    4ad2:	425b      	negs	r3, r3
    4ad4:	0436      	lsls	r6, r6, #16
    4ad6:	469a      	mov	sl, r3
    4ad8:	4334      	orrs	r4, r6
    4ada:	e7cf      	b.n	4a7c <__aeabi_dadd+0x498>
    4adc:	0018      	movs	r0, r3
    4ade:	4310      	orrs	r0, r2
    4ae0:	d100      	bne.n	4ae4 <__aeabi_dadd+0x500>
    4ae2:	e603      	b.n	46ec <__aeabi_dadd+0x108>
    4ae4:	1ab8      	subs	r0, r7, r2
    4ae6:	4684      	mov	ip, r0
    4ae8:	4567      	cmp	r7, ip
    4aea:	41ad      	sbcs	r5, r5
    4aec:	1ae0      	subs	r0, r4, r3
    4aee:	426d      	negs	r5, r5
    4af0:	1b40      	subs	r0, r0, r5
    4af2:	0205      	lsls	r5, r0, #8
    4af4:	d400      	bmi.n	4af8 <__aeabi_dadd+0x514>
    4af6:	e62c      	b.n	4752 <__aeabi_dadd+0x16e>
    4af8:	1bd7      	subs	r7, r2, r7
    4afa:	42ba      	cmp	r2, r7
    4afc:	4192      	sbcs	r2, r2
    4afe:	1b1c      	subs	r4, r3, r4
    4b00:	4252      	negs	r2, r2
    4b02:	1aa4      	subs	r4, r4, r2
    4b04:	46d8      	mov	r8, fp
    4b06:	e5f1      	b.n	46ec <__aeabi_dadd+0x108>
    4b08:	0018      	movs	r0, r3
    4b0a:	4310      	orrs	r0, r2
    4b0c:	d100      	bne.n	4b10 <__aeabi_dadd+0x52c>
    4b0e:	e763      	b.n	49d8 <__aeabi_dadd+0x3f4>
    4b10:	08f8      	lsrs	r0, r7, #3
    4b12:	0767      	lsls	r7, r4, #29
    4b14:	4307      	orrs	r7, r0
    4b16:	2080      	movs	r0, #128	; 0x80
    4b18:	08e4      	lsrs	r4, r4, #3
    4b1a:	0300      	lsls	r0, r0, #12
    4b1c:	4204      	tst	r4, r0
    4b1e:	d008      	beq.n	4b32 <__aeabi_dadd+0x54e>
    4b20:	08dd      	lsrs	r5, r3, #3
    4b22:	4205      	tst	r5, r0
    4b24:	d105      	bne.n	4b32 <__aeabi_dadd+0x54e>
    4b26:	08d2      	lsrs	r2, r2, #3
    4b28:	0759      	lsls	r1, r3, #29
    4b2a:	4311      	orrs	r1, r2
    4b2c:	000f      	movs	r7, r1
    4b2e:	002c      	movs	r4, r5
    4b30:	46d8      	mov	r8, fp
    4b32:	0f7b      	lsrs	r3, r7, #29
    4b34:	00e4      	lsls	r4, r4, #3
    4b36:	431c      	orrs	r4, r3
    4b38:	00ff      	lsls	r7, r7, #3
    4b3a:	4e30      	ldr	r6, [pc, #192]	; (4bfc <__aeabi_dadd+0x618>)
    4b3c:	e5d6      	b.n	46ec <__aeabi_dadd+0x108>
    4b3e:	000c      	movs	r4, r1
    4b40:	0017      	movs	r7, r2
    4b42:	0006      	movs	r6, r0
    4b44:	e5d2      	b.n	46ec <__aeabi_dadd+0x108>
    4b46:	2b00      	cmp	r3, #0
    4b48:	d038      	beq.n	4bbc <__aeabi_dadd+0x5d8>
    4b4a:	000b      	movs	r3, r1
    4b4c:	4313      	orrs	r3, r2
    4b4e:	d100      	bne.n	4b52 <__aeabi_dadd+0x56e>
    4b50:	e742      	b.n	49d8 <__aeabi_dadd+0x3f4>
    4b52:	08f8      	lsrs	r0, r7, #3
    4b54:	0767      	lsls	r7, r4, #29
    4b56:	4307      	orrs	r7, r0
    4b58:	2080      	movs	r0, #128	; 0x80
    4b5a:	08e4      	lsrs	r4, r4, #3
    4b5c:	0300      	lsls	r0, r0, #12
    4b5e:	4204      	tst	r4, r0
    4b60:	d0e7      	beq.n	4b32 <__aeabi_dadd+0x54e>
    4b62:	08cb      	lsrs	r3, r1, #3
    4b64:	4203      	tst	r3, r0
    4b66:	d1e4      	bne.n	4b32 <__aeabi_dadd+0x54e>
    4b68:	08d2      	lsrs	r2, r2, #3
    4b6a:	0749      	lsls	r1, r1, #29
    4b6c:	4311      	orrs	r1, r2
    4b6e:	000f      	movs	r7, r1
    4b70:	001c      	movs	r4, r3
    4b72:	e7de      	b.n	4b32 <__aeabi_dadd+0x54e>
    4b74:	2700      	movs	r7, #0
    4b76:	2400      	movs	r4, #0
    4b78:	e5d5      	b.n	4726 <__aeabi_dadd+0x142>
    4b7a:	2100      	movs	r1, #0
    4b7c:	e76b      	b.n	4a56 <__aeabi_dadd+0x472>
    4b7e:	2500      	movs	r5, #0
    4b80:	2700      	movs	r7, #0
    4b82:	e5f3      	b.n	476c <__aeabi_dadd+0x188>
    4b84:	464e      	mov	r6, r9
    4b86:	0025      	movs	r5, r4
    4b88:	3e20      	subs	r6, #32
    4b8a:	40f5      	lsrs	r5, r6
    4b8c:	464b      	mov	r3, r9
    4b8e:	002e      	movs	r6, r5
    4b90:	2b20      	cmp	r3, #32
    4b92:	d02d      	beq.n	4bf0 <__aeabi_dadd+0x60c>
    4b94:	2540      	movs	r5, #64	; 0x40
    4b96:	1aed      	subs	r5, r5, r3
    4b98:	40ac      	lsls	r4, r5
    4b9a:	4327      	orrs	r7, r4
    4b9c:	1e7c      	subs	r4, r7, #1
    4b9e:	41a7      	sbcs	r7, r4
    4ba0:	2400      	movs	r4, #0
    4ba2:	4337      	orrs	r7, r6
    4ba4:	e6c9      	b.n	493a <__aeabi_dadd+0x356>
    4ba6:	2480      	movs	r4, #128	; 0x80
    4ba8:	2500      	movs	r5, #0
    4baa:	0324      	lsls	r4, r4, #12
    4bac:	4e13      	ldr	r6, [pc, #76]	; (4bfc <__aeabi_dadd+0x618>)
    4bae:	2700      	movs	r7, #0
    4bb0:	e5dc      	b.n	476c <__aeabi_dadd+0x188>
    4bb2:	4327      	orrs	r7, r4
    4bb4:	1e7c      	subs	r4, r7, #1
    4bb6:	41a7      	sbcs	r7, r4
    4bb8:	2400      	movs	r4, #0
    4bba:	e779      	b.n	4ab0 <__aeabi_dadd+0x4cc>
    4bbc:	000c      	movs	r4, r1
    4bbe:	0017      	movs	r7, r2
    4bc0:	4e0e      	ldr	r6, [pc, #56]	; (4bfc <__aeabi_dadd+0x618>)
    4bc2:	e593      	b.n	46ec <__aeabi_dadd+0x108>
    4bc4:	000c      	movs	r4, r1
    4bc6:	0017      	movs	r7, r2
    4bc8:	e590      	b.n	46ec <__aeabi_dadd+0x108>
    4bca:	4656      	mov	r6, sl
    4bcc:	0023      	movs	r3, r4
    4bce:	3e20      	subs	r6, #32
    4bd0:	40f3      	lsrs	r3, r6
    4bd2:	4699      	mov	r9, r3
    4bd4:	4653      	mov	r3, sl
    4bd6:	2b20      	cmp	r3, #32
    4bd8:	d00e      	beq.n	4bf8 <__aeabi_dadd+0x614>
    4bda:	2340      	movs	r3, #64	; 0x40
    4bdc:	4656      	mov	r6, sl
    4bde:	1b9b      	subs	r3, r3, r6
    4be0:	409c      	lsls	r4, r3
    4be2:	4327      	orrs	r7, r4
    4be4:	1e7c      	subs	r4, r7, #1
    4be6:	41a7      	sbcs	r7, r4
    4be8:	464b      	mov	r3, r9
    4bea:	2400      	movs	r4, #0
    4bec:	431f      	orrs	r7, r3
    4bee:	e75f      	b.n	4ab0 <__aeabi_dadd+0x4cc>
    4bf0:	2400      	movs	r4, #0
    4bf2:	e7d2      	b.n	4b9a <__aeabi_dadd+0x5b6>
    4bf4:	0017      	movs	r7, r2
    4bf6:	e5b2      	b.n	475e <__aeabi_dadd+0x17a>
    4bf8:	2400      	movs	r4, #0
    4bfa:	e7f2      	b.n	4be2 <__aeabi_dadd+0x5fe>
    4bfc:	000007ff 	.word	0x000007ff
    4c00:	ff7fffff 	.word	0xff7fffff

00004c04 <__aeabi_ddiv>:
    4c04:	b5f0      	push	{r4, r5, r6, r7, lr}
    4c06:	4657      	mov	r7, sl
    4c08:	4645      	mov	r5, r8
    4c0a:	46de      	mov	lr, fp
    4c0c:	464e      	mov	r6, r9
    4c0e:	b5e0      	push	{r5, r6, r7, lr}
    4c10:	004c      	lsls	r4, r1, #1
    4c12:	030e      	lsls	r6, r1, #12
    4c14:	b087      	sub	sp, #28
    4c16:	4683      	mov	fp, r0
    4c18:	4692      	mov	sl, r2
    4c1a:	001d      	movs	r5, r3
    4c1c:	4680      	mov	r8, r0
    4c1e:	0b36      	lsrs	r6, r6, #12
    4c20:	0d64      	lsrs	r4, r4, #21
    4c22:	0fcf      	lsrs	r7, r1, #31
    4c24:	2c00      	cmp	r4, #0
    4c26:	d04f      	beq.n	4cc8 <__aeabi_ddiv+0xc4>
    4c28:	4b6f      	ldr	r3, [pc, #444]	; (4de8 <__aeabi_ddiv+0x1e4>)
    4c2a:	429c      	cmp	r4, r3
    4c2c:	d035      	beq.n	4c9a <__aeabi_ddiv+0x96>
    4c2e:	2380      	movs	r3, #128	; 0x80
    4c30:	0f42      	lsrs	r2, r0, #29
    4c32:	041b      	lsls	r3, r3, #16
    4c34:	00f6      	lsls	r6, r6, #3
    4c36:	4313      	orrs	r3, r2
    4c38:	4333      	orrs	r3, r6
    4c3a:	4699      	mov	r9, r3
    4c3c:	00c3      	lsls	r3, r0, #3
    4c3e:	4698      	mov	r8, r3
    4c40:	4b6a      	ldr	r3, [pc, #424]	; (4dec <__aeabi_ddiv+0x1e8>)
    4c42:	2600      	movs	r6, #0
    4c44:	469c      	mov	ip, r3
    4c46:	2300      	movs	r3, #0
    4c48:	4464      	add	r4, ip
    4c4a:	9303      	str	r3, [sp, #12]
    4c4c:	032b      	lsls	r3, r5, #12
    4c4e:	0b1b      	lsrs	r3, r3, #12
    4c50:	469b      	mov	fp, r3
    4c52:	006b      	lsls	r3, r5, #1
    4c54:	0fed      	lsrs	r5, r5, #31
    4c56:	4650      	mov	r0, sl
    4c58:	0d5b      	lsrs	r3, r3, #21
    4c5a:	9501      	str	r5, [sp, #4]
    4c5c:	d05e      	beq.n	4d1c <__aeabi_ddiv+0x118>
    4c5e:	4a62      	ldr	r2, [pc, #392]	; (4de8 <__aeabi_ddiv+0x1e4>)
    4c60:	4293      	cmp	r3, r2
    4c62:	d053      	beq.n	4d0c <__aeabi_ddiv+0x108>
    4c64:	465a      	mov	r2, fp
    4c66:	00d1      	lsls	r1, r2, #3
    4c68:	2280      	movs	r2, #128	; 0x80
    4c6a:	0f40      	lsrs	r0, r0, #29
    4c6c:	0412      	lsls	r2, r2, #16
    4c6e:	4302      	orrs	r2, r0
    4c70:	430a      	orrs	r2, r1
    4c72:	4693      	mov	fp, r2
    4c74:	4652      	mov	r2, sl
    4c76:	00d1      	lsls	r1, r2, #3
    4c78:	4a5c      	ldr	r2, [pc, #368]	; (4dec <__aeabi_ddiv+0x1e8>)
    4c7a:	4694      	mov	ip, r2
    4c7c:	2200      	movs	r2, #0
    4c7e:	4463      	add	r3, ip
    4c80:	0038      	movs	r0, r7
    4c82:	4068      	eors	r0, r5
    4c84:	4684      	mov	ip, r0
    4c86:	9002      	str	r0, [sp, #8]
    4c88:	1ae4      	subs	r4, r4, r3
    4c8a:	4316      	orrs	r6, r2
    4c8c:	2e0f      	cmp	r6, #15
    4c8e:	d900      	bls.n	4c92 <__aeabi_ddiv+0x8e>
    4c90:	e0b4      	b.n	4dfc <__aeabi_ddiv+0x1f8>
    4c92:	4b57      	ldr	r3, [pc, #348]	; (4df0 <__aeabi_ddiv+0x1ec>)
    4c94:	00b6      	lsls	r6, r6, #2
    4c96:	599b      	ldr	r3, [r3, r6]
    4c98:	469f      	mov	pc, r3
    4c9a:	0003      	movs	r3, r0
    4c9c:	4333      	orrs	r3, r6
    4c9e:	4699      	mov	r9, r3
    4ca0:	d16c      	bne.n	4d7c <__aeabi_ddiv+0x178>
    4ca2:	2300      	movs	r3, #0
    4ca4:	4698      	mov	r8, r3
    4ca6:	3302      	adds	r3, #2
    4ca8:	2608      	movs	r6, #8
    4caa:	9303      	str	r3, [sp, #12]
    4cac:	e7ce      	b.n	4c4c <__aeabi_ddiv+0x48>
    4cae:	46cb      	mov	fp, r9
    4cb0:	4641      	mov	r1, r8
    4cb2:	9a03      	ldr	r2, [sp, #12]
    4cb4:	9701      	str	r7, [sp, #4]
    4cb6:	2a02      	cmp	r2, #2
    4cb8:	d165      	bne.n	4d86 <__aeabi_ddiv+0x182>
    4cba:	9b01      	ldr	r3, [sp, #4]
    4cbc:	4c4a      	ldr	r4, [pc, #296]	; (4de8 <__aeabi_ddiv+0x1e4>)
    4cbe:	469c      	mov	ip, r3
    4cc0:	2300      	movs	r3, #0
    4cc2:	2200      	movs	r2, #0
    4cc4:	4698      	mov	r8, r3
    4cc6:	e06b      	b.n	4da0 <__aeabi_ddiv+0x19c>
    4cc8:	0003      	movs	r3, r0
    4cca:	4333      	orrs	r3, r6
    4ccc:	4699      	mov	r9, r3
    4cce:	d04e      	beq.n	4d6e <__aeabi_ddiv+0x16a>
    4cd0:	2e00      	cmp	r6, #0
    4cd2:	d100      	bne.n	4cd6 <__aeabi_ddiv+0xd2>
    4cd4:	e1bc      	b.n	5050 <__aeabi_ddiv+0x44c>
    4cd6:	0030      	movs	r0, r6
    4cd8:	f001 fa2c 	bl	6134 <__clzsi2>
    4cdc:	0003      	movs	r3, r0
    4cde:	3b0b      	subs	r3, #11
    4ce0:	2b1c      	cmp	r3, #28
    4ce2:	dd00      	ble.n	4ce6 <__aeabi_ddiv+0xe2>
    4ce4:	e1ac      	b.n	5040 <__aeabi_ddiv+0x43c>
    4ce6:	221d      	movs	r2, #29
    4ce8:	1ad3      	subs	r3, r2, r3
    4cea:	465a      	mov	r2, fp
    4cec:	0001      	movs	r1, r0
    4cee:	40da      	lsrs	r2, r3
    4cf0:	3908      	subs	r1, #8
    4cf2:	408e      	lsls	r6, r1
    4cf4:	0013      	movs	r3, r2
    4cf6:	4333      	orrs	r3, r6
    4cf8:	4699      	mov	r9, r3
    4cfa:	465b      	mov	r3, fp
    4cfc:	408b      	lsls	r3, r1
    4cfe:	4698      	mov	r8, r3
    4d00:	2300      	movs	r3, #0
    4d02:	4c3c      	ldr	r4, [pc, #240]	; (4df4 <__aeabi_ddiv+0x1f0>)
    4d04:	2600      	movs	r6, #0
    4d06:	1a24      	subs	r4, r4, r0
    4d08:	9303      	str	r3, [sp, #12]
    4d0a:	e79f      	b.n	4c4c <__aeabi_ddiv+0x48>
    4d0c:	4651      	mov	r1, sl
    4d0e:	465a      	mov	r2, fp
    4d10:	4311      	orrs	r1, r2
    4d12:	d129      	bne.n	4d68 <__aeabi_ddiv+0x164>
    4d14:	2200      	movs	r2, #0
    4d16:	4693      	mov	fp, r2
    4d18:	3202      	adds	r2, #2
    4d1a:	e7b1      	b.n	4c80 <__aeabi_ddiv+0x7c>
    4d1c:	4659      	mov	r1, fp
    4d1e:	4301      	orrs	r1, r0
    4d20:	d01e      	beq.n	4d60 <__aeabi_ddiv+0x15c>
    4d22:	465b      	mov	r3, fp
    4d24:	2b00      	cmp	r3, #0
    4d26:	d100      	bne.n	4d2a <__aeabi_ddiv+0x126>
    4d28:	e19e      	b.n	5068 <__aeabi_ddiv+0x464>
    4d2a:	4658      	mov	r0, fp
    4d2c:	f001 fa02 	bl	6134 <__clzsi2>
    4d30:	0003      	movs	r3, r0
    4d32:	3b0b      	subs	r3, #11
    4d34:	2b1c      	cmp	r3, #28
    4d36:	dd00      	ble.n	4d3a <__aeabi_ddiv+0x136>
    4d38:	e18f      	b.n	505a <__aeabi_ddiv+0x456>
    4d3a:	0002      	movs	r2, r0
    4d3c:	4659      	mov	r1, fp
    4d3e:	3a08      	subs	r2, #8
    4d40:	4091      	lsls	r1, r2
    4d42:	468b      	mov	fp, r1
    4d44:	211d      	movs	r1, #29
    4d46:	1acb      	subs	r3, r1, r3
    4d48:	4651      	mov	r1, sl
    4d4a:	40d9      	lsrs	r1, r3
    4d4c:	000b      	movs	r3, r1
    4d4e:	4659      	mov	r1, fp
    4d50:	430b      	orrs	r3, r1
    4d52:	4651      	mov	r1, sl
    4d54:	469b      	mov	fp, r3
    4d56:	4091      	lsls	r1, r2
    4d58:	4b26      	ldr	r3, [pc, #152]	; (4df4 <__aeabi_ddiv+0x1f0>)
    4d5a:	2200      	movs	r2, #0
    4d5c:	1a1b      	subs	r3, r3, r0
    4d5e:	e78f      	b.n	4c80 <__aeabi_ddiv+0x7c>
    4d60:	2300      	movs	r3, #0
    4d62:	2201      	movs	r2, #1
    4d64:	469b      	mov	fp, r3
    4d66:	e78b      	b.n	4c80 <__aeabi_ddiv+0x7c>
    4d68:	4651      	mov	r1, sl
    4d6a:	2203      	movs	r2, #3
    4d6c:	e788      	b.n	4c80 <__aeabi_ddiv+0x7c>
    4d6e:	2300      	movs	r3, #0
    4d70:	4698      	mov	r8, r3
    4d72:	3301      	adds	r3, #1
    4d74:	2604      	movs	r6, #4
    4d76:	2400      	movs	r4, #0
    4d78:	9303      	str	r3, [sp, #12]
    4d7a:	e767      	b.n	4c4c <__aeabi_ddiv+0x48>
    4d7c:	2303      	movs	r3, #3
    4d7e:	46b1      	mov	r9, r6
    4d80:	9303      	str	r3, [sp, #12]
    4d82:	260c      	movs	r6, #12
    4d84:	e762      	b.n	4c4c <__aeabi_ddiv+0x48>
    4d86:	2a03      	cmp	r2, #3
    4d88:	d100      	bne.n	4d8c <__aeabi_ddiv+0x188>
    4d8a:	e25c      	b.n	5246 <__aeabi_ddiv+0x642>
    4d8c:	9b01      	ldr	r3, [sp, #4]
    4d8e:	2a01      	cmp	r2, #1
    4d90:	d000      	beq.n	4d94 <__aeabi_ddiv+0x190>
    4d92:	e1e4      	b.n	515e <__aeabi_ddiv+0x55a>
    4d94:	4013      	ands	r3, r2
    4d96:	469c      	mov	ip, r3
    4d98:	2300      	movs	r3, #0
    4d9a:	2400      	movs	r4, #0
    4d9c:	2200      	movs	r2, #0
    4d9e:	4698      	mov	r8, r3
    4da0:	2100      	movs	r1, #0
    4da2:	0312      	lsls	r2, r2, #12
    4da4:	0b13      	lsrs	r3, r2, #12
    4da6:	0d0a      	lsrs	r2, r1, #20
    4da8:	0512      	lsls	r2, r2, #20
    4daa:	431a      	orrs	r2, r3
    4dac:	0523      	lsls	r3, r4, #20
    4dae:	4c12      	ldr	r4, [pc, #72]	; (4df8 <__aeabi_ddiv+0x1f4>)
    4db0:	4640      	mov	r0, r8
    4db2:	4022      	ands	r2, r4
    4db4:	4313      	orrs	r3, r2
    4db6:	4662      	mov	r2, ip
    4db8:	005b      	lsls	r3, r3, #1
    4dba:	07d2      	lsls	r2, r2, #31
    4dbc:	085b      	lsrs	r3, r3, #1
    4dbe:	4313      	orrs	r3, r2
    4dc0:	0019      	movs	r1, r3
    4dc2:	b007      	add	sp, #28
    4dc4:	bc3c      	pop	{r2, r3, r4, r5}
    4dc6:	4690      	mov	r8, r2
    4dc8:	4699      	mov	r9, r3
    4dca:	46a2      	mov	sl, r4
    4dcc:	46ab      	mov	fp, r5
    4dce:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4dd0:	2300      	movs	r3, #0
    4dd2:	2280      	movs	r2, #128	; 0x80
    4dd4:	469c      	mov	ip, r3
    4dd6:	0312      	lsls	r2, r2, #12
    4dd8:	4698      	mov	r8, r3
    4dda:	4c03      	ldr	r4, [pc, #12]	; (4de8 <__aeabi_ddiv+0x1e4>)
    4ddc:	e7e0      	b.n	4da0 <__aeabi_ddiv+0x19c>
    4dde:	2300      	movs	r3, #0
    4de0:	4c01      	ldr	r4, [pc, #4]	; (4de8 <__aeabi_ddiv+0x1e4>)
    4de2:	2200      	movs	r2, #0
    4de4:	4698      	mov	r8, r3
    4de6:	e7db      	b.n	4da0 <__aeabi_ddiv+0x19c>
    4de8:	000007ff 	.word	0x000007ff
    4dec:	fffffc01 	.word	0xfffffc01
    4df0:	000064c0 	.word	0x000064c0
    4df4:	fffffc0d 	.word	0xfffffc0d
    4df8:	800fffff 	.word	0x800fffff
    4dfc:	45d9      	cmp	r9, fp
    4dfe:	d900      	bls.n	4e02 <__aeabi_ddiv+0x1fe>
    4e00:	e139      	b.n	5076 <__aeabi_ddiv+0x472>
    4e02:	d100      	bne.n	4e06 <__aeabi_ddiv+0x202>
    4e04:	e134      	b.n	5070 <__aeabi_ddiv+0x46c>
    4e06:	2300      	movs	r3, #0
    4e08:	4646      	mov	r6, r8
    4e0a:	464d      	mov	r5, r9
    4e0c:	469a      	mov	sl, r3
    4e0e:	3c01      	subs	r4, #1
    4e10:	465b      	mov	r3, fp
    4e12:	0e0a      	lsrs	r2, r1, #24
    4e14:	021b      	lsls	r3, r3, #8
    4e16:	431a      	orrs	r2, r3
    4e18:	020b      	lsls	r3, r1, #8
    4e1a:	0c17      	lsrs	r7, r2, #16
    4e1c:	9303      	str	r3, [sp, #12]
    4e1e:	0413      	lsls	r3, r2, #16
    4e20:	0c1b      	lsrs	r3, r3, #16
    4e22:	0039      	movs	r1, r7
    4e24:	0028      	movs	r0, r5
    4e26:	4690      	mov	r8, r2
    4e28:	9301      	str	r3, [sp, #4]
    4e2a:	f7ff f9fd 	bl	4228 <__udivsi3>
    4e2e:	0002      	movs	r2, r0
    4e30:	9b01      	ldr	r3, [sp, #4]
    4e32:	4683      	mov	fp, r0
    4e34:	435a      	muls	r2, r3
    4e36:	0028      	movs	r0, r5
    4e38:	0039      	movs	r1, r7
    4e3a:	4691      	mov	r9, r2
    4e3c:	f7ff fa7a 	bl	4334 <__aeabi_uidivmod>
    4e40:	0c35      	lsrs	r5, r6, #16
    4e42:	0409      	lsls	r1, r1, #16
    4e44:	430d      	orrs	r5, r1
    4e46:	45a9      	cmp	r9, r5
    4e48:	d90d      	bls.n	4e66 <__aeabi_ddiv+0x262>
    4e4a:	465b      	mov	r3, fp
    4e4c:	4445      	add	r5, r8
    4e4e:	3b01      	subs	r3, #1
    4e50:	45a8      	cmp	r8, r5
    4e52:	d900      	bls.n	4e56 <__aeabi_ddiv+0x252>
    4e54:	e13a      	b.n	50cc <__aeabi_ddiv+0x4c8>
    4e56:	45a9      	cmp	r9, r5
    4e58:	d800      	bhi.n	4e5c <__aeabi_ddiv+0x258>
    4e5a:	e137      	b.n	50cc <__aeabi_ddiv+0x4c8>
    4e5c:	2302      	movs	r3, #2
    4e5e:	425b      	negs	r3, r3
    4e60:	469c      	mov	ip, r3
    4e62:	4445      	add	r5, r8
    4e64:	44e3      	add	fp, ip
    4e66:	464b      	mov	r3, r9
    4e68:	1aeb      	subs	r3, r5, r3
    4e6a:	0039      	movs	r1, r7
    4e6c:	0018      	movs	r0, r3
    4e6e:	9304      	str	r3, [sp, #16]
    4e70:	f7ff f9da 	bl	4228 <__udivsi3>
    4e74:	9b01      	ldr	r3, [sp, #4]
    4e76:	0005      	movs	r5, r0
    4e78:	4343      	muls	r3, r0
    4e7a:	0039      	movs	r1, r7
    4e7c:	9804      	ldr	r0, [sp, #16]
    4e7e:	4699      	mov	r9, r3
    4e80:	f7ff fa58 	bl	4334 <__aeabi_uidivmod>
    4e84:	0433      	lsls	r3, r6, #16
    4e86:	0409      	lsls	r1, r1, #16
    4e88:	0c1b      	lsrs	r3, r3, #16
    4e8a:	430b      	orrs	r3, r1
    4e8c:	4599      	cmp	r9, r3
    4e8e:	d909      	bls.n	4ea4 <__aeabi_ddiv+0x2a0>
    4e90:	4443      	add	r3, r8
    4e92:	1e6a      	subs	r2, r5, #1
    4e94:	4598      	cmp	r8, r3
    4e96:	d900      	bls.n	4e9a <__aeabi_ddiv+0x296>
    4e98:	e11a      	b.n	50d0 <__aeabi_ddiv+0x4cc>
    4e9a:	4599      	cmp	r9, r3
    4e9c:	d800      	bhi.n	4ea0 <__aeabi_ddiv+0x29c>
    4e9e:	e117      	b.n	50d0 <__aeabi_ddiv+0x4cc>
    4ea0:	3d02      	subs	r5, #2
    4ea2:	4443      	add	r3, r8
    4ea4:	464a      	mov	r2, r9
    4ea6:	1a9b      	subs	r3, r3, r2
    4ea8:	465a      	mov	r2, fp
    4eaa:	0412      	lsls	r2, r2, #16
    4eac:	432a      	orrs	r2, r5
    4eae:	9903      	ldr	r1, [sp, #12]
    4eb0:	4693      	mov	fp, r2
    4eb2:	0c10      	lsrs	r0, r2, #16
    4eb4:	0c0a      	lsrs	r2, r1, #16
    4eb6:	4691      	mov	r9, r2
    4eb8:	0409      	lsls	r1, r1, #16
    4eba:	465a      	mov	r2, fp
    4ebc:	0c09      	lsrs	r1, r1, #16
    4ebe:	464e      	mov	r6, r9
    4ec0:	000d      	movs	r5, r1
    4ec2:	0412      	lsls	r2, r2, #16
    4ec4:	0c12      	lsrs	r2, r2, #16
    4ec6:	4345      	muls	r5, r0
    4ec8:	9105      	str	r1, [sp, #20]
    4eca:	4351      	muls	r1, r2
    4ecc:	4372      	muls	r2, r6
    4ece:	4370      	muls	r0, r6
    4ed0:	1952      	adds	r2, r2, r5
    4ed2:	0c0e      	lsrs	r6, r1, #16
    4ed4:	18b2      	adds	r2, r6, r2
    4ed6:	4295      	cmp	r5, r2
    4ed8:	d903      	bls.n	4ee2 <__aeabi_ddiv+0x2de>
    4eda:	2580      	movs	r5, #128	; 0x80
    4edc:	026d      	lsls	r5, r5, #9
    4ede:	46ac      	mov	ip, r5
    4ee0:	4460      	add	r0, ip
    4ee2:	0c15      	lsrs	r5, r2, #16
    4ee4:	0409      	lsls	r1, r1, #16
    4ee6:	0412      	lsls	r2, r2, #16
    4ee8:	0c09      	lsrs	r1, r1, #16
    4eea:	1828      	adds	r0, r5, r0
    4eec:	1852      	adds	r2, r2, r1
    4eee:	4283      	cmp	r3, r0
    4ef0:	d200      	bcs.n	4ef4 <__aeabi_ddiv+0x2f0>
    4ef2:	e0ce      	b.n	5092 <__aeabi_ddiv+0x48e>
    4ef4:	d100      	bne.n	4ef8 <__aeabi_ddiv+0x2f4>
    4ef6:	e0c8      	b.n	508a <__aeabi_ddiv+0x486>
    4ef8:	1a1d      	subs	r5, r3, r0
    4efa:	4653      	mov	r3, sl
    4efc:	1a9e      	subs	r6, r3, r2
    4efe:	45b2      	cmp	sl, r6
    4f00:	4192      	sbcs	r2, r2
    4f02:	4252      	negs	r2, r2
    4f04:	1aab      	subs	r3, r5, r2
    4f06:	469a      	mov	sl, r3
    4f08:	4598      	cmp	r8, r3
    4f0a:	d100      	bne.n	4f0e <__aeabi_ddiv+0x30a>
    4f0c:	e117      	b.n	513e <__aeabi_ddiv+0x53a>
    4f0e:	0039      	movs	r1, r7
    4f10:	0018      	movs	r0, r3
    4f12:	f7ff f989 	bl	4228 <__udivsi3>
    4f16:	9b01      	ldr	r3, [sp, #4]
    4f18:	0005      	movs	r5, r0
    4f1a:	4343      	muls	r3, r0
    4f1c:	0039      	movs	r1, r7
    4f1e:	4650      	mov	r0, sl
    4f20:	9304      	str	r3, [sp, #16]
    4f22:	f7ff fa07 	bl	4334 <__aeabi_uidivmod>
    4f26:	9804      	ldr	r0, [sp, #16]
    4f28:	040b      	lsls	r3, r1, #16
    4f2a:	0c31      	lsrs	r1, r6, #16
    4f2c:	4319      	orrs	r1, r3
    4f2e:	4288      	cmp	r0, r1
    4f30:	d909      	bls.n	4f46 <__aeabi_ddiv+0x342>
    4f32:	4441      	add	r1, r8
    4f34:	1e6b      	subs	r3, r5, #1
    4f36:	4588      	cmp	r8, r1
    4f38:	d900      	bls.n	4f3c <__aeabi_ddiv+0x338>
    4f3a:	e107      	b.n	514c <__aeabi_ddiv+0x548>
    4f3c:	4288      	cmp	r0, r1
    4f3e:	d800      	bhi.n	4f42 <__aeabi_ddiv+0x33e>
    4f40:	e104      	b.n	514c <__aeabi_ddiv+0x548>
    4f42:	3d02      	subs	r5, #2
    4f44:	4441      	add	r1, r8
    4f46:	9b04      	ldr	r3, [sp, #16]
    4f48:	1acb      	subs	r3, r1, r3
    4f4a:	0018      	movs	r0, r3
    4f4c:	0039      	movs	r1, r7
    4f4e:	9304      	str	r3, [sp, #16]
    4f50:	f7ff f96a 	bl	4228 <__udivsi3>
    4f54:	9b01      	ldr	r3, [sp, #4]
    4f56:	4682      	mov	sl, r0
    4f58:	4343      	muls	r3, r0
    4f5a:	0039      	movs	r1, r7
    4f5c:	9804      	ldr	r0, [sp, #16]
    4f5e:	9301      	str	r3, [sp, #4]
    4f60:	f7ff f9e8 	bl	4334 <__aeabi_uidivmod>
    4f64:	9801      	ldr	r0, [sp, #4]
    4f66:	040b      	lsls	r3, r1, #16
    4f68:	0431      	lsls	r1, r6, #16
    4f6a:	0c09      	lsrs	r1, r1, #16
    4f6c:	4319      	orrs	r1, r3
    4f6e:	4288      	cmp	r0, r1
    4f70:	d90d      	bls.n	4f8e <__aeabi_ddiv+0x38a>
    4f72:	4653      	mov	r3, sl
    4f74:	4441      	add	r1, r8
    4f76:	3b01      	subs	r3, #1
    4f78:	4588      	cmp	r8, r1
    4f7a:	d900      	bls.n	4f7e <__aeabi_ddiv+0x37a>
    4f7c:	e0e8      	b.n	5150 <__aeabi_ddiv+0x54c>
    4f7e:	4288      	cmp	r0, r1
    4f80:	d800      	bhi.n	4f84 <__aeabi_ddiv+0x380>
    4f82:	e0e5      	b.n	5150 <__aeabi_ddiv+0x54c>
    4f84:	2302      	movs	r3, #2
    4f86:	425b      	negs	r3, r3
    4f88:	469c      	mov	ip, r3
    4f8a:	4441      	add	r1, r8
    4f8c:	44e2      	add	sl, ip
    4f8e:	9b01      	ldr	r3, [sp, #4]
    4f90:	042d      	lsls	r5, r5, #16
    4f92:	1ace      	subs	r6, r1, r3
    4f94:	4651      	mov	r1, sl
    4f96:	4329      	orrs	r1, r5
    4f98:	9d05      	ldr	r5, [sp, #20]
    4f9a:	464f      	mov	r7, r9
    4f9c:	002a      	movs	r2, r5
    4f9e:	040b      	lsls	r3, r1, #16
    4fa0:	0c08      	lsrs	r0, r1, #16
    4fa2:	0c1b      	lsrs	r3, r3, #16
    4fa4:	435a      	muls	r2, r3
    4fa6:	4345      	muls	r5, r0
    4fa8:	437b      	muls	r3, r7
    4faa:	4378      	muls	r0, r7
    4fac:	195b      	adds	r3, r3, r5
    4fae:	0c17      	lsrs	r7, r2, #16
    4fb0:	18fb      	adds	r3, r7, r3
    4fb2:	429d      	cmp	r5, r3
    4fb4:	d903      	bls.n	4fbe <__aeabi_ddiv+0x3ba>
    4fb6:	2580      	movs	r5, #128	; 0x80
    4fb8:	026d      	lsls	r5, r5, #9
    4fba:	46ac      	mov	ip, r5
    4fbc:	4460      	add	r0, ip
    4fbe:	0c1d      	lsrs	r5, r3, #16
    4fc0:	0412      	lsls	r2, r2, #16
    4fc2:	041b      	lsls	r3, r3, #16
    4fc4:	0c12      	lsrs	r2, r2, #16
    4fc6:	1828      	adds	r0, r5, r0
    4fc8:	189b      	adds	r3, r3, r2
    4fca:	4286      	cmp	r6, r0
    4fcc:	d200      	bcs.n	4fd0 <__aeabi_ddiv+0x3cc>
    4fce:	e093      	b.n	50f8 <__aeabi_ddiv+0x4f4>
    4fd0:	d100      	bne.n	4fd4 <__aeabi_ddiv+0x3d0>
    4fd2:	e08e      	b.n	50f2 <__aeabi_ddiv+0x4ee>
    4fd4:	2301      	movs	r3, #1
    4fd6:	4319      	orrs	r1, r3
    4fd8:	4ba0      	ldr	r3, [pc, #640]	; (525c <__aeabi_ddiv+0x658>)
    4fda:	18e3      	adds	r3, r4, r3
    4fdc:	2b00      	cmp	r3, #0
    4fde:	dc00      	bgt.n	4fe2 <__aeabi_ddiv+0x3de>
    4fe0:	e099      	b.n	5116 <__aeabi_ddiv+0x512>
    4fe2:	074a      	lsls	r2, r1, #29
    4fe4:	d000      	beq.n	4fe8 <__aeabi_ddiv+0x3e4>
    4fe6:	e09e      	b.n	5126 <__aeabi_ddiv+0x522>
    4fe8:	465a      	mov	r2, fp
    4fea:	01d2      	lsls	r2, r2, #7
    4fec:	d506      	bpl.n	4ffc <__aeabi_ddiv+0x3f8>
    4fee:	465a      	mov	r2, fp
    4ff0:	4b9b      	ldr	r3, [pc, #620]	; (5260 <__aeabi_ddiv+0x65c>)
    4ff2:	401a      	ands	r2, r3
    4ff4:	2380      	movs	r3, #128	; 0x80
    4ff6:	4693      	mov	fp, r2
    4ff8:	00db      	lsls	r3, r3, #3
    4ffa:	18e3      	adds	r3, r4, r3
    4ffc:	4a99      	ldr	r2, [pc, #612]	; (5264 <__aeabi_ddiv+0x660>)
    4ffe:	4293      	cmp	r3, r2
    5000:	dd68      	ble.n	50d4 <__aeabi_ddiv+0x4d0>
    5002:	2301      	movs	r3, #1
    5004:	9a02      	ldr	r2, [sp, #8]
    5006:	4c98      	ldr	r4, [pc, #608]	; (5268 <__aeabi_ddiv+0x664>)
    5008:	401a      	ands	r2, r3
    500a:	2300      	movs	r3, #0
    500c:	4694      	mov	ip, r2
    500e:	4698      	mov	r8, r3
    5010:	2200      	movs	r2, #0
    5012:	e6c5      	b.n	4da0 <__aeabi_ddiv+0x19c>
    5014:	2280      	movs	r2, #128	; 0x80
    5016:	464b      	mov	r3, r9
    5018:	0312      	lsls	r2, r2, #12
    501a:	4213      	tst	r3, r2
    501c:	d00a      	beq.n	5034 <__aeabi_ddiv+0x430>
    501e:	465b      	mov	r3, fp
    5020:	4213      	tst	r3, r2
    5022:	d106      	bne.n	5032 <__aeabi_ddiv+0x42e>
    5024:	431a      	orrs	r2, r3
    5026:	0312      	lsls	r2, r2, #12
    5028:	0b12      	lsrs	r2, r2, #12
    502a:	46ac      	mov	ip, r5
    502c:	4688      	mov	r8, r1
    502e:	4c8e      	ldr	r4, [pc, #568]	; (5268 <__aeabi_ddiv+0x664>)
    5030:	e6b6      	b.n	4da0 <__aeabi_ddiv+0x19c>
    5032:	464b      	mov	r3, r9
    5034:	431a      	orrs	r2, r3
    5036:	0312      	lsls	r2, r2, #12
    5038:	0b12      	lsrs	r2, r2, #12
    503a:	46bc      	mov	ip, r7
    503c:	4c8a      	ldr	r4, [pc, #552]	; (5268 <__aeabi_ddiv+0x664>)
    503e:	e6af      	b.n	4da0 <__aeabi_ddiv+0x19c>
    5040:	0003      	movs	r3, r0
    5042:	465a      	mov	r2, fp
    5044:	3b28      	subs	r3, #40	; 0x28
    5046:	409a      	lsls	r2, r3
    5048:	2300      	movs	r3, #0
    504a:	4691      	mov	r9, r2
    504c:	4698      	mov	r8, r3
    504e:	e657      	b.n	4d00 <__aeabi_ddiv+0xfc>
    5050:	4658      	mov	r0, fp
    5052:	f001 f86f 	bl	6134 <__clzsi2>
    5056:	3020      	adds	r0, #32
    5058:	e640      	b.n	4cdc <__aeabi_ddiv+0xd8>
    505a:	0003      	movs	r3, r0
    505c:	4652      	mov	r2, sl
    505e:	3b28      	subs	r3, #40	; 0x28
    5060:	409a      	lsls	r2, r3
    5062:	2100      	movs	r1, #0
    5064:	4693      	mov	fp, r2
    5066:	e677      	b.n	4d58 <__aeabi_ddiv+0x154>
    5068:	f001 f864 	bl	6134 <__clzsi2>
    506c:	3020      	adds	r0, #32
    506e:	e65f      	b.n	4d30 <__aeabi_ddiv+0x12c>
    5070:	4588      	cmp	r8, r1
    5072:	d200      	bcs.n	5076 <__aeabi_ddiv+0x472>
    5074:	e6c7      	b.n	4e06 <__aeabi_ddiv+0x202>
    5076:	464b      	mov	r3, r9
    5078:	07de      	lsls	r6, r3, #31
    507a:	085d      	lsrs	r5, r3, #1
    507c:	4643      	mov	r3, r8
    507e:	085b      	lsrs	r3, r3, #1
    5080:	431e      	orrs	r6, r3
    5082:	4643      	mov	r3, r8
    5084:	07db      	lsls	r3, r3, #31
    5086:	469a      	mov	sl, r3
    5088:	e6c2      	b.n	4e10 <__aeabi_ddiv+0x20c>
    508a:	2500      	movs	r5, #0
    508c:	4592      	cmp	sl, r2
    508e:	d300      	bcc.n	5092 <__aeabi_ddiv+0x48e>
    5090:	e733      	b.n	4efa <__aeabi_ddiv+0x2f6>
    5092:	9e03      	ldr	r6, [sp, #12]
    5094:	4659      	mov	r1, fp
    5096:	46b4      	mov	ip, r6
    5098:	44e2      	add	sl, ip
    509a:	45b2      	cmp	sl, r6
    509c:	41ad      	sbcs	r5, r5
    509e:	426d      	negs	r5, r5
    50a0:	4445      	add	r5, r8
    50a2:	18eb      	adds	r3, r5, r3
    50a4:	3901      	subs	r1, #1
    50a6:	4598      	cmp	r8, r3
    50a8:	d207      	bcs.n	50ba <__aeabi_ddiv+0x4b6>
    50aa:	4298      	cmp	r0, r3
    50ac:	d900      	bls.n	50b0 <__aeabi_ddiv+0x4ac>
    50ae:	e07f      	b.n	51b0 <__aeabi_ddiv+0x5ac>
    50b0:	d100      	bne.n	50b4 <__aeabi_ddiv+0x4b0>
    50b2:	e0bc      	b.n	522e <__aeabi_ddiv+0x62a>
    50b4:	1a1d      	subs	r5, r3, r0
    50b6:	468b      	mov	fp, r1
    50b8:	e71f      	b.n	4efa <__aeabi_ddiv+0x2f6>
    50ba:	4598      	cmp	r8, r3
    50bc:	d1fa      	bne.n	50b4 <__aeabi_ddiv+0x4b0>
    50be:	9d03      	ldr	r5, [sp, #12]
    50c0:	4555      	cmp	r5, sl
    50c2:	d9f2      	bls.n	50aa <__aeabi_ddiv+0x4a6>
    50c4:	4643      	mov	r3, r8
    50c6:	468b      	mov	fp, r1
    50c8:	1a1d      	subs	r5, r3, r0
    50ca:	e716      	b.n	4efa <__aeabi_ddiv+0x2f6>
    50cc:	469b      	mov	fp, r3
    50ce:	e6ca      	b.n	4e66 <__aeabi_ddiv+0x262>
    50d0:	0015      	movs	r5, r2
    50d2:	e6e7      	b.n	4ea4 <__aeabi_ddiv+0x2a0>
    50d4:	465a      	mov	r2, fp
    50d6:	08c9      	lsrs	r1, r1, #3
    50d8:	0752      	lsls	r2, r2, #29
    50da:	430a      	orrs	r2, r1
    50dc:	055b      	lsls	r3, r3, #21
    50de:	4690      	mov	r8, r2
    50e0:	0d5c      	lsrs	r4, r3, #21
    50e2:	465a      	mov	r2, fp
    50e4:	2301      	movs	r3, #1
    50e6:	9902      	ldr	r1, [sp, #8]
    50e8:	0252      	lsls	r2, r2, #9
    50ea:	4019      	ands	r1, r3
    50ec:	0b12      	lsrs	r2, r2, #12
    50ee:	468c      	mov	ip, r1
    50f0:	e656      	b.n	4da0 <__aeabi_ddiv+0x19c>
    50f2:	2b00      	cmp	r3, #0
    50f4:	d100      	bne.n	50f8 <__aeabi_ddiv+0x4f4>
    50f6:	e76f      	b.n	4fd8 <__aeabi_ddiv+0x3d4>
    50f8:	4446      	add	r6, r8
    50fa:	1e4a      	subs	r2, r1, #1
    50fc:	45b0      	cmp	r8, r6
    50fe:	d929      	bls.n	5154 <__aeabi_ddiv+0x550>
    5100:	0011      	movs	r1, r2
    5102:	4286      	cmp	r6, r0
    5104:	d000      	beq.n	5108 <__aeabi_ddiv+0x504>
    5106:	e765      	b.n	4fd4 <__aeabi_ddiv+0x3d0>
    5108:	9a03      	ldr	r2, [sp, #12]
    510a:	4293      	cmp	r3, r2
    510c:	d000      	beq.n	5110 <__aeabi_ddiv+0x50c>
    510e:	e761      	b.n	4fd4 <__aeabi_ddiv+0x3d0>
    5110:	e762      	b.n	4fd8 <__aeabi_ddiv+0x3d4>
    5112:	2101      	movs	r1, #1
    5114:	4249      	negs	r1, r1
    5116:	2001      	movs	r0, #1
    5118:	1ac2      	subs	r2, r0, r3
    511a:	2a38      	cmp	r2, #56	; 0x38
    511c:	dd21      	ble.n	5162 <__aeabi_ddiv+0x55e>
    511e:	9b02      	ldr	r3, [sp, #8]
    5120:	4003      	ands	r3, r0
    5122:	469c      	mov	ip, r3
    5124:	e638      	b.n	4d98 <__aeabi_ddiv+0x194>
    5126:	220f      	movs	r2, #15
    5128:	400a      	ands	r2, r1
    512a:	2a04      	cmp	r2, #4
    512c:	d100      	bne.n	5130 <__aeabi_ddiv+0x52c>
    512e:	e75b      	b.n	4fe8 <__aeabi_ddiv+0x3e4>
    5130:	000a      	movs	r2, r1
    5132:	1d11      	adds	r1, r2, #4
    5134:	4291      	cmp	r1, r2
    5136:	4192      	sbcs	r2, r2
    5138:	4252      	negs	r2, r2
    513a:	4493      	add	fp, r2
    513c:	e754      	b.n	4fe8 <__aeabi_ddiv+0x3e4>
    513e:	4b47      	ldr	r3, [pc, #284]	; (525c <__aeabi_ddiv+0x658>)
    5140:	18e3      	adds	r3, r4, r3
    5142:	2b00      	cmp	r3, #0
    5144:	dde5      	ble.n	5112 <__aeabi_ddiv+0x50e>
    5146:	2201      	movs	r2, #1
    5148:	4252      	negs	r2, r2
    514a:	e7f2      	b.n	5132 <__aeabi_ddiv+0x52e>
    514c:	001d      	movs	r5, r3
    514e:	e6fa      	b.n	4f46 <__aeabi_ddiv+0x342>
    5150:	469a      	mov	sl, r3
    5152:	e71c      	b.n	4f8e <__aeabi_ddiv+0x38a>
    5154:	42b0      	cmp	r0, r6
    5156:	d839      	bhi.n	51cc <__aeabi_ddiv+0x5c8>
    5158:	d06e      	beq.n	5238 <__aeabi_ddiv+0x634>
    515a:	0011      	movs	r1, r2
    515c:	e73a      	b.n	4fd4 <__aeabi_ddiv+0x3d0>
    515e:	9302      	str	r3, [sp, #8]
    5160:	e73a      	b.n	4fd8 <__aeabi_ddiv+0x3d4>
    5162:	2a1f      	cmp	r2, #31
    5164:	dc3c      	bgt.n	51e0 <__aeabi_ddiv+0x5dc>
    5166:	2320      	movs	r3, #32
    5168:	1a9b      	subs	r3, r3, r2
    516a:	000c      	movs	r4, r1
    516c:	4658      	mov	r0, fp
    516e:	4099      	lsls	r1, r3
    5170:	4098      	lsls	r0, r3
    5172:	1e4b      	subs	r3, r1, #1
    5174:	4199      	sbcs	r1, r3
    5176:	465b      	mov	r3, fp
    5178:	40d4      	lsrs	r4, r2
    517a:	40d3      	lsrs	r3, r2
    517c:	4320      	orrs	r0, r4
    517e:	4308      	orrs	r0, r1
    5180:	001a      	movs	r2, r3
    5182:	0743      	lsls	r3, r0, #29
    5184:	d009      	beq.n	519a <__aeabi_ddiv+0x596>
    5186:	230f      	movs	r3, #15
    5188:	4003      	ands	r3, r0
    518a:	2b04      	cmp	r3, #4
    518c:	d005      	beq.n	519a <__aeabi_ddiv+0x596>
    518e:	0001      	movs	r1, r0
    5190:	1d08      	adds	r0, r1, #4
    5192:	4288      	cmp	r0, r1
    5194:	419b      	sbcs	r3, r3
    5196:	425b      	negs	r3, r3
    5198:	18d2      	adds	r2, r2, r3
    519a:	0213      	lsls	r3, r2, #8
    519c:	d53a      	bpl.n	5214 <__aeabi_ddiv+0x610>
    519e:	2301      	movs	r3, #1
    51a0:	9a02      	ldr	r2, [sp, #8]
    51a2:	2401      	movs	r4, #1
    51a4:	401a      	ands	r2, r3
    51a6:	2300      	movs	r3, #0
    51a8:	4694      	mov	ip, r2
    51aa:	4698      	mov	r8, r3
    51ac:	2200      	movs	r2, #0
    51ae:	e5f7      	b.n	4da0 <__aeabi_ddiv+0x19c>
    51b0:	2102      	movs	r1, #2
    51b2:	4249      	negs	r1, r1
    51b4:	468c      	mov	ip, r1
    51b6:	9d03      	ldr	r5, [sp, #12]
    51b8:	44e3      	add	fp, ip
    51ba:	46ac      	mov	ip, r5
    51bc:	44e2      	add	sl, ip
    51be:	45aa      	cmp	sl, r5
    51c0:	41ad      	sbcs	r5, r5
    51c2:	426d      	negs	r5, r5
    51c4:	4445      	add	r5, r8
    51c6:	18ed      	adds	r5, r5, r3
    51c8:	1a2d      	subs	r5, r5, r0
    51ca:	e696      	b.n	4efa <__aeabi_ddiv+0x2f6>
    51cc:	1e8a      	subs	r2, r1, #2
    51ce:	9903      	ldr	r1, [sp, #12]
    51d0:	004d      	lsls	r5, r1, #1
    51d2:	428d      	cmp	r5, r1
    51d4:	4189      	sbcs	r1, r1
    51d6:	4249      	negs	r1, r1
    51d8:	4441      	add	r1, r8
    51da:	1876      	adds	r6, r6, r1
    51dc:	9503      	str	r5, [sp, #12]
    51de:	e78f      	b.n	5100 <__aeabi_ddiv+0x4fc>
    51e0:	201f      	movs	r0, #31
    51e2:	4240      	negs	r0, r0
    51e4:	1ac3      	subs	r3, r0, r3
    51e6:	4658      	mov	r0, fp
    51e8:	40d8      	lsrs	r0, r3
    51ea:	0003      	movs	r3, r0
    51ec:	2a20      	cmp	r2, #32
    51ee:	d028      	beq.n	5242 <__aeabi_ddiv+0x63e>
    51f0:	2040      	movs	r0, #64	; 0x40
    51f2:	465d      	mov	r5, fp
    51f4:	1a82      	subs	r2, r0, r2
    51f6:	4095      	lsls	r5, r2
    51f8:	4329      	orrs	r1, r5
    51fa:	1e4a      	subs	r2, r1, #1
    51fc:	4191      	sbcs	r1, r2
    51fe:	4319      	orrs	r1, r3
    5200:	2307      	movs	r3, #7
    5202:	2200      	movs	r2, #0
    5204:	400b      	ands	r3, r1
    5206:	d009      	beq.n	521c <__aeabi_ddiv+0x618>
    5208:	230f      	movs	r3, #15
    520a:	2200      	movs	r2, #0
    520c:	400b      	ands	r3, r1
    520e:	0008      	movs	r0, r1
    5210:	2b04      	cmp	r3, #4
    5212:	d1bd      	bne.n	5190 <__aeabi_ddiv+0x58c>
    5214:	0001      	movs	r1, r0
    5216:	0753      	lsls	r3, r2, #29
    5218:	0252      	lsls	r2, r2, #9
    521a:	0b12      	lsrs	r2, r2, #12
    521c:	08c9      	lsrs	r1, r1, #3
    521e:	4319      	orrs	r1, r3
    5220:	2301      	movs	r3, #1
    5222:	4688      	mov	r8, r1
    5224:	9902      	ldr	r1, [sp, #8]
    5226:	2400      	movs	r4, #0
    5228:	4019      	ands	r1, r3
    522a:	468c      	mov	ip, r1
    522c:	e5b8      	b.n	4da0 <__aeabi_ddiv+0x19c>
    522e:	4552      	cmp	r2, sl
    5230:	d8be      	bhi.n	51b0 <__aeabi_ddiv+0x5ac>
    5232:	468b      	mov	fp, r1
    5234:	2500      	movs	r5, #0
    5236:	e660      	b.n	4efa <__aeabi_ddiv+0x2f6>
    5238:	9d03      	ldr	r5, [sp, #12]
    523a:	429d      	cmp	r5, r3
    523c:	d3c6      	bcc.n	51cc <__aeabi_ddiv+0x5c8>
    523e:	0011      	movs	r1, r2
    5240:	e762      	b.n	5108 <__aeabi_ddiv+0x504>
    5242:	2500      	movs	r5, #0
    5244:	e7d8      	b.n	51f8 <__aeabi_ddiv+0x5f4>
    5246:	2280      	movs	r2, #128	; 0x80
    5248:	465b      	mov	r3, fp
    524a:	0312      	lsls	r2, r2, #12
    524c:	431a      	orrs	r2, r3
    524e:	9b01      	ldr	r3, [sp, #4]
    5250:	0312      	lsls	r2, r2, #12
    5252:	0b12      	lsrs	r2, r2, #12
    5254:	469c      	mov	ip, r3
    5256:	4688      	mov	r8, r1
    5258:	4c03      	ldr	r4, [pc, #12]	; (5268 <__aeabi_ddiv+0x664>)
    525a:	e5a1      	b.n	4da0 <__aeabi_ddiv+0x19c>
    525c:	000003ff 	.word	0x000003ff
    5260:	feffffff 	.word	0xfeffffff
    5264:	000007fe 	.word	0x000007fe
    5268:	000007ff 	.word	0x000007ff

0000526c <__eqdf2>:
    526c:	b5f0      	push	{r4, r5, r6, r7, lr}
    526e:	464f      	mov	r7, r9
    5270:	4646      	mov	r6, r8
    5272:	46d6      	mov	lr, sl
    5274:	005c      	lsls	r4, r3, #1
    5276:	b5c0      	push	{r6, r7, lr}
    5278:	031f      	lsls	r7, r3, #12
    527a:	0fdb      	lsrs	r3, r3, #31
    527c:	469a      	mov	sl, r3
    527e:	4b17      	ldr	r3, [pc, #92]	; (52dc <__eqdf2+0x70>)
    5280:	030e      	lsls	r6, r1, #12
    5282:	004d      	lsls	r5, r1, #1
    5284:	4684      	mov	ip, r0
    5286:	4680      	mov	r8, r0
    5288:	0b36      	lsrs	r6, r6, #12
    528a:	0d6d      	lsrs	r5, r5, #21
    528c:	0fc9      	lsrs	r1, r1, #31
    528e:	4691      	mov	r9, r2
    5290:	0b3f      	lsrs	r7, r7, #12
    5292:	0d64      	lsrs	r4, r4, #21
    5294:	2001      	movs	r0, #1
    5296:	429d      	cmp	r5, r3
    5298:	d008      	beq.n	52ac <__eqdf2+0x40>
    529a:	429c      	cmp	r4, r3
    529c:	d001      	beq.n	52a2 <__eqdf2+0x36>
    529e:	42a5      	cmp	r5, r4
    52a0:	d00b      	beq.n	52ba <__eqdf2+0x4e>
    52a2:	bc1c      	pop	{r2, r3, r4}
    52a4:	4690      	mov	r8, r2
    52a6:	4699      	mov	r9, r3
    52a8:	46a2      	mov	sl, r4
    52aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
    52ac:	4663      	mov	r3, ip
    52ae:	4333      	orrs	r3, r6
    52b0:	d1f7      	bne.n	52a2 <__eqdf2+0x36>
    52b2:	42ac      	cmp	r4, r5
    52b4:	d1f5      	bne.n	52a2 <__eqdf2+0x36>
    52b6:	433a      	orrs	r2, r7
    52b8:	d1f3      	bne.n	52a2 <__eqdf2+0x36>
    52ba:	2001      	movs	r0, #1
    52bc:	42be      	cmp	r6, r7
    52be:	d1f0      	bne.n	52a2 <__eqdf2+0x36>
    52c0:	45c8      	cmp	r8, r9
    52c2:	d1ee      	bne.n	52a2 <__eqdf2+0x36>
    52c4:	4551      	cmp	r1, sl
    52c6:	d007      	beq.n	52d8 <__eqdf2+0x6c>
    52c8:	2d00      	cmp	r5, #0
    52ca:	d1ea      	bne.n	52a2 <__eqdf2+0x36>
    52cc:	4663      	mov	r3, ip
    52ce:	431e      	orrs	r6, r3
    52d0:	0030      	movs	r0, r6
    52d2:	1e46      	subs	r6, r0, #1
    52d4:	41b0      	sbcs	r0, r6
    52d6:	e7e4      	b.n	52a2 <__eqdf2+0x36>
    52d8:	2000      	movs	r0, #0
    52da:	e7e2      	b.n	52a2 <__eqdf2+0x36>
    52dc:	000007ff 	.word	0x000007ff

000052e0 <__gedf2>:
    52e0:	b5f0      	push	{r4, r5, r6, r7, lr}
    52e2:	4645      	mov	r5, r8
    52e4:	46de      	mov	lr, fp
    52e6:	4657      	mov	r7, sl
    52e8:	464e      	mov	r6, r9
    52ea:	b5e0      	push	{r5, r6, r7, lr}
    52ec:	031f      	lsls	r7, r3, #12
    52ee:	0b3d      	lsrs	r5, r7, #12
    52f0:	4f2c      	ldr	r7, [pc, #176]	; (53a4 <__gedf2+0xc4>)
    52f2:	030e      	lsls	r6, r1, #12
    52f4:	004c      	lsls	r4, r1, #1
    52f6:	46ab      	mov	fp, r5
    52f8:	005d      	lsls	r5, r3, #1
    52fa:	4684      	mov	ip, r0
    52fc:	0b36      	lsrs	r6, r6, #12
    52fe:	0d64      	lsrs	r4, r4, #21
    5300:	0fc9      	lsrs	r1, r1, #31
    5302:	4690      	mov	r8, r2
    5304:	0d6d      	lsrs	r5, r5, #21
    5306:	0fdb      	lsrs	r3, r3, #31
    5308:	42bc      	cmp	r4, r7
    530a:	d02a      	beq.n	5362 <__gedf2+0x82>
    530c:	4f25      	ldr	r7, [pc, #148]	; (53a4 <__gedf2+0xc4>)
    530e:	42bd      	cmp	r5, r7
    5310:	d02d      	beq.n	536e <__gedf2+0x8e>
    5312:	2c00      	cmp	r4, #0
    5314:	d10f      	bne.n	5336 <__gedf2+0x56>
    5316:	4330      	orrs	r0, r6
    5318:	0007      	movs	r7, r0
    531a:	4681      	mov	r9, r0
    531c:	4278      	negs	r0, r7
    531e:	4178      	adcs	r0, r7
    5320:	b2c0      	uxtb	r0, r0
    5322:	2d00      	cmp	r5, #0
    5324:	d117      	bne.n	5356 <__gedf2+0x76>
    5326:	465f      	mov	r7, fp
    5328:	433a      	orrs	r2, r7
    532a:	d114      	bne.n	5356 <__gedf2+0x76>
    532c:	464b      	mov	r3, r9
    532e:	2000      	movs	r0, #0
    5330:	2b00      	cmp	r3, #0
    5332:	d00a      	beq.n	534a <__gedf2+0x6a>
    5334:	e006      	b.n	5344 <__gedf2+0x64>
    5336:	2d00      	cmp	r5, #0
    5338:	d102      	bne.n	5340 <__gedf2+0x60>
    533a:	4658      	mov	r0, fp
    533c:	4302      	orrs	r2, r0
    533e:	d001      	beq.n	5344 <__gedf2+0x64>
    5340:	4299      	cmp	r1, r3
    5342:	d018      	beq.n	5376 <__gedf2+0x96>
    5344:	4248      	negs	r0, r1
    5346:	2101      	movs	r1, #1
    5348:	4308      	orrs	r0, r1
    534a:	bc3c      	pop	{r2, r3, r4, r5}
    534c:	4690      	mov	r8, r2
    534e:	4699      	mov	r9, r3
    5350:	46a2      	mov	sl, r4
    5352:	46ab      	mov	fp, r5
    5354:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5356:	2800      	cmp	r0, #0
    5358:	d0f2      	beq.n	5340 <__gedf2+0x60>
    535a:	2001      	movs	r0, #1
    535c:	3b01      	subs	r3, #1
    535e:	4318      	orrs	r0, r3
    5360:	e7f3      	b.n	534a <__gedf2+0x6a>
    5362:	0037      	movs	r7, r6
    5364:	4307      	orrs	r7, r0
    5366:	d0d1      	beq.n	530c <__gedf2+0x2c>
    5368:	2002      	movs	r0, #2
    536a:	4240      	negs	r0, r0
    536c:	e7ed      	b.n	534a <__gedf2+0x6a>
    536e:	465f      	mov	r7, fp
    5370:	4317      	orrs	r7, r2
    5372:	d0ce      	beq.n	5312 <__gedf2+0x32>
    5374:	e7f8      	b.n	5368 <__gedf2+0x88>
    5376:	42ac      	cmp	r4, r5
    5378:	dce4      	bgt.n	5344 <__gedf2+0x64>
    537a:	da03      	bge.n	5384 <__gedf2+0xa4>
    537c:	1e48      	subs	r0, r1, #1
    537e:	2101      	movs	r1, #1
    5380:	4308      	orrs	r0, r1
    5382:	e7e2      	b.n	534a <__gedf2+0x6a>
    5384:	455e      	cmp	r6, fp
    5386:	d8dd      	bhi.n	5344 <__gedf2+0x64>
    5388:	d006      	beq.n	5398 <__gedf2+0xb8>
    538a:	2000      	movs	r0, #0
    538c:	455e      	cmp	r6, fp
    538e:	d2dc      	bcs.n	534a <__gedf2+0x6a>
    5390:	2301      	movs	r3, #1
    5392:	1e48      	subs	r0, r1, #1
    5394:	4318      	orrs	r0, r3
    5396:	e7d8      	b.n	534a <__gedf2+0x6a>
    5398:	45c4      	cmp	ip, r8
    539a:	d8d3      	bhi.n	5344 <__gedf2+0x64>
    539c:	2000      	movs	r0, #0
    539e:	45c4      	cmp	ip, r8
    53a0:	d3f6      	bcc.n	5390 <__gedf2+0xb0>
    53a2:	e7d2      	b.n	534a <__gedf2+0x6a>
    53a4:	000007ff 	.word	0x000007ff

000053a8 <__ledf2>:
    53a8:	b5f0      	push	{r4, r5, r6, r7, lr}
    53aa:	464e      	mov	r6, r9
    53ac:	4645      	mov	r5, r8
    53ae:	46de      	mov	lr, fp
    53b0:	4657      	mov	r7, sl
    53b2:	005c      	lsls	r4, r3, #1
    53b4:	b5e0      	push	{r5, r6, r7, lr}
    53b6:	031f      	lsls	r7, r3, #12
    53b8:	0fdb      	lsrs	r3, r3, #31
    53ba:	4699      	mov	r9, r3
    53bc:	4b2a      	ldr	r3, [pc, #168]	; (5468 <__ledf2+0xc0>)
    53be:	030e      	lsls	r6, r1, #12
    53c0:	004d      	lsls	r5, r1, #1
    53c2:	0fc9      	lsrs	r1, r1, #31
    53c4:	4684      	mov	ip, r0
    53c6:	0b36      	lsrs	r6, r6, #12
    53c8:	0d6d      	lsrs	r5, r5, #21
    53ca:	468b      	mov	fp, r1
    53cc:	4690      	mov	r8, r2
    53ce:	0b3f      	lsrs	r7, r7, #12
    53d0:	0d64      	lsrs	r4, r4, #21
    53d2:	429d      	cmp	r5, r3
    53d4:	d020      	beq.n	5418 <__ledf2+0x70>
    53d6:	4b24      	ldr	r3, [pc, #144]	; (5468 <__ledf2+0xc0>)
    53d8:	429c      	cmp	r4, r3
    53da:	d022      	beq.n	5422 <__ledf2+0x7a>
    53dc:	2d00      	cmp	r5, #0
    53de:	d112      	bne.n	5406 <__ledf2+0x5e>
    53e0:	4330      	orrs	r0, r6
    53e2:	4243      	negs	r3, r0
    53e4:	4143      	adcs	r3, r0
    53e6:	b2db      	uxtb	r3, r3
    53e8:	2c00      	cmp	r4, #0
    53ea:	d01f      	beq.n	542c <__ledf2+0x84>
    53ec:	2b00      	cmp	r3, #0
    53ee:	d00c      	beq.n	540a <__ledf2+0x62>
    53f0:	464b      	mov	r3, r9
    53f2:	2001      	movs	r0, #1
    53f4:	3b01      	subs	r3, #1
    53f6:	4303      	orrs	r3, r0
    53f8:	0018      	movs	r0, r3
    53fa:	bc3c      	pop	{r2, r3, r4, r5}
    53fc:	4690      	mov	r8, r2
    53fe:	4699      	mov	r9, r3
    5400:	46a2      	mov	sl, r4
    5402:	46ab      	mov	fp, r5
    5404:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5406:	2c00      	cmp	r4, #0
    5408:	d016      	beq.n	5438 <__ledf2+0x90>
    540a:	45cb      	cmp	fp, r9
    540c:	d017      	beq.n	543e <__ledf2+0x96>
    540e:	465b      	mov	r3, fp
    5410:	4259      	negs	r1, r3
    5412:	2301      	movs	r3, #1
    5414:	430b      	orrs	r3, r1
    5416:	e7ef      	b.n	53f8 <__ledf2+0x50>
    5418:	0031      	movs	r1, r6
    541a:	2302      	movs	r3, #2
    541c:	4301      	orrs	r1, r0
    541e:	d1eb      	bne.n	53f8 <__ledf2+0x50>
    5420:	e7d9      	b.n	53d6 <__ledf2+0x2e>
    5422:	0039      	movs	r1, r7
    5424:	2302      	movs	r3, #2
    5426:	4311      	orrs	r1, r2
    5428:	d1e6      	bne.n	53f8 <__ledf2+0x50>
    542a:	e7d7      	b.n	53dc <__ledf2+0x34>
    542c:	433a      	orrs	r2, r7
    542e:	d1dd      	bne.n	53ec <__ledf2+0x44>
    5430:	2300      	movs	r3, #0
    5432:	2800      	cmp	r0, #0
    5434:	d0e0      	beq.n	53f8 <__ledf2+0x50>
    5436:	e7ea      	b.n	540e <__ledf2+0x66>
    5438:	433a      	orrs	r2, r7
    543a:	d1e6      	bne.n	540a <__ledf2+0x62>
    543c:	e7e7      	b.n	540e <__ledf2+0x66>
    543e:	42a5      	cmp	r5, r4
    5440:	dce5      	bgt.n	540e <__ledf2+0x66>
    5442:	db05      	blt.n	5450 <__ledf2+0xa8>
    5444:	42be      	cmp	r6, r7
    5446:	d8e2      	bhi.n	540e <__ledf2+0x66>
    5448:	d007      	beq.n	545a <__ledf2+0xb2>
    544a:	2300      	movs	r3, #0
    544c:	42be      	cmp	r6, r7
    544e:	d2d3      	bcs.n	53f8 <__ledf2+0x50>
    5450:	4659      	mov	r1, fp
    5452:	2301      	movs	r3, #1
    5454:	3901      	subs	r1, #1
    5456:	430b      	orrs	r3, r1
    5458:	e7ce      	b.n	53f8 <__ledf2+0x50>
    545a:	45c4      	cmp	ip, r8
    545c:	d8d7      	bhi.n	540e <__ledf2+0x66>
    545e:	2300      	movs	r3, #0
    5460:	45c4      	cmp	ip, r8
    5462:	d3f5      	bcc.n	5450 <__ledf2+0xa8>
    5464:	e7c8      	b.n	53f8 <__ledf2+0x50>
    5466:	46c0      	nop			; (mov r8, r8)
    5468:	000007ff 	.word	0x000007ff

0000546c <__aeabi_dmul>:
    546c:	b5f0      	push	{r4, r5, r6, r7, lr}
    546e:	4657      	mov	r7, sl
    5470:	4645      	mov	r5, r8
    5472:	46de      	mov	lr, fp
    5474:	464e      	mov	r6, r9
    5476:	b5e0      	push	{r5, r6, r7, lr}
    5478:	030c      	lsls	r4, r1, #12
    547a:	4698      	mov	r8, r3
    547c:	004e      	lsls	r6, r1, #1
    547e:	0b23      	lsrs	r3, r4, #12
    5480:	b087      	sub	sp, #28
    5482:	0007      	movs	r7, r0
    5484:	4692      	mov	sl, r2
    5486:	469b      	mov	fp, r3
    5488:	0d76      	lsrs	r6, r6, #21
    548a:	0fcd      	lsrs	r5, r1, #31
    548c:	2e00      	cmp	r6, #0
    548e:	d06b      	beq.n	5568 <__aeabi_dmul+0xfc>
    5490:	4b6d      	ldr	r3, [pc, #436]	; (5648 <__aeabi_dmul+0x1dc>)
    5492:	429e      	cmp	r6, r3
    5494:	d035      	beq.n	5502 <__aeabi_dmul+0x96>
    5496:	2480      	movs	r4, #128	; 0x80
    5498:	465b      	mov	r3, fp
    549a:	0f42      	lsrs	r2, r0, #29
    549c:	0424      	lsls	r4, r4, #16
    549e:	00db      	lsls	r3, r3, #3
    54a0:	4314      	orrs	r4, r2
    54a2:	431c      	orrs	r4, r3
    54a4:	00c3      	lsls	r3, r0, #3
    54a6:	4699      	mov	r9, r3
    54a8:	4b68      	ldr	r3, [pc, #416]	; (564c <__aeabi_dmul+0x1e0>)
    54aa:	46a3      	mov	fp, r4
    54ac:	469c      	mov	ip, r3
    54ae:	2300      	movs	r3, #0
    54b0:	2700      	movs	r7, #0
    54b2:	4466      	add	r6, ip
    54b4:	9302      	str	r3, [sp, #8]
    54b6:	4643      	mov	r3, r8
    54b8:	031c      	lsls	r4, r3, #12
    54ba:	005a      	lsls	r2, r3, #1
    54bc:	0fdb      	lsrs	r3, r3, #31
    54be:	4650      	mov	r0, sl
    54c0:	0b24      	lsrs	r4, r4, #12
    54c2:	0d52      	lsrs	r2, r2, #21
    54c4:	4698      	mov	r8, r3
    54c6:	d100      	bne.n	54ca <__aeabi_dmul+0x5e>
    54c8:	e076      	b.n	55b8 <__aeabi_dmul+0x14c>
    54ca:	4b5f      	ldr	r3, [pc, #380]	; (5648 <__aeabi_dmul+0x1dc>)
    54cc:	429a      	cmp	r2, r3
    54ce:	d06d      	beq.n	55ac <__aeabi_dmul+0x140>
    54d0:	2380      	movs	r3, #128	; 0x80
    54d2:	0f41      	lsrs	r1, r0, #29
    54d4:	041b      	lsls	r3, r3, #16
    54d6:	430b      	orrs	r3, r1
    54d8:	495c      	ldr	r1, [pc, #368]	; (564c <__aeabi_dmul+0x1e0>)
    54da:	00e4      	lsls	r4, r4, #3
    54dc:	468c      	mov	ip, r1
    54de:	431c      	orrs	r4, r3
    54e0:	00c3      	lsls	r3, r0, #3
    54e2:	2000      	movs	r0, #0
    54e4:	4462      	add	r2, ip
    54e6:	4641      	mov	r1, r8
    54e8:	18b6      	adds	r6, r6, r2
    54ea:	4069      	eors	r1, r5
    54ec:	1c72      	adds	r2, r6, #1
    54ee:	9101      	str	r1, [sp, #4]
    54f0:	4694      	mov	ip, r2
    54f2:	4307      	orrs	r7, r0
    54f4:	2f0f      	cmp	r7, #15
    54f6:	d900      	bls.n	54fa <__aeabi_dmul+0x8e>
    54f8:	e0b0      	b.n	565c <__aeabi_dmul+0x1f0>
    54fa:	4a55      	ldr	r2, [pc, #340]	; (5650 <__aeabi_dmul+0x1e4>)
    54fc:	00bf      	lsls	r7, r7, #2
    54fe:	59d2      	ldr	r2, [r2, r7]
    5500:	4697      	mov	pc, r2
    5502:	465b      	mov	r3, fp
    5504:	4303      	orrs	r3, r0
    5506:	4699      	mov	r9, r3
    5508:	d000      	beq.n	550c <__aeabi_dmul+0xa0>
    550a:	e087      	b.n	561c <__aeabi_dmul+0x1b0>
    550c:	2300      	movs	r3, #0
    550e:	469b      	mov	fp, r3
    5510:	3302      	adds	r3, #2
    5512:	2708      	movs	r7, #8
    5514:	9302      	str	r3, [sp, #8]
    5516:	e7ce      	b.n	54b6 <__aeabi_dmul+0x4a>
    5518:	4642      	mov	r2, r8
    551a:	9201      	str	r2, [sp, #4]
    551c:	2802      	cmp	r0, #2
    551e:	d067      	beq.n	55f0 <__aeabi_dmul+0x184>
    5520:	2803      	cmp	r0, #3
    5522:	d100      	bne.n	5526 <__aeabi_dmul+0xba>
    5524:	e20e      	b.n	5944 <__aeabi_dmul+0x4d8>
    5526:	2801      	cmp	r0, #1
    5528:	d000      	beq.n	552c <__aeabi_dmul+0xc0>
    552a:	e162      	b.n	57f2 <__aeabi_dmul+0x386>
    552c:	2300      	movs	r3, #0
    552e:	2400      	movs	r4, #0
    5530:	2200      	movs	r2, #0
    5532:	4699      	mov	r9, r3
    5534:	9901      	ldr	r1, [sp, #4]
    5536:	4001      	ands	r1, r0
    5538:	b2cd      	uxtb	r5, r1
    553a:	2100      	movs	r1, #0
    553c:	0312      	lsls	r2, r2, #12
    553e:	0d0b      	lsrs	r3, r1, #20
    5540:	0b12      	lsrs	r2, r2, #12
    5542:	051b      	lsls	r3, r3, #20
    5544:	4313      	orrs	r3, r2
    5546:	4a43      	ldr	r2, [pc, #268]	; (5654 <__aeabi_dmul+0x1e8>)
    5548:	0524      	lsls	r4, r4, #20
    554a:	4013      	ands	r3, r2
    554c:	431c      	orrs	r4, r3
    554e:	0064      	lsls	r4, r4, #1
    5550:	07ed      	lsls	r5, r5, #31
    5552:	0864      	lsrs	r4, r4, #1
    5554:	432c      	orrs	r4, r5
    5556:	4648      	mov	r0, r9
    5558:	0021      	movs	r1, r4
    555a:	b007      	add	sp, #28
    555c:	bc3c      	pop	{r2, r3, r4, r5}
    555e:	4690      	mov	r8, r2
    5560:	4699      	mov	r9, r3
    5562:	46a2      	mov	sl, r4
    5564:	46ab      	mov	fp, r5
    5566:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5568:	4303      	orrs	r3, r0
    556a:	4699      	mov	r9, r3
    556c:	d04f      	beq.n	560e <__aeabi_dmul+0x1a2>
    556e:	465b      	mov	r3, fp
    5570:	2b00      	cmp	r3, #0
    5572:	d100      	bne.n	5576 <__aeabi_dmul+0x10a>
    5574:	e189      	b.n	588a <__aeabi_dmul+0x41e>
    5576:	4658      	mov	r0, fp
    5578:	f000 fddc 	bl	6134 <__clzsi2>
    557c:	0003      	movs	r3, r0
    557e:	3b0b      	subs	r3, #11
    5580:	2b1c      	cmp	r3, #28
    5582:	dd00      	ble.n	5586 <__aeabi_dmul+0x11a>
    5584:	e17a      	b.n	587c <__aeabi_dmul+0x410>
    5586:	221d      	movs	r2, #29
    5588:	1ad3      	subs	r3, r2, r3
    558a:	003a      	movs	r2, r7
    558c:	0001      	movs	r1, r0
    558e:	465c      	mov	r4, fp
    5590:	40da      	lsrs	r2, r3
    5592:	3908      	subs	r1, #8
    5594:	408c      	lsls	r4, r1
    5596:	0013      	movs	r3, r2
    5598:	408f      	lsls	r7, r1
    559a:	4323      	orrs	r3, r4
    559c:	469b      	mov	fp, r3
    559e:	46b9      	mov	r9, r7
    55a0:	2300      	movs	r3, #0
    55a2:	4e2d      	ldr	r6, [pc, #180]	; (5658 <__aeabi_dmul+0x1ec>)
    55a4:	2700      	movs	r7, #0
    55a6:	1a36      	subs	r6, r6, r0
    55a8:	9302      	str	r3, [sp, #8]
    55aa:	e784      	b.n	54b6 <__aeabi_dmul+0x4a>
    55ac:	4653      	mov	r3, sl
    55ae:	4323      	orrs	r3, r4
    55b0:	d12a      	bne.n	5608 <__aeabi_dmul+0x19c>
    55b2:	2400      	movs	r4, #0
    55b4:	2002      	movs	r0, #2
    55b6:	e796      	b.n	54e6 <__aeabi_dmul+0x7a>
    55b8:	4653      	mov	r3, sl
    55ba:	4323      	orrs	r3, r4
    55bc:	d020      	beq.n	5600 <__aeabi_dmul+0x194>
    55be:	2c00      	cmp	r4, #0
    55c0:	d100      	bne.n	55c4 <__aeabi_dmul+0x158>
    55c2:	e157      	b.n	5874 <__aeabi_dmul+0x408>
    55c4:	0020      	movs	r0, r4
    55c6:	f000 fdb5 	bl	6134 <__clzsi2>
    55ca:	0003      	movs	r3, r0
    55cc:	3b0b      	subs	r3, #11
    55ce:	2b1c      	cmp	r3, #28
    55d0:	dd00      	ble.n	55d4 <__aeabi_dmul+0x168>
    55d2:	e149      	b.n	5868 <__aeabi_dmul+0x3fc>
    55d4:	211d      	movs	r1, #29
    55d6:	1acb      	subs	r3, r1, r3
    55d8:	4651      	mov	r1, sl
    55da:	0002      	movs	r2, r0
    55dc:	40d9      	lsrs	r1, r3
    55de:	4653      	mov	r3, sl
    55e0:	3a08      	subs	r2, #8
    55e2:	4094      	lsls	r4, r2
    55e4:	4093      	lsls	r3, r2
    55e6:	430c      	orrs	r4, r1
    55e8:	4a1b      	ldr	r2, [pc, #108]	; (5658 <__aeabi_dmul+0x1ec>)
    55ea:	1a12      	subs	r2, r2, r0
    55ec:	2000      	movs	r0, #0
    55ee:	e77a      	b.n	54e6 <__aeabi_dmul+0x7a>
    55f0:	2501      	movs	r5, #1
    55f2:	9b01      	ldr	r3, [sp, #4]
    55f4:	4c14      	ldr	r4, [pc, #80]	; (5648 <__aeabi_dmul+0x1dc>)
    55f6:	401d      	ands	r5, r3
    55f8:	2300      	movs	r3, #0
    55fa:	2200      	movs	r2, #0
    55fc:	4699      	mov	r9, r3
    55fe:	e79c      	b.n	553a <__aeabi_dmul+0xce>
    5600:	2400      	movs	r4, #0
    5602:	2200      	movs	r2, #0
    5604:	2001      	movs	r0, #1
    5606:	e76e      	b.n	54e6 <__aeabi_dmul+0x7a>
    5608:	4653      	mov	r3, sl
    560a:	2003      	movs	r0, #3
    560c:	e76b      	b.n	54e6 <__aeabi_dmul+0x7a>
    560e:	2300      	movs	r3, #0
    5610:	469b      	mov	fp, r3
    5612:	3301      	adds	r3, #1
    5614:	2704      	movs	r7, #4
    5616:	2600      	movs	r6, #0
    5618:	9302      	str	r3, [sp, #8]
    561a:	e74c      	b.n	54b6 <__aeabi_dmul+0x4a>
    561c:	2303      	movs	r3, #3
    561e:	4681      	mov	r9, r0
    5620:	270c      	movs	r7, #12
    5622:	9302      	str	r3, [sp, #8]
    5624:	e747      	b.n	54b6 <__aeabi_dmul+0x4a>
    5626:	2280      	movs	r2, #128	; 0x80
    5628:	2300      	movs	r3, #0
    562a:	2500      	movs	r5, #0
    562c:	0312      	lsls	r2, r2, #12
    562e:	4699      	mov	r9, r3
    5630:	4c05      	ldr	r4, [pc, #20]	; (5648 <__aeabi_dmul+0x1dc>)
    5632:	e782      	b.n	553a <__aeabi_dmul+0xce>
    5634:	465c      	mov	r4, fp
    5636:	464b      	mov	r3, r9
    5638:	9802      	ldr	r0, [sp, #8]
    563a:	e76f      	b.n	551c <__aeabi_dmul+0xb0>
    563c:	465c      	mov	r4, fp
    563e:	464b      	mov	r3, r9
    5640:	9501      	str	r5, [sp, #4]
    5642:	9802      	ldr	r0, [sp, #8]
    5644:	e76a      	b.n	551c <__aeabi_dmul+0xb0>
    5646:	46c0      	nop			; (mov r8, r8)
    5648:	000007ff 	.word	0x000007ff
    564c:	fffffc01 	.word	0xfffffc01
    5650:	00006500 	.word	0x00006500
    5654:	800fffff 	.word	0x800fffff
    5658:	fffffc0d 	.word	0xfffffc0d
    565c:	464a      	mov	r2, r9
    565e:	4649      	mov	r1, r9
    5660:	0c17      	lsrs	r7, r2, #16
    5662:	0c1a      	lsrs	r2, r3, #16
    5664:	041b      	lsls	r3, r3, #16
    5666:	0c1b      	lsrs	r3, r3, #16
    5668:	0408      	lsls	r0, r1, #16
    566a:	0019      	movs	r1, r3
    566c:	0c00      	lsrs	r0, r0, #16
    566e:	4341      	muls	r1, r0
    5670:	0015      	movs	r5, r2
    5672:	4688      	mov	r8, r1
    5674:	0019      	movs	r1, r3
    5676:	437d      	muls	r5, r7
    5678:	4379      	muls	r1, r7
    567a:	9503      	str	r5, [sp, #12]
    567c:	4689      	mov	r9, r1
    567e:	0029      	movs	r1, r5
    5680:	0015      	movs	r5, r2
    5682:	4345      	muls	r5, r0
    5684:	444d      	add	r5, r9
    5686:	9502      	str	r5, [sp, #8]
    5688:	4645      	mov	r5, r8
    568a:	0c2d      	lsrs	r5, r5, #16
    568c:	46aa      	mov	sl, r5
    568e:	9d02      	ldr	r5, [sp, #8]
    5690:	4455      	add	r5, sl
    5692:	45a9      	cmp	r9, r5
    5694:	d906      	bls.n	56a4 <__aeabi_dmul+0x238>
    5696:	468a      	mov	sl, r1
    5698:	2180      	movs	r1, #128	; 0x80
    569a:	0249      	lsls	r1, r1, #9
    569c:	4689      	mov	r9, r1
    569e:	44ca      	add	sl, r9
    56a0:	4651      	mov	r1, sl
    56a2:	9103      	str	r1, [sp, #12]
    56a4:	0c29      	lsrs	r1, r5, #16
    56a6:	9104      	str	r1, [sp, #16]
    56a8:	4641      	mov	r1, r8
    56aa:	0409      	lsls	r1, r1, #16
    56ac:	042d      	lsls	r5, r5, #16
    56ae:	0c09      	lsrs	r1, r1, #16
    56b0:	4688      	mov	r8, r1
    56b2:	0029      	movs	r1, r5
    56b4:	0c25      	lsrs	r5, r4, #16
    56b6:	0424      	lsls	r4, r4, #16
    56b8:	4441      	add	r1, r8
    56ba:	0c24      	lsrs	r4, r4, #16
    56bc:	9105      	str	r1, [sp, #20]
    56be:	0021      	movs	r1, r4
    56c0:	4341      	muls	r1, r0
    56c2:	4688      	mov	r8, r1
    56c4:	0021      	movs	r1, r4
    56c6:	4379      	muls	r1, r7
    56c8:	468a      	mov	sl, r1
    56ca:	4368      	muls	r0, r5
    56cc:	4641      	mov	r1, r8
    56ce:	4450      	add	r0, sl
    56d0:	4681      	mov	r9, r0
    56d2:	0c08      	lsrs	r0, r1, #16
    56d4:	4448      	add	r0, r9
    56d6:	436f      	muls	r7, r5
    56d8:	4582      	cmp	sl, r0
    56da:	d903      	bls.n	56e4 <__aeabi_dmul+0x278>
    56dc:	2180      	movs	r1, #128	; 0x80
    56de:	0249      	lsls	r1, r1, #9
    56e0:	4689      	mov	r9, r1
    56e2:	444f      	add	r7, r9
    56e4:	0c01      	lsrs	r1, r0, #16
    56e6:	4689      	mov	r9, r1
    56e8:	0039      	movs	r1, r7
    56ea:	4449      	add	r1, r9
    56ec:	9102      	str	r1, [sp, #8]
    56ee:	4641      	mov	r1, r8
    56f0:	040f      	lsls	r7, r1, #16
    56f2:	9904      	ldr	r1, [sp, #16]
    56f4:	0c3f      	lsrs	r7, r7, #16
    56f6:	4688      	mov	r8, r1
    56f8:	0400      	lsls	r0, r0, #16
    56fa:	19c0      	adds	r0, r0, r7
    56fc:	4480      	add	r8, r0
    56fe:	4641      	mov	r1, r8
    5700:	9104      	str	r1, [sp, #16]
    5702:	4659      	mov	r1, fp
    5704:	0c0f      	lsrs	r7, r1, #16
    5706:	0409      	lsls	r1, r1, #16
    5708:	0c09      	lsrs	r1, r1, #16
    570a:	4688      	mov	r8, r1
    570c:	4359      	muls	r1, r3
    570e:	468a      	mov	sl, r1
    5710:	0039      	movs	r1, r7
    5712:	4351      	muls	r1, r2
    5714:	4689      	mov	r9, r1
    5716:	4641      	mov	r1, r8
    5718:	434a      	muls	r2, r1
    571a:	4651      	mov	r1, sl
    571c:	0c09      	lsrs	r1, r1, #16
    571e:	468b      	mov	fp, r1
    5720:	437b      	muls	r3, r7
    5722:	18d2      	adds	r2, r2, r3
    5724:	445a      	add	r2, fp
    5726:	4293      	cmp	r3, r2
    5728:	d903      	bls.n	5732 <__aeabi_dmul+0x2c6>
    572a:	2380      	movs	r3, #128	; 0x80
    572c:	025b      	lsls	r3, r3, #9
    572e:	469b      	mov	fp, r3
    5730:	44d9      	add	r9, fp
    5732:	4651      	mov	r1, sl
    5734:	0409      	lsls	r1, r1, #16
    5736:	0c09      	lsrs	r1, r1, #16
    5738:	468a      	mov	sl, r1
    573a:	4641      	mov	r1, r8
    573c:	4361      	muls	r1, r4
    573e:	437c      	muls	r4, r7
    5740:	0c13      	lsrs	r3, r2, #16
    5742:	0412      	lsls	r2, r2, #16
    5744:	444b      	add	r3, r9
    5746:	4452      	add	r2, sl
    5748:	46a1      	mov	r9, r4
    574a:	468a      	mov	sl, r1
    574c:	003c      	movs	r4, r7
    574e:	4641      	mov	r1, r8
    5750:	436c      	muls	r4, r5
    5752:	434d      	muls	r5, r1
    5754:	4651      	mov	r1, sl
    5756:	444d      	add	r5, r9
    5758:	0c0f      	lsrs	r7, r1, #16
    575a:	197d      	adds	r5, r7, r5
    575c:	45a9      	cmp	r9, r5
    575e:	d903      	bls.n	5768 <__aeabi_dmul+0x2fc>
    5760:	2180      	movs	r1, #128	; 0x80
    5762:	0249      	lsls	r1, r1, #9
    5764:	4688      	mov	r8, r1
    5766:	4444      	add	r4, r8
    5768:	9f04      	ldr	r7, [sp, #16]
    576a:	9903      	ldr	r1, [sp, #12]
    576c:	46b8      	mov	r8, r7
    576e:	4441      	add	r1, r8
    5770:	468b      	mov	fp, r1
    5772:	4583      	cmp	fp, r0
    5774:	4180      	sbcs	r0, r0
    5776:	4241      	negs	r1, r0
    5778:	4688      	mov	r8, r1
    577a:	4651      	mov	r1, sl
    577c:	0408      	lsls	r0, r1, #16
    577e:	042f      	lsls	r7, r5, #16
    5780:	0c00      	lsrs	r0, r0, #16
    5782:	183f      	adds	r7, r7, r0
    5784:	4658      	mov	r0, fp
    5786:	9902      	ldr	r1, [sp, #8]
    5788:	1810      	adds	r0, r2, r0
    578a:	4689      	mov	r9, r1
    578c:	4290      	cmp	r0, r2
    578e:	4192      	sbcs	r2, r2
    5790:	444f      	add	r7, r9
    5792:	46ba      	mov	sl, r7
    5794:	4252      	negs	r2, r2
    5796:	4699      	mov	r9, r3
    5798:	4693      	mov	fp, r2
    579a:	44c2      	add	sl, r8
    579c:	44d1      	add	r9, sl
    579e:	44cb      	add	fp, r9
    57a0:	428f      	cmp	r7, r1
    57a2:	41bf      	sbcs	r7, r7
    57a4:	45c2      	cmp	sl, r8
    57a6:	4189      	sbcs	r1, r1
    57a8:	4599      	cmp	r9, r3
    57aa:	419b      	sbcs	r3, r3
    57ac:	4593      	cmp	fp, r2
    57ae:	4192      	sbcs	r2, r2
    57b0:	427f      	negs	r7, r7
    57b2:	4249      	negs	r1, r1
    57b4:	0c2d      	lsrs	r5, r5, #16
    57b6:	4252      	negs	r2, r2
    57b8:	430f      	orrs	r7, r1
    57ba:	425b      	negs	r3, r3
    57bc:	4313      	orrs	r3, r2
    57be:	197f      	adds	r7, r7, r5
    57c0:	18ff      	adds	r7, r7, r3
    57c2:	465b      	mov	r3, fp
    57c4:	193c      	adds	r4, r7, r4
    57c6:	0ddb      	lsrs	r3, r3, #23
    57c8:	9a05      	ldr	r2, [sp, #20]
    57ca:	0264      	lsls	r4, r4, #9
    57cc:	431c      	orrs	r4, r3
    57ce:	0243      	lsls	r3, r0, #9
    57d0:	4313      	orrs	r3, r2
    57d2:	1e5d      	subs	r5, r3, #1
    57d4:	41ab      	sbcs	r3, r5
    57d6:	465a      	mov	r2, fp
    57d8:	0dc0      	lsrs	r0, r0, #23
    57da:	4303      	orrs	r3, r0
    57dc:	0252      	lsls	r2, r2, #9
    57de:	4313      	orrs	r3, r2
    57e0:	01e2      	lsls	r2, r4, #7
    57e2:	d556      	bpl.n	5892 <__aeabi_dmul+0x426>
    57e4:	2001      	movs	r0, #1
    57e6:	085a      	lsrs	r2, r3, #1
    57e8:	4003      	ands	r3, r0
    57ea:	4313      	orrs	r3, r2
    57ec:	07e2      	lsls	r2, r4, #31
    57ee:	4313      	orrs	r3, r2
    57f0:	0864      	lsrs	r4, r4, #1
    57f2:	485a      	ldr	r0, [pc, #360]	; (595c <__aeabi_dmul+0x4f0>)
    57f4:	4460      	add	r0, ip
    57f6:	2800      	cmp	r0, #0
    57f8:	dd4d      	ble.n	5896 <__aeabi_dmul+0x42a>
    57fa:	075a      	lsls	r2, r3, #29
    57fc:	d009      	beq.n	5812 <__aeabi_dmul+0x3a6>
    57fe:	220f      	movs	r2, #15
    5800:	401a      	ands	r2, r3
    5802:	2a04      	cmp	r2, #4
    5804:	d005      	beq.n	5812 <__aeabi_dmul+0x3a6>
    5806:	1d1a      	adds	r2, r3, #4
    5808:	429a      	cmp	r2, r3
    580a:	419b      	sbcs	r3, r3
    580c:	425b      	negs	r3, r3
    580e:	18e4      	adds	r4, r4, r3
    5810:	0013      	movs	r3, r2
    5812:	01e2      	lsls	r2, r4, #7
    5814:	d504      	bpl.n	5820 <__aeabi_dmul+0x3b4>
    5816:	2080      	movs	r0, #128	; 0x80
    5818:	4a51      	ldr	r2, [pc, #324]	; (5960 <__aeabi_dmul+0x4f4>)
    581a:	00c0      	lsls	r0, r0, #3
    581c:	4014      	ands	r4, r2
    581e:	4460      	add	r0, ip
    5820:	4a50      	ldr	r2, [pc, #320]	; (5964 <__aeabi_dmul+0x4f8>)
    5822:	4290      	cmp	r0, r2
    5824:	dd00      	ble.n	5828 <__aeabi_dmul+0x3bc>
    5826:	e6e3      	b.n	55f0 <__aeabi_dmul+0x184>
    5828:	2501      	movs	r5, #1
    582a:	08db      	lsrs	r3, r3, #3
    582c:	0762      	lsls	r2, r4, #29
    582e:	431a      	orrs	r2, r3
    5830:	0264      	lsls	r4, r4, #9
    5832:	9b01      	ldr	r3, [sp, #4]
    5834:	4691      	mov	r9, r2
    5836:	0b22      	lsrs	r2, r4, #12
    5838:	0544      	lsls	r4, r0, #21
    583a:	0d64      	lsrs	r4, r4, #21
    583c:	401d      	ands	r5, r3
    583e:	e67c      	b.n	553a <__aeabi_dmul+0xce>
    5840:	2280      	movs	r2, #128	; 0x80
    5842:	4659      	mov	r1, fp
    5844:	0312      	lsls	r2, r2, #12
    5846:	4211      	tst	r1, r2
    5848:	d008      	beq.n	585c <__aeabi_dmul+0x3f0>
    584a:	4214      	tst	r4, r2
    584c:	d106      	bne.n	585c <__aeabi_dmul+0x3f0>
    584e:	4322      	orrs	r2, r4
    5850:	0312      	lsls	r2, r2, #12
    5852:	0b12      	lsrs	r2, r2, #12
    5854:	4645      	mov	r5, r8
    5856:	4699      	mov	r9, r3
    5858:	4c43      	ldr	r4, [pc, #268]	; (5968 <__aeabi_dmul+0x4fc>)
    585a:	e66e      	b.n	553a <__aeabi_dmul+0xce>
    585c:	465b      	mov	r3, fp
    585e:	431a      	orrs	r2, r3
    5860:	0312      	lsls	r2, r2, #12
    5862:	0b12      	lsrs	r2, r2, #12
    5864:	4c40      	ldr	r4, [pc, #256]	; (5968 <__aeabi_dmul+0x4fc>)
    5866:	e668      	b.n	553a <__aeabi_dmul+0xce>
    5868:	0003      	movs	r3, r0
    586a:	4654      	mov	r4, sl
    586c:	3b28      	subs	r3, #40	; 0x28
    586e:	409c      	lsls	r4, r3
    5870:	2300      	movs	r3, #0
    5872:	e6b9      	b.n	55e8 <__aeabi_dmul+0x17c>
    5874:	f000 fc5e 	bl	6134 <__clzsi2>
    5878:	3020      	adds	r0, #32
    587a:	e6a6      	b.n	55ca <__aeabi_dmul+0x15e>
    587c:	0003      	movs	r3, r0
    587e:	3b28      	subs	r3, #40	; 0x28
    5880:	409f      	lsls	r7, r3
    5882:	2300      	movs	r3, #0
    5884:	46bb      	mov	fp, r7
    5886:	4699      	mov	r9, r3
    5888:	e68a      	b.n	55a0 <__aeabi_dmul+0x134>
    588a:	f000 fc53 	bl	6134 <__clzsi2>
    588e:	3020      	adds	r0, #32
    5890:	e674      	b.n	557c <__aeabi_dmul+0x110>
    5892:	46b4      	mov	ip, r6
    5894:	e7ad      	b.n	57f2 <__aeabi_dmul+0x386>
    5896:	2501      	movs	r5, #1
    5898:	1a2a      	subs	r2, r5, r0
    589a:	2a38      	cmp	r2, #56	; 0x38
    589c:	dd06      	ble.n	58ac <__aeabi_dmul+0x440>
    589e:	9b01      	ldr	r3, [sp, #4]
    58a0:	2400      	movs	r4, #0
    58a2:	401d      	ands	r5, r3
    58a4:	2300      	movs	r3, #0
    58a6:	2200      	movs	r2, #0
    58a8:	4699      	mov	r9, r3
    58aa:	e646      	b.n	553a <__aeabi_dmul+0xce>
    58ac:	2a1f      	cmp	r2, #31
    58ae:	dc21      	bgt.n	58f4 <__aeabi_dmul+0x488>
    58b0:	2520      	movs	r5, #32
    58b2:	0020      	movs	r0, r4
    58b4:	1aad      	subs	r5, r5, r2
    58b6:	001e      	movs	r6, r3
    58b8:	40ab      	lsls	r3, r5
    58ba:	40a8      	lsls	r0, r5
    58bc:	40d6      	lsrs	r6, r2
    58be:	1e5d      	subs	r5, r3, #1
    58c0:	41ab      	sbcs	r3, r5
    58c2:	4330      	orrs	r0, r6
    58c4:	4318      	orrs	r0, r3
    58c6:	40d4      	lsrs	r4, r2
    58c8:	0743      	lsls	r3, r0, #29
    58ca:	d009      	beq.n	58e0 <__aeabi_dmul+0x474>
    58cc:	230f      	movs	r3, #15
    58ce:	4003      	ands	r3, r0
    58d0:	2b04      	cmp	r3, #4
    58d2:	d005      	beq.n	58e0 <__aeabi_dmul+0x474>
    58d4:	0003      	movs	r3, r0
    58d6:	1d18      	adds	r0, r3, #4
    58d8:	4298      	cmp	r0, r3
    58da:	419b      	sbcs	r3, r3
    58dc:	425b      	negs	r3, r3
    58de:	18e4      	adds	r4, r4, r3
    58e0:	0223      	lsls	r3, r4, #8
    58e2:	d521      	bpl.n	5928 <__aeabi_dmul+0x4bc>
    58e4:	2501      	movs	r5, #1
    58e6:	9b01      	ldr	r3, [sp, #4]
    58e8:	2401      	movs	r4, #1
    58ea:	401d      	ands	r5, r3
    58ec:	2300      	movs	r3, #0
    58ee:	2200      	movs	r2, #0
    58f0:	4699      	mov	r9, r3
    58f2:	e622      	b.n	553a <__aeabi_dmul+0xce>
    58f4:	251f      	movs	r5, #31
    58f6:	0021      	movs	r1, r4
    58f8:	426d      	negs	r5, r5
    58fa:	1a28      	subs	r0, r5, r0
    58fc:	40c1      	lsrs	r1, r0
    58fe:	0008      	movs	r0, r1
    5900:	2a20      	cmp	r2, #32
    5902:	d01d      	beq.n	5940 <__aeabi_dmul+0x4d4>
    5904:	355f      	adds	r5, #95	; 0x5f
    5906:	1aaa      	subs	r2, r5, r2
    5908:	4094      	lsls	r4, r2
    590a:	4323      	orrs	r3, r4
    590c:	1e5c      	subs	r4, r3, #1
    590e:	41a3      	sbcs	r3, r4
    5910:	2507      	movs	r5, #7
    5912:	4303      	orrs	r3, r0
    5914:	401d      	ands	r5, r3
    5916:	2200      	movs	r2, #0
    5918:	2d00      	cmp	r5, #0
    591a:	d009      	beq.n	5930 <__aeabi_dmul+0x4c4>
    591c:	220f      	movs	r2, #15
    591e:	2400      	movs	r4, #0
    5920:	401a      	ands	r2, r3
    5922:	0018      	movs	r0, r3
    5924:	2a04      	cmp	r2, #4
    5926:	d1d6      	bne.n	58d6 <__aeabi_dmul+0x46a>
    5928:	0003      	movs	r3, r0
    592a:	0765      	lsls	r5, r4, #29
    592c:	0264      	lsls	r4, r4, #9
    592e:	0b22      	lsrs	r2, r4, #12
    5930:	08db      	lsrs	r3, r3, #3
    5932:	432b      	orrs	r3, r5
    5934:	2501      	movs	r5, #1
    5936:	4699      	mov	r9, r3
    5938:	9b01      	ldr	r3, [sp, #4]
    593a:	2400      	movs	r4, #0
    593c:	401d      	ands	r5, r3
    593e:	e5fc      	b.n	553a <__aeabi_dmul+0xce>
    5940:	2400      	movs	r4, #0
    5942:	e7e2      	b.n	590a <__aeabi_dmul+0x49e>
    5944:	2280      	movs	r2, #128	; 0x80
    5946:	2501      	movs	r5, #1
    5948:	0312      	lsls	r2, r2, #12
    594a:	4322      	orrs	r2, r4
    594c:	9901      	ldr	r1, [sp, #4]
    594e:	0312      	lsls	r2, r2, #12
    5950:	0b12      	lsrs	r2, r2, #12
    5952:	400d      	ands	r5, r1
    5954:	4699      	mov	r9, r3
    5956:	4c04      	ldr	r4, [pc, #16]	; (5968 <__aeabi_dmul+0x4fc>)
    5958:	e5ef      	b.n	553a <__aeabi_dmul+0xce>
    595a:	46c0      	nop			; (mov r8, r8)
    595c:	000003ff 	.word	0x000003ff
    5960:	feffffff 	.word	0xfeffffff
    5964:	000007fe 	.word	0x000007fe
    5968:	000007ff 	.word	0x000007ff

0000596c <__aeabi_dsub>:
    596c:	b5f0      	push	{r4, r5, r6, r7, lr}
    596e:	4646      	mov	r6, r8
    5970:	46d6      	mov	lr, sl
    5972:	464f      	mov	r7, r9
    5974:	030c      	lsls	r4, r1, #12
    5976:	b5c0      	push	{r6, r7, lr}
    5978:	0fcd      	lsrs	r5, r1, #31
    597a:	004e      	lsls	r6, r1, #1
    597c:	0a61      	lsrs	r1, r4, #9
    597e:	0f44      	lsrs	r4, r0, #29
    5980:	430c      	orrs	r4, r1
    5982:	00c1      	lsls	r1, r0, #3
    5984:	0058      	lsls	r0, r3, #1
    5986:	0d40      	lsrs	r0, r0, #21
    5988:	4684      	mov	ip, r0
    598a:	468a      	mov	sl, r1
    598c:	000f      	movs	r7, r1
    598e:	0319      	lsls	r1, r3, #12
    5990:	0f50      	lsrs	r0, r2, #29
    5992:	0a49      	lsrs	r1, r1, #9
    5994:	4301      	orrs	r1, r0
    5996:	48c6      	ldr	r0, [pc, #792]	; (5cb0 <__aeabi_dsub+0x344>)
    5998:	0d76      	lsrs	r6, r6, #21
    599a:	46a8      	mov	r8, r5
    599c:	0fdb      	lsrs	r3, r3, #31
    599e:	00d2      	lsls	r2, r2, #3
    59a0:	4584      	cmp	ip, r0
    59a2:	d100      	bne.n	59a6 <__aeabi_dsub+0x3a>
    59a4:	e0d8      	b.n	5b58 <__aeabi_dsub+0x1ec>
    59a6:	2001      	movs	r0, #1
    59a8:	4043      	eors	r3, r0
    59aa:	42ab      	cmp	r3, r5
    59ac:	d100      	bne.n	59b0 <__aeabi_dsub+0x44>
    59ae:	e0a6      	b.n	5afe <__aeabi_dsub+0x192>
    59b0:	4660      	mov	r0, ip
    59b2:	1a35      	subs	r5, r6, r0
    59b4:	2d00      	cmp	r5, #0
    59b6:	dc00      	bgt.n	59ba <__aeabi_dsub+0x4e>
    59b8:	e105      	b.n	5bc6 <__aeabi_dsub+0x25a>
    59ba:	2800      	cmp	r0, #0
    59bc:	d110      	bne.n	59e0 <__aeabi_dsub+0x74>
    59be:	000b      	movs	r3, r1
    59c0:	4313      	orrs	r3, r2
    59c2:	d100      	bne.n	59c6 <__aeabi_dsub+0x5a>
    59c4:	e0d7      	b.n	5b76 <__aeabi_dsub+0x20a>
    59c6:	1e6b      	subs	r3, r5, #1
    59c8:	2b00      	cmp	r3, #0
    59ca:	d000      	beq.n	59ce <__aeabi_dsub+0x62>
    59cc:	e14b      	b.n	5c66 <__aeabi_dsub+0x2fa>
    59ce:	4653      	mov	r3, sl
    59d0:	1a9f      	subs	r7, r3, r2
    59d2:	45ba      	cmp	sl, r7
    59d4:	4180      	sbcs	r0, r0
    59d6:	1a64      	subs	r4, r4, r1
    59d8:	4240      	negs	r0, r0
    59da:	1a24      	subs	r4, r4, r0
    59dc:	2601      	movs	r6, #1
    59de:	e01e      	b.n	5a1e <__aeabi_dsub+0xb2>
    59e0:	4bb3      	ldr	r3, [pc, #716]	; (5cb0 <__aeabi_dsub+0x344>)
    59e2:	429e      	cmp	r6, r3
    59e4:	d048      	beq.n	5a78 <__aeabi_dsub+0x10c>
    59e6:	2380      	movs	r3, #128	; 0x80
    59e8:	041b      	lsls	r3, r3, #16
    59ea:	4319      	orrs	r1, r3
    59ec:	2d38      	cmp	r5, #56	; 0x38
    59ee:	dd00      	ble.n	59f2 <__aeabi_dsub+0x86>
    59f0:	e119      	b.n	5c26 <__aeabi_dsub+0x2ba>
    59f2:	2d1f      	cmp	r5, #31
    59f4:	dd00      	ble.n	59f8 <__aeabi_dsub+0x8c>
    59f6:	e14c      	b.n	5c92 <__aeabi_dsub+0x326>
    59f8:	2320      	movs	r3, #32
    59fa:	000f      	movs	r7, r1
    59fc:	1b5b      	subs	r3, r3, r5
    59fe:	0010      	movs	r0, r2
    5a00:	409a      	lsls	r2, r3
    5a02:	409f      	lsls	r7, r3
    5a04:	40e8      	lsrs	r0, r5
    5a06:	1e53      	subs	r3, r2, #1
    5a08:	419a      	sbcs	r2, r3
    5a0a:	40e9      	lsrs	r1, r5
    5a0c:	4307      	orrs	r7, r0
    5a0e:	4317      	orrs	r7, r2
    5a10:	4653      	mov	r3, sl
    5a12:	1bdf      	subs	r7, r3, r7
    5a14:	1a61      	subs	r1, r4, r1
    5a16:	45ba      	cmp	sl, r7
    5a18:	41a4      	sbcs	r4, r4
    5a1a:	4264      	negs	r4, r4
    5a1c:	1b0c      	subs	r4, r1, r4
    5a1e:	0223      	lsls	r3, r4, #8
    5a20:	d400      	bmi.n	5a24 <__aeabi_dsub+0xb8>
    5a22:	e0c5      	b.n	5bb0 <__aeabi_dsub+0x244>
    5a24:	0264      	lsls	r4, r4, #9
    5a26:	0a65      	lsrs	r5, r4, #9
    5a28:	2d00      	cmp	r5, #0
    5a2a:	d100      	bne.n	5a2e <__aeabi_dsub+0xc2>
    5a2c:	e0f6      	b.n	5c1c <__aeabi_dsub+0x2b0>
    5a2e:	0028      	movs	r0, r5
    5a30:	f000 fb80 	bl	6134 <__clzsi2>
    5a34:	0003      	movs	r3, r0
    5a36:	3b08      	subs	r3, #8
    5a38:	2b1f      	cmp	r3, #31
    5a3a:	dd00      	ble.n	5a3e <__aeabi_dsub+0xd2>
    5a3c:	e0e9      	b.n	5c12 <__aeabi_dsub+0x2a6>
    5a3e:	2220      	movs	r2, #32
    5a40:	003c      	movs	r4, r7
    5a42:	1ad2      	subs	r2, r2, r3
    5a44:	409d      	lsls	r5, r3
    5a46:	40d4      	lsrs	r4, r2
    5a48:	409f      	lsls	r7, r3
    5a4a:	4325      	orrs	r5, r4
    5a4c:	429e      	cmp	r6, r3
    5a4e:	dd00      	ble.n	5a52 <__aeabi_dsub+0xe6>
    5a50:	e0db      	b.n	5c0a <__aeabi_dsub+0x29e>
    5a52:	1b9e      	subs	r6, r3, r6
    5a54:	1c73      	adds	r3, r6, #1
    5a56:	2b1f      	cmp	r3, #31
    5a58:	dd00      	ble.n	5a5c <__aeabi_dsub+0xf0>
    5a5a:	e10a      	b.n	5c72 <__aeabi_dsub+0x306>
    5a5c:	2220      	movs	r2, #32
    5a5e:	0038      	movs	r0, r7
    5a60:	1ad2      	subs	r2, r2, r3
    5a62:	0029      	movs	r1, r5
    5a64:	4097      	lsls	r7, r2
    5a66:	002c      	movs	r4, r5
    5a68:	4091      	lsls	r1, r2
    5a6a:	40d8      	lsrs	r0, r3
    5a6c:	1e7a      	subs	r2, r7, #1
    5a6e:	4197      	sbcs	r7, r2
    5a70:	40dc      	lsrs	r4, r3
    5a72:	2600      	movs	r6, #0
    5a74:	4301      	orrs	r1, r0
    5a76:	430f      	orrs	r7, r1
    5a78:	077b      	lsls	r3, r7, #29
    5a7a:	d009      	beq.n	5a90 <__aeabi_dsub+0x124>
    5a7c:	230f      	movs	r3, #15
    5a7e:	403b      	ands	r3, r7
    5a80:	2b04      	cmp	r3, #4
    5a82:	d005      	beq.n	5a90 <__aeabi_dsub+0x124>
    5a84:	1d3b      	adds	r3, r7, #4
    5a86:	42bb      	cmp	r3, r7
    5a88:	41bf      	sbcs	r7, r7
    5a8a:	427f      	negs	r7, r7
    5a8c:	19e4      	adds	r4, r4, r7
    5a8e:	001f      	movs	r7, r3
    5a90:	0223      	lsls	r3, r4, #8
    5a92:	d525      	bpl.n	5ae0 <__aeabi_dsub+0x174>
    5a94:	4b86      	ldr	r3, [pc, #536]	; (5cb0 <__aeabi_dsub+0x344>)
    5a96:	3601      	adds	r6, #1
    5a98:	429e      	cmp	r6, r3
    5a9a:	d100      	bne.n	5a9e <__aeabi_dsub+0x132>
    5a9c:	e0af      	b.n	5bfe <__aeabi_dsub+0x292>
    5a9e:	4b85      	ldr	r3, [pc, #532]	; (5cb4 <__aeabi_dsub+0x348>)
    5aa0:	2501      	movs	r5, #1
    5aa2:	401c      	ands	r4, r3
    5aa4:	4643      	mov	r3, r8
    5aa6:	0762      	lsls	r2, r4, #29
    5aa8:	08ff      	lsrs	r7, r7, #3
    5aaa:	0264      	lsls	r4, r4, #9
    5aac:	0576      	lsls	r6, r6, #21
    5aae:	4317      	orrs	r7, r2
    5ab0:	0b24      	lsrs	r4, r4, #12
    5ab2:	0d76      	lsrs	r6, r6, #21
    5ab4:	401d      	ands	r5, r3
    5ab6:	2100      	movs	r1, #0
    5ab8:	0324      	lsls	r4, r4, #12
    5aba:	0b23      	lsrs	r3, r4, #12
    5abc:	0d0c      	lsrs	r4, r1, #20
    5abe:	4a7e      	ldr	r2, [pc, #504]	; (5cb8 <__aeabi_dsub+0x34c>)
    5ac0:	0524      	lsls	r4, r4, #20
    5ac2:	431c      	orrs	r4, r3
    5ac4:	4014      	ands	r4, r2
    5ac6:	0533      	lsls	r3, r6, #20
    5ac8:	4323      	orrs	r3, r4
    5aca:	005b      	lsls	r3, r3, #1
    5acc:	07ed      	lsls	r5, r5, #31
    5ace:	085b      	lsrs	r3, r3, #1
    5ad0:	432b      	orrs	r3, r5
    5ad2:	0038      	movs	r0, r7
    5ad4:	0019      	movs	r1, r3
    5ad6:	bc1c      	pop	{r2, r3, r4}
    5ad8:	4690      	mov	r8, r2
    5ada:	4699      	mov	r9, r3
    5adc:	46a2      	mov	sl, r4
    5ade:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5ae0:	2501      	movs	r5, #1
    5ae2:	4643      	mov	r3, r8
    5ae4:	0762      	lsls	r2, r4, #29
    5ae6:	08ff      	lsrs	r7, r7, #3
    5ae8:	4317      	orrs	r7, r2
    5aea:	08e4      	lsrs	r4, r4, #3
    5aec:	401d      	ands	r5, r3
    5aee:	4b70      	ldr	r3, [pc, #448]	; (5cb0 <__aeabi_dsub+0x344>)
    5af0:	429e      	cmp	r6, r3
    5af2:	d036      	beq.n	5b62 <__aeabi_dsub+0x1f6>
    5af4:	0324      	lsls	r4, r4, #12
    5af6:	0576      	lsls	r6, r6, #21
    5af8:	0b24      	lsrs	r4, r4, #12
    5afa:	0d76      	lsrs	r6, r6, #21
    5afc:	e7db      	b.n	5ab6 <__aeabi_dsub+0x14a>
    5afe:	4663      	mov	r3, ip
    5b00:	1af3      	subs	r3, r6, r3
    5b02:	2b00      	cmp	r3, #0
    5b04:	dc00      	bgt.n	5b08 <__aeabi_dsub+0x19c>
    5b06:	e094      	b.n	5c32 <__aeabi_dsub+0x2c6>
    5b08:	4660      	mov	r0, ip
    5b0a:	2800      	cmp	r0, #0
    5b0c:	d035      	beq.n	5b7a <__aeabi_dsub+0x20e>
    5b0e:	4868      	ldr	r0, [pc, #416]	; (5cb0 <__aeabi_dsub+0x344>)
    5b10:	4286      	cmp	r6, r0
    5b12:	d0b1      	beq.n	5a78 <__aeabi_dsub+0x10c>
    5b14:	2780      	movs	r7, #128	; 0x80
    5b16:	043f      	lsls	r7, r7, #16
    5b18:	4339      	orrs	r1, r7
    5b1a:	2b38      	cmp	r3, #56	; 0x38
    5b1c:	dc00      	bgt.n	5b20 <__aeabi_dsub+0x1b4>
    5b1e:	e0fd      	b.n	5d1c <__aeabi_dsub+0x3b0>
    5b20:	430a      	orrs	r2, r1
    5b22:	0017      	movs	r7, r2
    5b24:	2100      	movs	r1, #0
    5b26:	1e7a      	subs	r2, r7, #1
    5b28:	4197      	sbcs	r7, r2
    5b2a:	4457      	add	r7, sl
    5b2c:	4557      	cmp	r7, sl
    5b2e:	4180      	sbcs	r0, r0
    5b30:	1909      	adds	r1, r1, r4
    5b32:	4244      	negs	r4, r0
    5b34:	190c      	adds	r4, r1, r4
    5b36:	0223      	lsls	r3, r4, #8
    5b38:	d53a      	bpl.n	5bb0 <__aeabi_dsub+0x244>
    5b3a:	4b5d      	ldr	r3, [pc, #372]	; (5cb0 <__aeabi_dsub+0x344>)
    5b3c:	3601      	adds	r6, #1
    5b3e:	429e      	cmp	r6, r3
    5b40:	d100      	bne.n	5b44 <__aeabi_dsub+0x1d8>
    5b42:	e14b      	b.n	5ddc <__aeabi_dsub+0x470>
    5b44:	2201      	movs	r2, #1
    5b46:	4b5b      	ldr	r3, [pc, #364]	; (5cb4 <__aeabi_dsub+0x348>)
    5b48:	401c      	ands	r4, r3
    5b4a:	087b      	lsrs	r3, r7, #1
    5b4c:	4017      	ands	r7, r2
    5b4e:	431f      	orrs	r7, r3
    5b50:	07e2      	lsls	r2, r4, #31
    5b52:	4317      	orrs	r7, r2
    5b54:	0864      	lsrs	r4, r4, #1
    5b56:	e78f      	b.n	5a78 <__aeabi_dsub+0x10c>
    5b58:	0008      	movs	r0, r1
    5b5a:	4310      	orrs	r0, r2
    5b5c:	d000      	beq.n	5b60 <__aeabi_dsub+0x1f4>
    5b5e:	e724      	b.n	59aa <__aeabi_dsub+0x3e>
    5b60:	e721      	b.n	59a6 <__aeabi_dsub+0x3a>
    5b62:	0023      	movs	r3, r4
    5b64:	433b      	orrs	r3, r7
    5b66:	d100      	bne.n	5b6a <__aeabi_dsub+0x1fe>
    5b68:	e1b9      	b.n	5ede <__aeabi_dsub+0x572>
    5b6a:	2280      	movs	r2, #128	; 0x80
    5b6c:	0312      	lsls	r2, r2, #12
    5b6e:	4314      	orrs	r4, r2
    5b70:	0324      	lsls	r4, r4, #12
    5b72:	0b24      	lsrs	r4, r4, #12
    5b74:	e79f      	b.n	5ab6 <__aeabi_dsub+0x14a>
    5b76:	002e      	movs	r6, r5
    5b78:	e77e      	b.n	5a78 <__aeabi_dsub+0x10c>
    5b7a:	0008      	movs	r0, r1
    5b7c:	4310      	orrs	r0, r2
    5b7e:	d100      	bne.n	5b82 <__aeabi_dsub+0x216>
    5b80:	e0ca      	b.n	5d18 <__aeabi_dsub+0x3ac>
    5b82:	1e58      	subs	r0, r3, #1
    5b84:	4684      	mov	ip, r0
    5b86:	2800      	cmp	r0, #0
    5b88:	d000      	beq.n	5b8c <__aeabi_dsub+0x220>
    5b8a:	e0e7      	b.n	5d5c <__aeabi_dsub+0x3f0>
    5b8c:	4452      	add	r2, sl
    5b8e:	4552      	cmp	r2, sl
    5b90:	4180      	sbcs	r0, r0
    5b92:	1864      	adds	r4, r4, r1
    5b94:	4240      	negs	r0, r0
    5b96:	1824      	adds	r4, r4, r0
    5b98:	0017      	movs	r7, r2
    5b9a:	2601      	movs	r6, #1
    5b9c:	0223      	lsls	r3, r4, #8
    5b9e:	d507      	bpl.n	5bb0 <__aeabi_dsub+0x244>
    5ba0:	2602      	movs	r6, #2
    5ba2:	e7cf      	b.n	5b44 <__aeabi_dsub+0x1d8>
    5ba4:	4664      	mov	r4, ip
    5ba6:	432c      	orrs	r4, r5
    5ba8:	d100      	bne.n	5bac <__aeabi_dsub+0x240>
    5baa:	e1b3      	b.n	5f14 <__aeabi_dsub+0x5a8>
    5bac:	002c      	movs	r4, r5
    5bae:	4667      	mov	r7, ip
    5bb0:	077b      	lsls	r3, r7, #29
    5bb2:	d000      	beq.n	5bb6 <__aeabi_dsub+0x24a>
    5bb4:	e762      	b.n	5a7c <__aeabi_dsub+0x110>
    5bb6:	0763      	lsls	r3, r4, #29
    5bb8:	08ff      	lsrs	r7, r7, #3
    5bba:	431f      	orrs	r7, r3
    5bbc:	2501      	movs	r5, #1
    5bbe:	4643      	mov	r3, r8
    5bc0:	08e4      	lsrs	r4, r4, #3
    5bc2:	401d      	ands	r5, r3
    5bc4:	e793      	b.n	5aee <__aeabi_dsub+0x182>
    5bc6:	2d00      	cmp	r5, #0
    5bc8:	d178      	bne.n	5cbc <__aeabi_dsub+0x350>
    5bca:	1c75      	adds	r5, r6, #1
    5bcc:	056d      	lsls	r5, r5, #21
    5bce:	0d6d      	lsrs	r5, r5, #21
    5bd0:	2d01      	cmp	r5, #1
    5bd2:	dc00      	bgt.n	5bd6 <__aeabi_dsub+0x26a>
    5bd4:	e0f2      	b.n	5dbc <__aeabi_dsub+0x450>
    5bd6:	4650      	mov	r0, sl
    5bd8:	1a80      	subs	r0, r0, r2
    5bda:	4582      	cmp	sl, r0
    5bdc:	41bf      	sbcs	r7, r7
    5bde:	1a65      	subs	r5, r4, r1
    5be0:	427f      	negs	r7, r7
    5be2:	1bed      	subs	r5, r5, r7
    5be4:	4684      	mov	ip, r0
    5be6:	0228      	lsls	r0, r5, #8
    5be8:	d400      	bmi.n	5bec <__aeabi_dsub+0x280>
    5bea:	e08c      	b.n	5d06 <__aeabi_dsub+0x39a>
    5bec:	4650      	mov	r0, sl
    5bee:	1a17      	subs	r7, r2, r0
    5bf0:	42ba      	cmp	r2, r7
    5bf2:	4192      	sbcs	r2, r2
    5bf4:	1b0c      	subs	r4, r1, r4
    5bf6:	4255      	negs	r5, r2
    5bf8:	1b65      	subs	r5, r4, r5
    5bfa:	4698      	mov	r8, r3
    5bfc:	e714      	b.n	5a28 <__aeabi_dsub+0xbc>
    5bfe:	2501      	movs	r5, #1
    5c00:	4643      	mov	r3, r8
    5c02:	2400      	movs	r4, #0
    5c04:	401d      	ands	r5, r3
    5c06:	2700      	movs	r7, #0
    5c08:	e755      	b.n	5ab6 <__aeabi_dsub+0x14a>
    5c0a:	4c2a      	ldr	r4, [pc, #168]	; (5cb4 <__aeabi_dsub+0x348>)
    5c0c:	1af6      	subs	r6, r6, r3
    5c0e:	402c      	ands	r4, r5
    5c10:	e732      	b.n	5a78 <__aeabi_dsub+0x10c>
    5c12:	003d      	movs	r5, r7
    5c14:	3828      	subs	r0, #40	; 0x28
    5c16:	4085      	lsls	r5, r0
    5c18:	2700      	movs	r7, #0
    5c1a:	e717      	b.n	5a4c <__aeabi_dsub+0xe0>
    5c1c:	0038      	movs	r0, r7
    5c1e:	f000 fa89 	bl	6134 <__clzsi2>
    5c22:	3020      	adds	r0, #32
    5c24:	e706      	b.n	5a34 <__aeabi_dsub+0xc8>
    5c26:	430a      	orrs	r2, r1
    5c28:	0017      	movs	r7, r2
    5c2a:	2100      	movs	r1, #0
    5c2c:	1e7a      	subs	r2, r7, #1
    5c2e:	4197      	sbcs	r7, r2
    5c30:	e6ee      	b.n	5a10 <__aeabi_dsub+0xa4>
    5c32:	2b00      	cmp	r3, #0
    5c34:	d000      	beq.n	5c38 <__aeabi_dsub+0x2cc>
    5c36:	e0e5      	b.n	5e04 <__aeabi_dsub+0x498>
    5c38:	1c73      	adds	r3, r6, #1
    5c3a:	469c      	mov	ip, r3
    5c3c:	055b      	lsls	r3, r3, #21
    5c3e:	0d5b      	lsrs	r3, r3, #21
    5c40:	2b01      	cmp	r3, #1
    5c42:	dc00      	bgt.n	5c46 <__aeabi_dsub+0x2da>
    5c44:	e09f      	b.n	5d86 <__aeabi_dsub+0x41a>
    5c46:	4b1a      	ldr	r3, [pc, #104]	; (5cb0 <__aeabi_dsub+0x344>)
    5c48:	459c      	cmp	ip, r3
    5c4a:	d100      	bne.n	5c4e <__aeabi_dsub+0x2e2>
    5c4c:	e0c5      	b.n	5dda <__aeabi_dsub+0x46e>
    5c4e:	4452      	add	r2, sl
    5c50:	4552      	cmp	r2, sl
    5c52:	4180      	sbcs	r0, r0
    5c54:	1864      	adds	r4, r4, r1
    5c56:	4240      	negs	r0, r0
    5c58:	1824      	adds	r4, r4, r0
    5c5a:	07e7      	lsls	r7, r4, #31
    5c5c:	0852      	lsrs	r2, r2, #1
    5c5e:	4317      	orrs	r7, r2
    5c60:	0864      	lsrs	r4, r4, #1
    5c62:	4666      	mov	r6, ip
    5c64:	e708      	b.n	5a78 <__aeabi_dsub+0x10c>
    5c66:	4812      	ldr	r0, [pc, #72]	; (5cb0 <__aeabi_dsub+0x344>)
    5c68:	4285      	cmp	r5, r0
    5c6a:	d100      	bne.n	5c6e <__aeabi_dsub+0x302>
    5c6c:	e085      	b.n	5d7a <__aeabi_dsub+0x40e>
    5c6e:	001d      	movs	r5, r3
    5c70:	e6bc      	b.n	59ec <__aeabi_dsub+0x80>
    5c72:	0029      	movs	r1, r5
    5c74:	3e1f      	subs	r6, #31
    5c76:	40f1      	lsrs	r1, r6
    5c78:	2b20      	cmp	r3, #32
    5c7a:	d100      	bne.n	5c7e <__aeabi_dsub+0x312>
    5c7c:	e07f      	b.n	5d7e <__aeabi_dsub+0x412>
    5c7e:	2240      	movs	r2, #64	; 0x40
    5c80:	1ad3      	subs	r3, r2, r3
    5c82:	409d      	lsls	r5, r3
    5c84:	432f      	orrs	r7, r5
    5c86:	1e7d      	subs	r5, r7, #1
    5c88:	41af      	sbcs	r7, r5
    5c8a:	2400      	movs	r4, #0
    5c8c:	430f      	orrs	r7, r1
    5c8e:	2600      	movs	r6, #0
    5c90:	e78e      	b.n	5bb0 <__aeabi_dsub+0x244>
    5c92:	002b      	movs	r3, r5
    5c94:	000f      	movs	r7, r1
    5c96:	3b20      	subs	r3, #32
    5c98:	40df      	lsrs	r7, r3
    5c9a:	2d20      	cmp	r5, #32
    5c9c:	d071      	beq.n	5d82 <__aeabi_dsub+0x416>
    5c9e:	2340      	movs	r3, #64	; 0x40
    5ca0:	1b5d      	subs	r5, r3, r5
    5ca2:	40a9      	lsls	r1, r5
    5ca4:	430a      	orrs	r2, r1
    5ca6:	1e51      	subs	r1, r2, #1
    5ca8:	418a      	sbcs	r2, r1
    5caa:	2100      	movs	r1, #0
    5cac:	4317      	orrs	r7, r2
    5cae:	e6af      	b.n	5a10 <__aeabi_dsub+0xa4>
    5cb0:	000007ff 	.word	0x000007ff
    5cb4:	ff7fffff 	.word	0xff7fffff
    5cb8:	800fffff 	.word	0x800fffff
    5cbc:	2e00      	cmp	r6, #0
    5cbe:	d03e      	beq.n	5d3e <__aeabi_dsub+0x3d2>
    5cc0:	4eb3      	ldr	r6, [pc, #716]	; (5f90 <__aeabi_dsub+0x624>)
    5cc2:	45b4      	cmp	ip, r6
    5cc4:	d045      	beq.n	5d52 <__aeabi_dsub+0x3e6>
    5cc6:	2680      	movs	r6, #128	; 0x80
    5cc8:	0436      	lsls	r6, r6, #16
    5cca:	426d      	negs	r5, r5
    5ccc:	4334      	orrs	r4, r6
    5cce:	2d38      	cmp	r5, #56	; 0x38
    5cd0:	dd00      	ble.n	5cd4 <__aeabi_dsub+0x368>
    5cd2:	e0a8      	b.n	5e26 <__aeabi_dsub+0x4ba>
    5cd4:	2d1f      	cmp	r5, #31
    5cd6:	dd00      	ble.n	5cda <__aeabi_dsub+0x36e>
    5cd8:	e11f      	b.n	5f1a <__aeabi_dsub+0x5ae>
    5cda:	2620      	movs	r6, #32
    5cdc:	0027      	movs	r7, r4
    5cde:	4650      	mov	r0, sl
    5ce0:	1b76      	subs	r6, r6, r5
    5ce2:	40b7      	lsls	r7, r6
    5ce4:	40e8      	lsrs	r0, r5
    5ce6:	4307      	orrs	r7, r0
    5ce8:	4650      	mov	r0, sl
    5cea:	40b0      	lsls	r0, r6
    5cec:	1e46      	subs	r6, r0, #1
    5cee:	41b0      	sbcs	r0, r6
    5cf0:	40ec      	lsrs	r4, r5
    5cf2:	4338      	orrs	r0, r7
    5cf4:	1a17      	subs	r7, r2, r0
    5cf6:	42ba      	cmp	r2, r7
    5cf8:	4192      	sbcs	r2, r2
    5cfa:	1b0c      	subs	r4, r1, r4
    5cfc:	4252      	negs	r2, r2
    5cfe:	1aa4      	subs	r4, r4, r2
    5d00:	4666      	mov	r6, ip
    5d02:	4698      	mov	r8, r3
    5d04:	e68b      	b.n	5a1e <__aeabi_dsub+0xb2>
    5d06:	4664      	mov	r4, ip
    5d08:	4667      	mov	r7, ip
    5d0a:	432c      	orrs	r4, r5
    5d0c:	d000      	beq.n	5d10 <__aeabi_dsub+0x3a4>
    5d0e:	e68b      	b.n	5a28 <__aeabi_dsub+0xbc>
    5d10:	2500      	movs	r5, #0
    5d12:	2600      	movs	r6, #0
    5d14:	2700      	movs	r7, #0
    5d16:	e6ea      	b.n	5aee <__aeabi_dsub+0x182>
    5d18:	001e      	movs	r6, r3
    5d1a:	e6ad      	b.n	5a78 <__aeabi_dsub+0x10c>
    5d1c:	2b1f      	cmp	r3, #31
    5d1e:	dc60      	bgt.n	5de2 <__aeabi_dsub+0x476>
    5d20:	2720      	movs	r7, #32
    5d22:	1af8      	subs	r0, r7, r3
    5d24:	000f      	movs	r7, r1
    5d26:	4684      	mov	ip, r0
    5d28:	4087      	lsls	r7, r0
    5d2a:	0010      	movs	r0, r2
    5d2c:	40d8      	lsrs	r0, r3
    5d2e:	4307      	orrs	r7, r0
    5d30:	4660      	mov	r0, ip
    5d32:	4082      	lsls	r2, r0
    5d34:	1e50      	subs	r0, r2, #1
    5d36:	4182      	sbcs	r2, r0
    5d38:	40d9      	lsrs	r1, r3
    5d3a:	4317      	orrs	r7, r2
    5d3c:	e6f5      	b.n	5b2a <__aeabi_dsub+0x1be>
    5d3e:	0026      	movs	r6, r4
    5d40:	4650      	mov	r0, sl
    5d42:	4306      	orrs	r6, r0
    5d44:	d005      	beq.n	5d52 <__aeabi_dsub+0x3e6>
    5d46:	43ed      	mvns	r5, r5
    5d48:	2d00      	cmp	r5, #0
    5d4a:	d0d3      	beq.n	5cf4 <__aeabi_dsub+0x388>
    5d4c:	4e90      	ldr	r6, [pc, #576]	; (5f90 <__aeabi_dsub+0x624>)
    5d4e:	45b4      	cmp	ip, r6
    5d50:	d1bd      	bne.n	5cce <__aeabi_dsub+0x362>
    5d52:	000c      	movs	r4, r1
    5d54:	0017      	movs	r7, r2
    5d56:	4666      	mov	r6, ip
    5d58:	4698      	mov	r8, r3
    5d5a:	e68d      	b.n	5a78 <__aeabi_dsub+0x10c>
    5d5c:	488c      	ldr	r0, [pc, #560]	; (5f90 <__aeabi_dsub+0x624>)
    5d5e:	4283      	cmp	r3, r0
    5d60:	d00b      	beq.n	5d7a <__aeabi_dsub+0x40e>
    5d62:	4663      	mov	r3, ip
    5d64:	e6d9      	b.n	5b1a <__aeabi_dsub+0x1ae>
    5d66:	2d00      	cmp	r5, #0
    5d68:	d000      	beq.n	5d6c <__aeabi_dsub+0x400>
    5d6a:	e096      	b.n	5e9a <__aeabi_dsub+0x52e>
    5d6c:	0008      	movs	r0, r1
    5d6e:	4310      	orrs	r0, r2
    5d70:	d100      	bne.n	5d74 <__aeabi_dsub+0x408>
    5d72:	e0e2      	b.n	5f3a <__aeabi_dsub+0x5ce>
    5d74:	000c      	movs	r4, r1
    5d76:	0017      	movs	r7, r2
    5d78:	4698      	mov	r8, r3
    5d7a:	4e85      	ldr	r6, [pc, #532]	; (5f90 <__aeabi_dsub+0x624>)
    5d7c:	e67c      	b.n	5a78 <__aeabi_dsub+0x10c>
    5d7e:	2500      	movs	r5, #0
    5d80:	e780      	b.n	5c84 <__aeabi_dsub+0x318>
    5d82:	2100      	movs	r1, #0
    5d84:	e78e      	b.n	5ca4 <__aeabi_dsub+0x338>
    5d86:	0023      	movs	r3, r4
    5d88:	4650      	mov	r0, sl
    5d8a:	4303      	orrs	r3, r0
    5d8c:	2e00      	cmp	r6, #0
    5d8e:	d000      	beq.n	5d92 <__aeabi_dsub+0x426>
    5d90:	e0a8      	b.n	5ee4 <__aeabi_dsub+0x578>
    5d92:	2b00      	cmp	r3, #0
    5d94:	d100      	bne.n	5d98 <__aeabi_dsub+0x42c>
    5d96:	e0de      	b.n	5f56 <__aeabi_dsub+0x5ea>
    5d98:	000b      	movs	r3, r1
    5d9a:	4313      	orrs	r3, r2
    5d9c:	d100      	bne.n	5da0 <__aeabi_dsub+0x434>
    5d9e:	e66b      	b.n	5a78 <__aeabi_dsub+0x10c>
    5da0:	4452      	add	r2, sl
    5da2:	4552      	cmp	r2, sl
    5da4:	4180      	sbcs	r0, r0
    5da6:	1864      	adds	r4, r4, r1
    5da8:	4240      	negs	r0, r0
    5daa:	1824      	adds	r4, r4, r0
    5dac:	0017      	movs	r7, r2
    5dae:	0223      	lsls	r3, r4, #8
    5db0:	d400      	bmi.n	5db4 <__aeabi_dsub+0x448>
    5db2:	e6fd      	b.n	5bb0 <__aeabi_dsub+0x244>
    5db4:	4b77      	ldr	r3, [pc, #476]	; (5f94 <__aeabi_dsub+0x628>)
    5db6:	4666      	mov	r6, ip
    5db8:	401c      	ands	r4, r3
    5dba:	e65d      	b.n	5a78 <__aeabi_dsub+0x10c>
    5dbc:	0025      	movs	r5, r4
    5dbe:	4650      	mov	r0, sl
    5dc0:	4305      	orrs	r5, r0
    5dc2:	2e00      	cmp	r6, #0
    5dc4:	d1cf      	bne.n	5d66 <__aeabi_dsub+0x3fa>
    5dc6:	2d00      	cmp	r5, #0
    5dc8:	d14f      	bne.n	5e6a <__aeabi_dsub+0x4fe>
    5dca:	000c      	movs	r4, r1
    5dcc:	4314      	orrs	r4, r2
    5dce:	d100      	bne.n	5dd2 <__aeabi_dsub+0x466>
    5dd0:	e0a0      	b.n	5f14 <__aeabi_dsub+0x5a8>
    5dd2:	000c      	movs	r4, r1
    5dd4:	0017      	movs	r7, r2
    5dd6:	4698      	mov	r8, r3
    5dd8:	e64e      	b.n	5a78 <__aeabi_dsub+0x10c>
    5dda:	4666      	mov	r6, ip
    5ddc:	2400      	movs	r4, #0
    5dde:	2700      	movs	r7, #0
    5de0:	e685      	b.n	5aee <__aeabi_dsub+0x182>
    5de2:	001f      	movs	r7, r3
    5de4:	0008      	movs	r0, r1
    5de6:	3f20      	subs	r7, #32
    5de8:	40f8      	lsrs	r0, r7
    5dea:	0007      	movs	r7, r0
    5dec:	2b20      	cmp	r3, #32
    5dee:	d100      	bne.n	5df2 <__aeabi_dsub+0x486>
    5df0:	e08e      	b.n	5f10 <__aeabi_dsub+0x5a4>
    5df2:	2040      	movs	r0, #64	; 0x40
    5df4:	1ac3      	subs	r3, r0, r3
    5df6:	4099      	lsls	r1, r3
    5df8:	430a      	orrs	r2, r1
    5dfa:	1e51      	subs	r1, r2, #1
    5dfc:	418a      	sbcs	r2, r1
    5dfe:	2100      	movs	r1, #0
    5e00:	4317      	orrs	r7, r2
    5e02:	e692      	b.n	5b2a <__aeabi_dsub+0x1be>
    5e04:	2e00      	cmp	r6, #0
    5e06:	d114      	bne.n	5e32 <__aeabi_dsub+0x4c6>
    5e08:	0026      	movs	r6, r4
    5e0a:	4650      	mov	r0, sl
    5e0c:	4306      	orrs	r6, r0
    5e0e:	d062      	beq.n	5ed6 <__aeabi_dsub+0x56a>
    5e10:	43db      	mvns	r3, r3
    5e12:	2b00      	cmp	r3, #0
    5e14:	d15c      	bne.n	5ed0 <__aeabi_dsub+0x564>
    5e16:	1887      	adds	r7, r0, r2
    5e18:	4297      	cmp	r7, r2
    5e1a:	4192      	sbcs	r2, r2
    5e1c:	1864      	adds	r4, r4, r1
    5e1e:	4252      	negs	r2, r2
    5e20:	18a4      	adds	r4, r4, r2
    5e22:	4666      	mov	r6, ip
    5e24:	e687      	b.n	5b36 <__aeabi_dsub+0x1ca>
    5e26:	4650      	mov	r0, sl
    5e28:	4320      	orrs	r0, r4
    5e2a:	1e44      	subs	r4, r0, #1
    5e2c:	41a0      	sbcs	r0, r4
    5e2e:	2400      	movs	r4, #0
    5e30:	e760      	b.n	5cf4 <__aeabi_dsub+0x388>
    5e32:	4e57      	ldr	r6, [pc, #348]	; (5f90 <__aeabi_dsub+0x624>)
    5e34:	45b4      	cmp	ip, r6
    5e36:	d04e      	beq.n	5ed6 <__aeabi_dsub+0x56a>
    5e38:	2680      	movs	r6, #128	; 0x80
    5e3a:	0436      	lsls	r6, r6, #16
    5e3c:	425b      	negs	r3, r3
    5e3e:	4334      	orrs	r4, r6
    5e40:	2b38      	cmp	r3, #56	; 0x38
    5e42:	dd00      	ble.n	5e46 <__aeabi_dsub+0x4da>
    5e44:	e07f      	b.n	5f46 <__aeabi_dsub+0x5da>
    5e46:	2b1f      	cmp	r3, #31
    5e48:	dd00      	ble.n	5e4c <__aeabi_dsub+0x4e0>
    5e4a:	e08b      	b.n	5f64 <__aeabi_dsub+0x5f8>
    5e4c:	2620      	movs	r6, #32
    5e4e:	0027      	movs	r7, r4
    5e50:	4650      	mov	r0, sl
    5e52:	1af6      	subs	r6, r6, r3
    5e54:	40b7      	lsls	r7, r6
    5e56:	40d8      	lsrs	r0, r3
    5e58:	4307      	orrs	r7, r0
    5e5a:	4650      	mov	r0, sl
    5e5c:	40b0      	lsls	r0, r6
    5e5e:	1e46      	subs	r6, r0, #1
    5e60:	41b0      	sbcs	r0, r6
    5e62:	4307      	orrs	r7, r0
    5e64:	40dc      	lsrs	r4, r3
    5e66:	18bf      	adds	r7, r7, r2
    5e68:	e7d6      	b.n	5e18 <__aeabi_dsub+0x4ac>
    5e6a:	000d      	movs	r5, r1
    5e6c:	4315      	orrs	r5, r2
    5e6e:	d100      	bne.n	5e72 <__aeabi_dsub+0x506>
    5e70:	e602      	b.n	5a78 <__aeabi_dsub+0x10c>
    5e72:	4650      	mov	r0, sl
    5e74:	1a80      	subs	r0, r0, r2
    5e76:	4582      	cmp	sl, r0
    5e78:	41bf      	sbcs	r7, r7
    5e7a:	1a65      	subs	r5, r4, r1
    5e7c:	427f      	negs	r7, r7
    5e7e:	1bed      	subs	r5, r5, r7
    5e80:	4684      	mov	ip, r0
    5e82:	0228      	lsls	r0, r5, #8
    5e84:	d400      	bmi.n	5e88 <__aeabi_dsub+0x51c>
    5e86:	e68d      	b.n	5ba4 <__aeabi_dsub+0x238>
    5e88:	4650      	mov	r0, sl
    5e8a:	1a17      	subs	r7, r2, r0
    5e8c:	42ba      	cmp	r2, r7
    5e8e:	4192      	sbcs	r2, r2
    5e90:	1b0c      	subs	r4, r1, r4
    5e92:	4252      	negs	r2, r2
    5e94:	1aa4      	subs	r4, r4, r2
    5e96:	4698      	mov	r8, r3
    5e98:	e5ee      	b.n	5a78 <__aeabi_dsub+0x10c>
    5e9a:	000d      	movs	r5, r1
    5e9c:	4315      	orrs	r5, r2
    5e9e:	d100      	bne.n	5ea2 <__aeabi_dsub+0x536>
    5ea0:	e76b      	b.n	5d7a <__aeabi_dsub+0x40e>
    5ea2:	4650      	mov	r0, sl
    5ea4:	0767      	lsls	r7, r4, #29
    5ea6:	08c0      	lsrs	r0, r0, #3
    5ea8:	4307      	orrs	r7, r0
    5eaa:	2080      	movs	r0, #128	; 0x80
    5eac:	08e4      	lsrs	r4, r4, #3
    5eae:	0300      	lsls	r0, r0, #12
    5eb0:	4204      	tst	r4, r0
    5eb2:	d007      	beq.n	5ec4 <__aeabi_dsub+0x558>
    5eb4:	08cd      	lsrs	r5, r1, #3
    5eb6:	4205      	tst	r5, r0
    5eb8:	d104      	bne.n	5ec4 <__aeabi_dsub+0x558>
    5eba:	002c      	movs	r4, r5
    5ebc:	4698      	mov	r8, r3
    5ebe:	08d7      	lsrs	r7, r2, #3
    5ec0:	0749      	lsls	r1, r1, #29
    5ec2:	430f      	orrs	r7, r1
    5ec4:	0f7b      	lsrs	r3, r7, #29
    5ec6:	00e4      	lsls	r4, r4, #3
    5ec8:	431c      	orrs	r4, r3
    5eca:	00ff      	lsls	r7, r7, #3
    5ecc:	4e30      	ldr	r6, [pc, #192]	; (5f90 <__aeabi_dsub+0x624>)
    5ece:	e5d3      	b.n	5a78 <__aeabi_dsub+0x10c>
    5ed0:	4e2f      	ldr	r6, [pc, #188]	; (5f90 <__aeabi_dsub+0x624>)
    5ed2:	45b4      	cmp	ip, r6
    5ed4:	d1b4      	bne.n	5e40 <__aeabi_dsub+0x4d4>
    5ed6:	000c      	movs	r4, r1
    5ed8:	0017      	movs	r7, r2
    5eda:	4666      	mov	r6, ip
    5edc:	e5cc      	b.n	5a78 <__aeabi_dsub+0x10c>
    5ede:	2700      	movs	r7, #0
    5ee0:	2400      	movs	r4, #0
    5ee2:	e5e8      	b.n	5ab6 <__aeabi_dsub+0x14a>
    5ee4:	2b00      	cmp	r3, #0
    5ee6:	d039      	beq.n	5f5c <__aeabi_dsub+0x5f0>
    5ee8:	000b      	movs	r3, r1
    5eea:	4313      	orrs	r3, r2
    5eec:	d100      	bne.n	5ef0 <__aeabi_dsub+0x584>
    5eee:	e744      	b.n	5d7a <__aeabi_dsub+0x40e>
    5ef0:	08c0      	lsrs	r0, r0, #3
    5ef2:	0767      	lsls	r7, r4, #29
    5ef4:	4307      	orrs	r7, r0
    5ef6:	2080      	movs	r0, #128	; 0x80
    5ef8:	08e4      	lsrs	r4, r4, #3
    5efa:	0300      	lsls	r0, r0, #12
    5efc:	4204      	tst	r4, r0
    5efe:	d0e1      	beq.n	5ec4 <__aeabi_dsub+0x558>
    5f00:	08cb      	lsrs	r3, r1, #3
    5f02:	4203      	tst	r3, r0
    5f04:	d1de      	bne.n	5ec4 <__aeabi_dsub+0x558>
    5f06:	08d7      	lsrs	r7, r2, #3
    5f08:	0749      	lsls	r1, r1, #29
    5f0a:	430f      	orrs	r7, r1
    5f0c:	001c      	movs	r4, r3
    5f0e:	e7d9      	b.n	5ec4 <__aeabi_dsub+0x558>
    5f10:	2100      	movs	r1, #0
    5f12:	e771      	b.n	5df8 <__aeabi_dsub+0x48c>
    5f14:	2500      	movs	r5, #0
    5f16:	2700      	movs	r7, #0
    5f18:	e5e9      	b.n	5aee <__aeabi_dsub+0x182>
    5f1a:	002e      	movs	r6, r5
    5f1c:	0027      	movs	r7, r4
    5f1e:	3e20      	subs	r6, #32
    5f20:	40f7      	lsrs	r7, r6
    5f22:	2d20      	cmp	r5, #32
    5f24:	d02f      	beq.n	5f86 <__aeabi_dsub+0x61a>
    5f26:	2640      	movs	r6, #64	; 0x40
    5f28:	1b75      	subs	r5, r6, r5
    5f2a:	40ac      	lsls	r4, r5
    5f2c:	4650      	mov	r0, sl
    5f2e:	4320      	orrs	r0, r4
    5f30:	1e44      	subs	r4, r0, #1
    5f32:	41a0      	sbcs	r0, r4
    5f34:	2400      	movs	r4, #0
    5f36:	4338      	orrs	r0, r7
    5f38:	e6dc      	b.n	5cf4 <__aeabi_dsub+0x388>
    5f3a:	2480      	movs	r4, #128	; 0x80
    5f3c:	2500      	movs	r5, #0
    5f3e:	0324      	lsls	r4, r4, #12
    5f40:	4e13      	ldr	r6, [pc, #76]	; (5f90 <__aeabi_dsub+0x624>)
    5f42:	2700      	movs	r7, #0
    5f44:	e5d3      	b.n	5aee <__aeabi_dsub+0x182>
    5f46:	4650      	mov	r0, sl
    5f48:	4320      	orrs	r0, r4
    5f4a:	0007      	movs	r7, r0
    5f4c:	1e78      	subs	r0, r7, #1
    5f4e:	4187      	sbcs	r7, r0
    5f50:	2400      	movs	r4, #0
    5f52:	18bf      	adds	r7, r7, r2
    5f54:	e760      	b.n	5e18 <__aeabi_dsub+0x4ac>
    5f56:	000c      	movs	r4, r1
    5f58:	0017      	movs	r7, r2
    5f5a:	e58d      	b.n	5a78 <__aeabi_dsub+0x10c>
    5f5c:	000c      	movs	r4, r1
    5f5e:	0017      	movs	r7, r2
    5f60:	4e0b      	ldr	r6, [pc, #44]	; (5f90 <__aeabi_dsub+0x624>)
    5f62:	e589      	b.n	5a78 <__aeabi_dsub+0x10c>
    5f64:	001e      	movs	r6, r3
    5f66:	0027      	movs	r7, r4
    5f68:	3e20      	subs	r6, #32
    5f6a:	40f7      	lsrs	r7, r6
    5f6c:	2b20      	cmp	r3, #32
    5f6e:	d00c      	beq.n	5f8a <__aeabi_dsub+0x61e>
    5f70:	2640      	movs	r6, #64	; 0x40
    5f72:	1af3      	subs	r3, r6, r3
    5f74:	409c      	lsls	r4, r3
    5f76:	4650      	mov	r0, sl
    5f78:	4320      	orrs	r0, r4
    5f7a:	1e44      	subs	r4, r0, #1
    5f7c:	41a0      	sbcs	r0, r4
    5f7e:	4307      	orrs	r7, r0
    5f80:	2400      	movs	r4, #0
    5f82:	18bf      	adds	r7, r7, r2
    5f84:	e748      	b.n	5e18 <__aeabi_dsub+0x4ac>
    5f86:	2400      	movs	r4, #0
    5f88:	e7d0      	b.n	5f2c <__aeabi_dsub+0x5c0>
    5f8a:	2400      	movs	r4, #0
    5f8c:	e7f3      	b.n	5f76 <__aeabi_dsub+0x60a>
    5f8e:	46c0      	nop			; (mov r8, r8)
    5f90:	000007ff 	.word	0x000007ff
    5f94:	ff7fffff 	.word	0xff7fffff

00005f98 <__aeabi_dcmpun>:
    5f98:	b570      	push	{r4, r5, r6, lr}
    5f9a:	4e0e      	ldr	r6, [pc, #56]	; (5fd4 <__aeabi_dcmpun+0x3c>)
    5f9c:	030d      	lsls	r5, r1, #12
    5f9e:	031c      	lsls	r4, r3, #12
    5fa0:	0049      	lsls	r1, r1, #1
    5fa2:	005b      	lsls	r3, r3, #1
    5fa4:	0b2d      	lsrs	r5, r5, #12
    5fa6:	0d49      	lsrs	r1, r1, #21
    5fa8:	0b24      	lsrs	r4, r4, #12
    5faa:	0d5b      	lsrs	r3, r3, #21
    5fac:	42b1      	cmp	r1, r6
    5fae:	d004      	beq.n	5fba <__aeabi_dcmpun+0x22>
    5fb0:	4908      	ldr	r1, [pc, #32]	; (5fd4 <__aeabi_dcmpun+0x3c>)
    5fb2:	2000      	movs	r0, #0
    5fb4:	428b      	cmp	r3, r1
    5fb6:	d008      	beq.n	5fca <__aeabi_dcmpun+0x32>
    5fb8:	bd70      	pop	{r4, r5, r6, pc}
    5fba:	4305      	orrs	r5, r0
    5fbc:	2001      	movs	r0, #1
    5fbe:	2d00      	cmp	r5, #0
    5fc0:	d1fa      	bne.n	5fb8 <__aeabi_dcmpun+0x20>
    5fc2:	4904      	ldr	r1, [pc, #16]	; (5fd4 <__aeabi_dcmpun+0x3c>)
    5fc4:	2000      	movs	r0, #0
    5fc6:	428b      	cmp	r3, r1
    5fc8:	d1f6      	bne.n	5fb8 <__aeabi_dcmpun+0x20>
    5fca:	4314      	orrs	r4, r2
    5fcc:	0020      	movs	r0, r4
    5fce:	1e44      	subs	r4, r0, #1
    5fd0:	41a0      	sbcs	r0, r4
    5fd2:	e7f1      	b.n	5fb8 <__aeabi_dcmpun+0x20>
    5fd4:	000007ff 	.word	0x000007ff

00005fd8 <__aeabi_d2iz>:
    5fd8:	b530      	push	{r4, r5, lr}
    5fda:	4d13      	ldr	r5, [pc, #76]	; (6028 <__aeabi_d2iz+0x50>)
    5fdc:	030a      	lsls	r2, r1, #12
    5fde:	004b      	lsls	r3, r1, #1
    5fe0:	0b12      	lsrs	r2, r2, #12
    5fe2:	0d5b      	lsrs	r3, r3, #21
    5fe4:	0fc9      	lsrs	r1, r1, #31
    5fe6:	2400      	movs	r4, #0
    5fe8:	42ab      	cmp	r3, r5
    5fea:	dd10      	ble.n	600e <__aeabi_d2iz+0x36>
    5fec:	4c0f      	ldr	r4, [pc, #60]	; (602c <__aeabi_d2iz+0x54>)
    5fee:	42a3      	cmp	r3, r4
    5ff0:	dc0f      	bgt.n	6012 <__aeabi_d2iz+0x3a>
    5ff2:	2480      	movs	r4, #128	; 0x80
    5ff4:	4d0e      	ldr	r5, [pc, #56]	; (6030 <__aeabi_d2iz+0x58>)
    5ff6:	0364      	lsls	r4, r4, #13
    5ff8:	4322      	orrs	r2, r4
    5ffa:	1aed      	subs	r5, r5, r3
    5ffc:	2d1f      	cmp	r5, #31
    5ffe:	dd0b      	ble.n	6018 <__aeabi_d2iz+0x40>
    6000:	480c      	ldr	r0, [pc, #48]	; (6034 <__aeabi_d2iz+0x5c>)
    6002:	1ac3      	subs	r3, r0, r3
    6004:	40da      	lsrs	r2, r3
    6006:	4254      	negs	r4, r2
    6008:	2900      	cmp	r1, #0
    600a:	d100      	bne.n	600e <__aeabi_d2iz+0x36>
    600c:	0014      	movs	r4, r2
    600e:	0020      	movs	r0, r4
    6010:	bd30      	pop	{r4, r5, pc}
    6012:	4b09      	ldr	r3, [pc, #36]	; (6038 <__aeabi_d2iz+0x60>)
    6014:	18cc      	adds	r4, r1, r3
    6016:	e7fa      	b.n	600e <__aeabi_d2iz+0x36>
    6018:	4c08      	ldr	r4, [pc, #32]	; (603c <__aeabi_d2iz+0x64>)
    601a:	40e8      	lsrs	r0, r5
    601c:	46a4      	mov	ip, r4
    601e:	4463      	add	r3, ip
    6020:	409a      	lsls	r2, r3
    6022:	4302      	orrs	r2, r0
    6024:	e7ef      	b.n	6006 <__aeabi_d2iz+0x2e>
    6026:	46c0      	nop			; (mov r8, r8)
    6028:	000003fe 	.word	0x000003fe
    602c:	0000041d 	.word	0x0000041d
    6030:	00000433 	.word	0x00000433
    6034:	00000413 	.word	0x00000413
    6038:	7fffffff 	.word	0x7fffffff
    603c:	fffffbed 	.word	0xfffffbed

00006040 <__aeabi_i2d>:
    6040:	b570      	push	{r4, r5, r6, lr}
    6042:	2800      	cmp	r0, #0
    6044:	d030      	beq.n	60a8 <__aeabi_i2d+0x68>
    6046:	17c3      	asrs	r3, r0, #31
    6048:	18c4      	adds	r4, r0, r3
    604a:	405c      	eors	r4, r3
    604c:	0fc5      	lsrs	r5, r0, #31
    604e:	0020      	movs	r0, r4
    6050:	f000 f870 	bl	6134 <__clzsi2>
    6054:	4b17      	ldr	r3, [pc, #92]	; (60b4 <__aeabi_i2d+0x74>)
    6056:	4a18      	ldr	r2, [pc, #96]	; (60b8 <__aeabi_i2d+0x78>)
    6058:	1a1b      	subs	r3, r3, r0
    605a:	1ad2      	subs	r2, r2, r3
    605c:	2a1f      	cmp	r2, #31
    605e:	dd18      	ble.n	6092 <__aeabi_i2d+0x52>
    6060:	4a16      	ldr	r2, [pc, #88]	; (60bc <__aeabi_i2d+0x7c>)
    6062:	1ad2      	subs	r2, r2, r3
    6064:	4094      	lsls	r4, r2
    6066:	2200      	movs	r2, #0
    6068:	0324      	lsls	r4, r4, #12
    606a:	055b      	lsls	r3, r3, #21
    606c:	0b24      	lsrs	r4, r4, #12
    606e:	0d5b      	lsrs	r3, r3, #21
    6070:	2100      	movs	r1, #0
    6072:	0010      	movs	r0, r2
    6074:	0324      	lsls	r4, r4, #12
    6076:	0d0a      	lsrs	r2, r1, #20
    6078:	0b24      	lsrs	r4, r4, #12
    607a:	0512      	lsls	r2, r2, #20
    607c:	4322      	orrs	r2, r4
    607e:	4c10      	ldr	r4, [pc, #64]	; (60c0 <__aeabi_i2d+0x80>)
    6080:	051b      	lsls	r3, r3, #20
    6082:	4022      	ands	r2, r4
    6084:	4313      	orrs	r3, r2
    6086:	005b      	lsls	r3, r3, #1
    6088:	07ed      	lsls	r5, r5, #31
    608a:	085b      	lsrs	r3, r3, #1
    608c:	432b      	orrs	r3, r5
    608e:	0019      	movs	r1, r3
    6090:	bd70      	pop	{r4, r5, r6, pc}
    6092:	0021      	movs	r1, r4
    6094:	4091      	lsls	r1, r2
    6096:	000a      	movs	r2, r1
    6098:	210b      	movs	r1, #11
    609a:	1a08      	subs	r0, r1, r0
    609c:	40c4      	lsrs	r4, r0
    609e:	055b      	lsls	r3, r3, #21
    60a0:	0324      	lsls	r4, r4, #12
    60a2:	0b24      	lsrs	r4, r4, #12
    60a4:	0d5b      	lsrs	r3, r3, #21
    60a6:	e7e3      	b.n	6070 <__aeabi_i2d+0x30>
    60a8:	2500      	movs	r5, #0
    60aa:	2300      	movs	r3, #0
    60ac:	2400      	movs	r4, #0
    60ae:	2200      	movs	r2, #0
    60b0:	e7de      	b.n	6070 <__aeabi_i2d+0x30>
    60b2:	46c0      	nop			; (mov r8, r8)
    60b4:	0000041e 	.word	0x0000041e
    60b8:	00000433 	.word	0x00000433
    60bc:	00000413 	.word	0x00000413
    60c0:	800fffff 	.word	0x800fffff

000060c4 <__aeabi_ui2d>:
    60c4:	b510      	push	{r4, lr}
    60c6:	1e04      	subs	r4, r0, #0
    60c8:	d028      	beq.n	611c <__aeabi_ui2d+0x58>
    60ca:	f000 f833 	bl	6134 <__clzsi2>
    60ce:	4b15      	ldr	r3, [pc, #84]	; (6124 <__aeabi_ui2d+0x60>)
    60d0:	4a15      	ldr	r2, [pc, #84]	; (6128 <__aeabi_ui2d+0x64>)
    60d2:	1a1b      	subs	r3, r3, r0
    60d4:	1ad2      	subs	r2, r2, r3
    60d6:	2a1f      	cmp	r2, #31
    60d8:	dd15      	ble.n	6106 <__aeabi_ui2d+0x42>
    60da:	4a14      	ldr	r2, [pc, #80]	; (612c <__aeabi_ui2d+0x68>)
    60dc:	1ad2      	subs	r2, r2, r3
    60de:	4094      	lsls	r4, r2
    60e0:	2200      	movs	r2, #0
    60e2:	0324      	lsls	r4, r4, #12
    60e4:	055b      	lsls	r3, r3, #21
    60e6:	0b24      	lsrs	r4, r4, #12
    60e8:	0d5b      	lsrs	r3, r3, #21
    60ea:	2100      	movs	r1, #0
    60ec:	0010      	movs	r0, r2
    60ee:	0324      	lsls	r4, r4, #12
    60f0:	0d0a      	lsrs	r2, r1, #20
    60f2:	0b24      	lsrs	r4, r4, #12
    60f4:	0512      	lsls	r2, r2, #20
    60f6:	4322      	orrs	r2, r4
    60f8:	4c0d      	ldr	r4, [pc, #52]	; (6130 <__aeabi_ui2d+0x6c>)
    60fa:	051b      	lsls	r3, r3, #20
    60fc:	4022      	ands	r2, r4
    60fe:	4313      	orrs	r3, r2
    6100:	005b      	lsls	r3, r3, #1
    6102:	0859      	lsrs	r1, r3, #1
    6104:	bd10      	pop	{r4, pc}
    6106:	0021      	movs	r1, r4
    6108:	4091      	lsls	r1, r2
    610a:	000a      	movs	r2, r1
    610c:	210b      	movs	r1, #11
    610e:	1a08      	subs	r0, r1, r0
    6110:	40c4      	lsrs	r4, r0
    6112:	055b      	lsls	r3, r3, #21
    6114:	0324      	lsls	r4, r4, #12
    6116:	0b24      	lsrs	r4, r4, #12
    6118:	0d5b      	lsrs	r3, r3, #21
    611a:	e7e6      	b.n	60ea <__aeabi_ui2d+0x26>
    611c:	2300      	movs	r3, #0
    611e:	2400      	movs	r4, #0
    6120:	2200      	movs	r2, #0
    6122:	e7e2      	b.n	60ea <__aeabi_ui2d+0x26>
    6124:	0000041e 	.word	0x0000041e
    6128:	00000433 	.word	0x00000433
    612c:	00000413 	.word	0x00000413
    6130:	800fffff 	.word	0x800fffff

00006134 <__clzsi2>:
    6134:	211c      	movs	r1, #28
    6136:	2301      	movs	r3, #1
    6138:	041b      	lsls	r3, r3, #16
    613a:	4298      	cmp	r0, r3
    613c:	d301      	bcc.n	6142 <__clzsi2+0xe>
    613e:	0c00      	lsrs	r0, r0, #16
    6140:	3910      	subs	r1, #16
    6142:	0a1b      	lsrs	r3, r3, #8
    6144:	4298      	cmp	r0, r3
    6146:	d301      	bcc.n	614c <__clzsi2+0x18>
    6148:	0a00      	lsrs	r0, r0, #8
    614a:	3908      	subs	r1, #8
    614c:	091b      	lsrs	r3, r3, #4
    614e:	4298      	cmp	r0, r3
    6150:	d301      	bcc.n	6156 <__clzsi2+0x22>
    6152:	0900      	lsrs	r0, r0, #4
    6154:	3904      	subs	r1, #4
    6156:	a202      	add	r2, pc, #8	; (adr r2, 6160 <__clzsi2+0x2c>)
    6158:	5c10      	ldrb	r0, [r2, r0]
    615a:	1840      	adds	r0, r0, r1
    615c:	4770      	bx	lr
    615e:	46c0      	nop			; (mov r8, r8)
    6160:	02020304 	.word	0x02020304
    6164:	01010101 	.word	0x01010101
	...
    6170:	00020018 	.word	0x00020018
    6174:	20000004 	.word	0x20000004
    6178:	00000000 	.word	0x00000000
    617c:	00020018 	.word	0x00020018
    6180:	20000000 	.word	0x20000000
    6184:	00000000 	.word	0x00000000
    6188:	6f470a0d 	.word	0x6f470a0d
    618c:	25203a74 	.word	0x25203a74
    6190:	000a0d78 	.word	0x000a0d78
    6194:	75746573 	.word	0x75746573
    6198:	6f642070 	.word	0x6f642070
    619c:	0d21656e 	.word	0x0d21656e
    61a0:	00000000 	.word	0x00000000
    61a4:	25203a78 	.word	0x25203a78
    61a8:	20202064 	.word	0x20202064
    61ac:	79202020 	.word	0x79202020
    61b0:	6425203a 	.word	0x6425203a
    61b4:	20202020 	.word	0x20202020
    61b8:	3a7a2020 	.word	0x3a7a2020
    61bc:	0d642520 	.word	0x0d642520
    61c0:	0000000a 	.word	0x0000000a
    61c4:	42000800 	.word	0x42000800
    61c8:	42000c00 	.word	0x42000c00
    61cc:	42001000 	.word	0x42001000
    61d0:	42001400 	.word	0x42001400
    61d4:	42001800 	.word	0x42001800
    61d8:	42001c00 	.word	0x42001c00
    61dc:	00001436 	.word	0x00001436
    61e0:	00001432 	.word	0x00001432
    61e4:	00001432 	.word	0x00001432
    61e8:	00001494 	.word	0x00001494
    61ec:	00001494 	.word	0x00001494
    61f0:	0000144a 	.word	0x0000144a
    61f4:	0000143c 	.word	0x0000143c
    61f8:	00001450 	.word	0x00001450
    61fc:	00001482 	.word	0x00001482

00006200 <_global_impure_ptr>:
    6200:	2000001c 00464e49 00666e69 004e414e     ... INF.inf.NAN.
    6210:	006e616e 31300030 35343332 39383736     nan.0.0123456789
    6220:	44434241 30004645 34333231 38373635     ABCDEF.012345678
    6230:	63626139 00666564 69666e49 7974696e     9abcdef.Infinity
    6240:	4e614e00 00000000                       .NaN....

00006248 <__sf_fake_stderr>:
	...

00006268 <__sf_fake_stdin>:
	...

00006288 <__sf_fake_stdout>:
	...

000062a8 <__mprec_bigtens>:
    62a8:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
    62b8:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
    62c8:	7f73bf3c 75154fdd                       <.s..O.u

000062d0 <__mprec_tens>:
    62d0:	00000000 3ff00000 00000000 40240000     .......?......$@
    62e0:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
    62f0:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
    6300:	00000000 412e8480 00000000 416312d0     .......A......cA
    6310:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
    6320:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
    6330:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
    6340:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
    6350:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
    6360:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
    6370:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
    6380:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
    6390:	79d99db4 44ea7843                       ...yCx.D

00006398 <p05.6052>:
    6398:	00000005 00000019 0000007d 2b302d23     ........}...#-0+
    63a8:	6c680020 6665004c 47464567 50004300      .hlL.efgEFG.C.P
    63b8:	5849534f 00002e00                                OSIX...

000063bf <_ctype_>:
    63bf:	20202000 20202020 28282020 20282828     .         ((((( 
    63cf:	20202020 20202020 20202020 20202020                     
    63df:	10108820 10101010 10101010 10101010      ...............
    63ef:	04040410 04040404 10040404 10101010     ................
    63ff:	41411010 41414141 01010101 01010101     ..AAAAAA........
    640f:	01010101 01010101 01010101 10101010     ................
    641f:	42421010 42424242 02020202 02020202     ..BBBBBB........
    642f:	02020202 02020202 02020202 10101010     ................
    643f:	00000020 00000000 00000000 00000000      ...............
	...
    64bf:	004dfc00 004dde00 004d9800 004cb600     ..M...M...M...L.
    64cf:	004d9800 004dd000 004d9800 004cb600     ..M...M...M...L.
    64df:	004dde00 004dde00 004dd000 004cb600     ..M...M...M...L.
    64ef:	004cae00 004cae00 004cae00 00501400     ..L...L...L...P.
    64ff:	00565c00 00551c00 00551c00 00551800     .\V...U...U...U.
    650f:	00563400 00563400 00562600 00551800     .4V..4V..&V...U.
    651f:	00563400 00562600 00563400 00551800     .4V..&V..4V...U.
    652f:	00563c00 00563c00 00563c00 00584000     .<V..<V..<V..@X.
	...

00006540 <_init>:
    6540:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    6542:	46c0      	nop			; (mov r8, r8)
    6544:	bcf8      	pop	{r3, r4, r5, r6, r7}
    6546:	bc08      	pop	{r3}
    6548:	469e      	mov	lr, r3
    654a:	4770      	bx	lr

0000654c <__init_array_start>:
    654c:	000000dd 	.word	0x000000dd
    6550:	00000565 	.word	0x00000565

00006554 <_fini>:
    6554:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    6556:	46c0      	nop			; (mov r8, r8)
    6558:	bcf8      	pop	{r3, r4, r5, r6, r7}
    655a:	bc08      	pop	{r3}
    655c:	469e      	mov	lr, r3
    655e:	4770      	bx	lr

00006560 <__fini_array_start>:
    6560:	000000b5 	.word	0x000000b5
